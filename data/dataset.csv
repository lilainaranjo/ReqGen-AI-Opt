system;prompt;requirements
"2007 - e-store";"Given the following system description, tell me in full detail and without ambiguities or vagueness everything that someone implementing the system should know. If necessary, make assumptions as you see fit, providing concrete examples for any potential doubts that may arise-for instance, when there are references to time without specific durations, when conditions are mentioned but not explicitly defined, or when dealing with device connections, etc. Present the information in the form of functional and non-functional requirements.
The system is an e-store that allows users to configure and purchase products. The store provides comprehensive product details, product categorization, a search facility, customer profiles with personalization options, customer support, a shopping cart, multiple shipping methods, online shipment tracking, tax calculations, multiple payment methods, and a detailed sitemap. It also allows online order modifications or cancellations, product reviews and ratings, email confirmations, and offers online promotions, rewards, and financing options.";"Functional Requirements (FR)
FR1: The system shall display all the products that can be configured.
FR2: The system shall allow the user to select the product to configure.
FR3: The system shall display all the available components of the selected product.
FR4: The system shall enable the user to add one or more components to the configuration.
FR5: The system shall notify the user about any conflict in the current configuration.
FR6: The system shall allow the user to update the configuration to resolve conflicts.
FR7: The system shall allow the user to confirm the completion of the current configuration.
FR8: The system shall display detailed information about the selected products.
FR9: The system shall provide browsing options to view product details.
FR10: The system shall display a detailed product categorization to the user.
FR11: The system shall enable the user to enter search text on the screen.
FR12: The system shall enable the user to select multiple search options on the screen.
FR13: The system shall enable the user to navigate between search results.
FR14: The system shall display all matching products based on the search criteria.
FR15: The system shall notify the user when no matching products are found.
FR16: The system shall display only 10 matching results on the current screen.
FR17: The system shall allow the user to create a profile and set credentials.
FR18: The system shall allow the user to update profile information.
FR19: The system shall authenticate user credentials before allowing access to the profile.
FR20: The system shall display both active and completed order history in the customer profile.
FR21: The system shall allow the user to register for newsletters and surveys.
FR22: The system shall allow the user to select an order from the order history.
FR23: The system shall display the most frequently searched items by the user in the profile.
FR24: The system shall display detailed information about the selected order.
FR25: The system shall provide online help, FAQs, customer support, and a sitemap, all accessible upon request.
FR26: The system shall allow the user to enter a contact number for support personnel to call.
FR27: The system shall allow the user to select the type of support needed.
FR28: The system shall display customer support contact numbers.
FR29: The system shall allow the user to enter customer and product information for support.
FR30: The system shall store customer email information as a required part of the customer profile.
FR31: The system shall send an order confirmation email to the user.
FR32: The system shall display a detailed invoice for the current order once it is confirmed.
FR33: The system shall optionally allow the user to print the invoice.
FR34: The system shall allow the user to add or remove products from the shopping cart.
FR35: The system shall provide a shopping cart for online purchases.
FR36: The system shall display different shipping options provided by the shipping department.
FR37: The system shall enable the user to select a shipping method during the payment process.
FR38: The system shall display shipping charges.
FR39: The system shall display the estimated shipping duration.
FR40: The system shall allow the user to enter order information for tracking.
FR41: The system shall calculate the tax for the order.
FR42: The system shall display the current tracking information for the order.
FR43: The system shall display available payment methods.
FR44: The system shall display orders that are eligible for changes.
FR45: The system shall allow the user to select a payment method.
FR46: The system shall allow the user to select an order to be modified.
FR47: The system shall notify the user about any changes made to the order.
FR48: The system shall allow the user to cancel an order.
FR49: The system shall allow the user to change shipping and payment methods.
FR50: The system shall display reviews and ratings for each product when selected.
FR51: The system shall enable the user to submit reviews and ratings.
FR52: The system shall display all available financing options.
FR53: The system shall notify the user about the financing request status.
FR54: The system shall allow the user to select a financing option.
FR55: The system shall allow the user to view a detailed sitemap.
FR56: The system shall display all available promotions.
FR57: The system shall allow the user to select an available promotion.
FR58: The system shall allow the user to confirm the purchase.
FR59: The system shall enable the user to enter payment information.
FR60: The system shall provide a uniform look and feel across all web pages.
FR61: The system shall support the use of icons and toolbars.
FR62: The system shall display a digital image for each product in the catalog.
FR63: The system shall communicate with the Configurator to identify all available components for product configuration.
FR64: The shall communicate with the Content Manager to retrieve product specifications, offerings, and promotions.
FR65: The system shall communicate with the BillPay system to identify available payment methods, validate payments, and process transactions.
FR66: The system shall communicate with the Credit Management system to handle financing options.
FR67: The system shall communicate with the CRM system to provide customer support.
FR68: The system shall communicate with the Sales system for order management.
FR69: The system shall communicate with the Shipping system for order tracking and shipping method updates.
FR70: The system shall communicate with the external Tax system to calculate taxes.
FR71: The system shall communicate with the Export Regulation system to validate compliance.

Non-Functional Requirements (NFR)
NFR1: The system shall provide accessibility for users with disabilities.
NFR2: The system shall support multiple languages.
NFR3: The system shall use RAID V disk striping on all database storage disks.
NFR4: The system shall store all databases on redundant computers with automatic switchover.
NFR5: The system shall replicate databases to off-site storage locations.
NFR6: The system shall maintain a contractual agreement with an internet service provider for T3 access with 99.9999% availability.
NFR7: The system shall maintain a contractual agreement with an internet service provider ensuring 99.999% network availability.
NFR8: The product shall be web-based and must run on a web server.
NFR9: Performance shall depend on the client's hardware components.
NFR10: Initial load time shall depend on internet connection strength and the media from which the product is run.
NFR11: The system shall use secure sockets for all transactions involving confidential customer information.
NFR12: The system shall not store cookies containing confidential customer information.
NFR13: The system shall automatically log out customers after a period of inactivity, including passwords.
NFR14: The system shall confirm all transactions with the customer's web browser.
NFR15: The customer's web browser shall never display passwords in plain text.
NFR16: The system's back-end databases shall be encrypted.
NFR17: The customer's credit card number shall only be displayed with the last four digits visible.
NFR18: The system's back-end servers shall only be accessible to authenticated administrators.
NFR19: The system shall allow password resets but never display user passwords.
NFR20: The software's user interface shall be compatible with browsers such as Internet Explorer, Mozilla, and Netscape Navigator.
NFR21: The user interface shall be implemented using technologies such as Java Applet, MS FrontPage, or EJB."
"2005 - znix";"Given the following system description, tell me in full detail and without ambiguities or vagueness everything that someone implementing the system should know. If necessary, make assumptions as you see fit, providing concrete examples for any potential doubts that may arise-for instance, when there are references to time without specific durations, when conditions are mentioned but not explicitly defined, or when dealing with device connections, etc. Present the information in the form of functional and non-functional requirements.
Project ZNIX envisions a world that moves beyond traditional software application management, allowing users to handle information intuitively. The emphasis of this approach is on information and its semantics. It aims to make meaningful information accessible in ways that users themselves define as logical.
Product Functions:
• Provide a centralized archive for users' information.
• Offer a hierarchical model for managing archived information. Hierarchies may be based on inheritance, associations, or any other type of relationship defined by the user.
• Allow users to add, remove, modify, or back up arbitrary pieces of information (to removable storage devices) without disrupting the hierarchy.
• Assist users in building their information hierarchy by automating tasks such as data capturing and categorization.
• Provide a simple API for developing ZNIX-aware client applications.
The browser GUI should be designed so that even casual users can easily manage their information with little or no training. The majority of ZNIX users are expected to be home users, managerial staff, executives, and researchers, who are likely to have only basic IT skills.
The system design must be subjected to the following constraints: Hardware: Intel Pentium III or compatible 1-GHz PC with 256 megabytes of RAM.";"Functional Requirements (FR)
FR1: The system shall be capable of capturing information from software tools.
FR2: The system shall store captured data in a centralized data store. It may decide whether the information should be stored as entities or associations.
FR3: The user shall be able to view the information in the central store in a hierarchical manner that makes sense to him.
FR4: The system shall include a browser capable of displaying this hierarchy in a UI similar to Windows Explorer. Optionally, the browser may be integrated directly into Windows Explorer rather than being a standalone application.
FR5: The system shall leave a residual indicator in the data store to signify that a portion of the data has been archived.
FR6: The system's API shall expose at least the following functionalities to client processes:
1. Create, delete, and modify entities and entity groups.
2. Create, delete, and modify relationships between entities.
3. List and access entities using an API similar to a standard file system API.
4. Execute queries to retrieve entities based on different criteria.
FR7: The API that exposes entity listings shall be designed similarly to the System.IO APIs of the .NET platform, which provide directory and file listings.
FR8: The system shall provide a GUI for browsing the managed information, similar to Windows Explorer. The GUI shall also allow the user to specify relationships between disparate entities as they see fit.

Non-Functional Requirements (NFR)
NFR1: The system's GUIs shall be designed so that a user with basic knowledge of Windows 2000/XP can instinctively interact with them. Therefore, most GUIs may need to closely mimic popular Windows applications.
NFR2: The mean time between failures (MTBF) shall exceed three months.
NFR3: The system may operate only in single-user mode, with no networking capabilities.
NFR4: The framework shell shall not utilize more than 40 megabytes of RAM.
NFR5: The system shall protect against malicious scripts from remote websites attempting to access its information.
NFR6: The system shall safeguard against unintended corruption of information by the user.
NFR7: The ZNIX framework shall be licensed under the GNU Library General Public License.
NFR8: The system shall conform to ISO 10646 (Unicode UTF-8) and optionally to ISO 10646-1 (Unicode UTF-16) standards for character set encoding."
"2003 - pnnl";"Given the following system description, tell me in full detail and without ambiguities or vagueness everything that someone implementing the system should know. If necessary, make assumptions as you see fit, providing concrete examples for any potential doubts that may arise-for instance, when there are references to time without specific durations, when conditions are mentioned but not explicitly defined, or when dealing with device connections, etc. Present the information in the form of functional and non-functional requirements.
The automated diagnostic tool detects and identifies faults in chillers and cooling tower subsystems of HVAC units using sensed data acquired from the unit, unit specifications, unit installation and configuration data, and unit operation data (such as schedules). The tool is a software product primarily used by building operators and facility managers, with secondary use by HVAC service technicians, energy service providers, and operation supervisors.
Building operators will use the tool to monitor units under their responsibility, possibly from a central control room within the building. Service technicians will utilize the product on-site during repair and maintenance visits or off-site between visits. Energy service providers, responsible for multiple customers and facilities, will use the product to monitor numerous units remotely, potentially across different buildings, to check for inefficiencies and issues requiring service personnel dispatch. Finally, building operator supervisors will use the tool to guide decisions regarding operator assignments and task prioritization.
The tool will provide users with a visual indication of faults, descriptive information about the faults and their causes, and suggested corrective actions. It will store diagnostic results for future retrieval and use. The software requirements described in this document apply to HVAC systems and associated subsystems, including chillers, cooling towers, and boilers. However, the initial version of the tool will focus solely on diagnostics for chillers and cooling towers.
The tool will automate diagnostic processes that were previously performed through a visual analysis of graphical data by a human expert. The data-preprocessing component will collect and refine data describing the subsystem under diagnosis, filtering and preparing it for input to the diagnostic component. This data includes sensed data (e.g., temperatures, pressures, electrical current, machine states, etc.) and fixed data describing the characteristics of the subsystem under diagnosis, such as specifications, design information, operating characteristics, and set points. The data may be processed through averaging, trending, or other statistical analyses.
Sensed data can originate from data acquisition hardware either in real time or at any arbitrary time after acquisition. Fixed data will typically be compiled before the diagnostic tool operates and will be retrieved from permanent storage as needed. The diagnostic component will detect and identify faults in HVAC subsystem operations based on sensed and fixed data from the data-preprocessing component.
The output component will display and record diagnostic results. These results will be presented to the user in a simple graphical and textual format. Additionally, the results will be stored in permanent storage for future retrieval and analysis.";"Functional Requirements (FR)
FR1: The system shall classify users into two types: General users shall have access to a limited set of tool functionalities. Administrators shall have all the privileges of general users, plus the ability to configure the system, modify fixed data, and adjust diagnostic settings.
FR2: The system shall acquire sensed data in real time from data acquisition devices and HVAC units under diagnosis, as well as from data files containing previously acquired data (though not simultaneously). The system shall also input fixed data provided by the user. All sensed and fixed data used in automated diagnostics shall be stored in permanent storage for post-analysis and result retrieval.
FR3: The system shall associate an absolute timestamp with each sensed data item from the moment its acquisition is completed. This timestamp shall persist throughout the data's lifecycle, including permanent storage.
FR4: The system shall allow sensed data to be input from an electronic file, though not simultaneously with sensed data from external acquisition hardware. The input file shall be a single ASCII text file, contain tab or comma-delimited columns and begin with a required header, where the first column shall list ""Building Identifier"" and ""Input Identifier"" entries in that order. The subsequent columns shall list integer identifiers for inputs and corresponding buildings.
FR5: The system shall support comment rows above and below the required rows. These comment rows are identified by a '#' as the first character of the first column. These rows are ignored by the tool. The first uncommented column in the file after the required headers shall list the absolute time, in ascending order, associated with all entries in subsequent columns of the row. Each additional column in the file shall pertain to one and only one sensed parameter. Data values in the same row of the file correspond to identical time values. All columns in the file shall have the same number of rows.
FR6: The system shall qualify each sensed data item for certitude during the acquisition process. Data shall be deemed in doubt if the system fails to acquire it (e.g., due to communication errors) or the data falls outside the expected range. Otherwise, the sensor value will be deemed accurately acquired.
FR7: The system shall classify sensed data as in doubt if acquisition failures persist for a default number of consecutive samples, dependent on the sensor type.
FR8: The system shall store all sensed data used in or supporting diagnostic analyses in permanent storage.
FR9: The system shall indicate missing data in permanent storage using a unique placeholder (e.g., a null value or a clearly distinguishable sequence of characters).
FR10: The system shall store sensed data with a precision of three significant figures.
FR11: The system shall validate sensed data against expected ranges of values.
FR12: The administrator shall have the ability to modify the expected range of sensed data for validation purposes.
FR13: The system shall associate each continuous parameter with one or more tolerance levels, each corresponding to a different sensitivity setting.
FR14: The system shall log all errors related to data acquisition, validation, conversion, or storage. Selected errors shall be reported to the user.
FR15: The system shall detect and identify operational and performance faults in chiller and cooling tower subsystems of HVAC units using predefined algorithms. The system shall be designed to allow future expansion for additional subsystems. All identified faults, their causes, and sources shall be stored in permanent storage for further analysis.
FR16: The system shall monitor performance and operational parameters for chillers and cooling towers and identify faults in the specified fault categories.
FR17: The system shall associate each identified fault with a description of the problem, its possible causes, and a recommended corrective action.
FR18: The system shall allow the addition of diagnostic algorithms for other HVAC subsystems.
FR19: The system shall not execute a diagnostic algorithm if any required input data is missing. The user shall be notified when an algorithm cannot process due to missing data.
FR20: The system shall log all errors related to diagnostic algorithm failures. Selected errors shall be reported to the user.
FR21: The system shall monitor the unit under diagnosis in real time or batch mode, for an indefinite period or until input data is no longer available, and log diagnostic results as they are determined.
FR22: The system shall store diagnostic results along with the absolute time of occurrence, the identity of the diagnosed unit and the identity of the diagnostic.
FR23: The administrator shall be able to adjust the sensitivity of the diagnostic analysis to increase or decrease the probability of fault detection.
FR24: The system shall display and record diagnostic results in a simple graphical and textual format. Diagnostic results shall be saved in permanent storage for later retrieval, display, and analysis.
FR25: The administrator shall be able to specify diagnostic results that should not be reported, effectively disabling detection.
FR26: The display of diagnostic results shall include a description of the fault, potential causes of the fault, the fault's location, and the absolute time of occurrence.

Non-Functional Requirements (NFR)
NFR1: The interactive areas in the main, systems, and condition windows shall include the entire width of the window surrounding the selected item, including diagnostic indicators.
NFR2: The window displaying diagnostic results shall increase in height as needed, up to a maximum of ten entries. If additional items exist beyond this limit, a scrollbar shall appear. A summary set of diagnostic indicators shall appear above or below the displayed list to summarize hidden diagnostics.
NFR3: The system shall display the current time in the building, subsystem, and condition windows when operating in real-time mode. In batch mode, the time displayed shall correspond to the entry currently being processed.
NFR4: If only a single building is defined, the subsystems window shall become the main window and retain all main window functionalities as described in these specifications.
NFR5: Each system window shall display an animated graphical feature to indicate the status of the diagnostic process (active or inactive).
NFR6: The subsystem window shall be modal to the building window, the condition window shall be modal to the subsystem window, and the diagnostic history and information windows shall be modal to the condition window.
NFR7: Significant software operation errors shall be logged in permanent storage with sufficient details to assist administrators and support staff in troubleshooting. Selected errors shall also be reported to the user.
NFR8: Logged software errors shall include the absolute time of occurrence, the name of the software module where the error occurred, the name of the software function where the error occurred, and a description of the error.
NFR9: The system's user interface shall consist of six windows: main window, configuration window, subsystems window, condition window, diagnostic information window, and diagnostic history window."
"2007 - eirene fun 7";"Given the following system description, tell me in full detail and without ambiguities or vagueness everything that someone implementing the system should know. If necessary, make assumptions as you see fit, providing concrete examples for any potential doubts that may arise-for instance, when there are references to time without specific durations, when conditions are mentioned but not explicitly defined, or when dealing with device connections, etc. Present the information in the form of functional and non-functional requirements.
An EIRENE network is a railway telecommunications network based on the ETSI GSM standard, which complies with all mandatory requirements specified in the EIRENE FRS and SRS. An EIRENE network may also include optional features, which shall be implemented as specified in the EIRENE FRS and SRS. The EIRENE network excludes terminals.
To meet the functionality and performance requirements of EIRENE, the following system services are required:
− Voice services, such as point-to-point calls public emergency calls...
− Data services, such as text message bearer service, bearer service for general data applications...
− Call related services, such as auto answer system, call supervisory indications, charging information...
− Railway specific applications: support for functional addressing by train, engine or coach number or functional number, calling specific persons depending upon user location... 
− Direct mode facility for local set-to-set operation without network infrastructure.
− Railway specific features: set-up of urgent or frequent calls through single keystroke or similar, display of functional identity of calling/called party...
Three distinct mobile radio types are required, based on their role and operating environment:
a. Cab radio – Used by train drivers and other on-train systems (e.g., ERTMS/ETCS).
b. General purpose radio – Used by railway personnel for general communication.
c. Operational radio – Used by railway personnel involved in train operations, such as shunting and trackside maintenance.";"Functional Requirements (FR)
FR1: The system shall support voice call services between any combination of fixed and mobile equipment users.
FR2: The system shall support point-to-point voice calls between any two call parties.
FR3: The system shall allow users to make public emergency point-to-point voice calls, including '112' calls, which shall not be used for railway emergencies.
FR4: The system shall support broadcast voice calls, providing one-way voice communication from a single user to multiple users in a predefined local area within the same call group.
FR5: The system shall allow modification of call group composition within the network. A single user shall be able to belong to one or more call groups.
FR6: The system shall allow modification of the local area over which broadcast calls are implemented within the network.
FR7: The system shall ensure that only the user who initiated the call can talk, while other users can only listen.
FR8: The system shall support group voice calls, enabling communication among multiple users in a predefined local area within the same call group.
FR9: The system shall support multi-party voice communication between up to six different parties.
FR10: The system shall allow any party involved in a multi-party voice call to speak simultaneously.
FR11: The network shall support the transmission of point-to-point and point-to-multipoint text messages from ground to mobile users.
FR12: The network shall support the receipt of mobile-originated text messages by the ground.
FR13: If the text message facility is implemented, it shall not interfere with the ability of users to make or receive high-priority voice or data calls.
FR14: The system shall support data communications between ground and mobile users for applications such as timetable information, maintenance and diagnostic applications, e-mail, remote database access.
FR15: The network shall support point-to-point data communications.
FR16: The network shall support fax transmissions between ground and mobile users.
FR17: Where fax functionality is provided, the system shall allow interruption of fax transmissions to make or receive high-priority voice or data calls.
FR18: The system shall support data communications for ERTMS/ETCS Level 2 or 3 where implemented.
FR19: The system shall support train control communications, which may have low data rates per train but high density in certain areas.
FR20: The system shall display the identity of the called or calling party in the form of a standard telephone number.
FR21: The system shall allow the identity of the called or calling party to be displayed as a textual description of their function.
FR22: The system shall provide an option to prevent the identity of certain users from being displayed on mobile devices, whether when calling, receiving a call, or both.
FR23: The network shall provide a mechanism for assigning different priority levels to calls.
FR24: The system shall allow higher-priority calls to override (preempt) existing lower-priority calls.
FR25: Preempted calls shall be discontinued, and the new higher-priority call shall be connected instead.
FR26: Access to the EIRENE network shall be restricted to authorized users.
FR27: Unauthorized users shall not be able to access any network functions or services.
FR28: The system shall allow incoming calls or data messages to be forwarded to another user.
FR29: The system shall allow users to consult with the intended recipient before forwarding a call.
FR30: The system shall support different types of call forwarding, including automatically forward the incoming call without any user interaction (unconditional), automatically forward the incoming call without user interaction if the user is busy in an existing call (busy), automatically forward the incoming call if there is no reply from the intended recipient (no reply), automatically forward the incoming call if the intended recipient cannot be contacted via the network (not reachable).
FR31: The network shall allow users to place a call on hold and rejoin it later.
FR32: The system shall notify users engaged in a call of other incoming call attempts.
FR33: The network shall provide information on call rates and ongoing call charges where applicable.
FR34: The system shall allow network management to restrict specific users from calling external networks and calling or receiving calls from predefined numbers.
FR35: The EIRENE network shall support railway-specific services, including functional addressing including registration/deregistration, location dependent addressing, shunting mode, railway emergency calls.
FR36: The operational radio shall call authorised users.
FR37: The operational radio shall call controller.
FR38: The operational radio shall send and receive railway emergency calls.
FR39: The operational radio shall receive incoming calls.
FR40: The operational radio shall group and broadcast calls.
FR41: The operational radio shall terminate calls.
FR42: The operational radio shall send and receive shunting mode communications.
FR43: The operational radio shall enter/leave direct mode.
FR44: The user shall be able to switch radio on/off in the operational radio.
FR45: The user shall be able to select language in the operational radio.
FR46: The user shall be able to select mobile radio network in the operational radio.
FR47: The operational radio shall have a computer interface.
FR48: The user shall be able to store/retrieve numbers and their details in the operational radio.
FR49: The user shall be able to adjust loudspeaker volume in the operational radio.
FR50: The operational radio shall be able to register and deregister functional numbers.
FR51: The general purpose radio shall be able to call authorised users.
FR52: The general purpose radio shall be able to cansend Railway emergency calls.
FR53: The general purpose radio shall be able to receive Railway emergency calls
FR54: The general purpose radio shall be able to receive incoming calls.
FR55: The general purpose radio shall be able to group and broadcast calls.
FR56: The general purpose radio shall be able to terminate calls.
FR57: The user shall be able to switch radio on/off in the general purpose radio.
FR58: The user shall be able to select language in the general purpose radio.
FR59: The user shall be able to select mobile radio network in the general purpose radio.
FR60: The general purpose radio shall have a computer interface.
FR61: The user shall be able to store/retrieve numbers and their details in the general purpose radio.
FR62: The user shall be able to adjust loudspeaker volume in the general purpose radio.
FR63: The general purpose radio shall be able to register and deregister functional numbers.
FR64: The cab radio shall be able to call the primary controller, the secondary controller and the power supply controller.
FR65: The cab radio shall be able to call other drivers in the area.
FR66: The cab radio shall be able to send Railway emergency call.
FR67: The cab radio shall be able to confirm receipt of Railway emergency call.
FR68: The cab radio shall be able to communicate with other drivers on same train.
FR69: The cab radio shall be able to call train staff.
FR70: The cab radio shall be able to call other authorised users.
FR71: The cab radio shall be able to receive incoming voice calls.
FR72: The cab radio shall be able to terminate calls.
FR73: The cab radio shall be able to receive text messages.
FR74: The cab radio shall be able to enter/leave shunting mode.
FR75: The cab radio shall be able to enter/leave direct mode.
FR76: The cab radio shall be able to monitor calls to other on-train users/devices.
FR77: The cab radio shall be able to forward calls/cancel call forwarding to/from driver handheld.
FR78: The cab radio shall be able to switch radio MMI on and off.
FR79: The cab radio shall be able to select language.
FR80: The cab radio shall be able to adjust loudspeaker volume.
FR81: The cab radio shall be able to select mobile radio network.
FR82: The cab radio shall be able to register and deregister train number.
FR83: The cab radio shall be able to register and deregister on-train users.
FR84: The cab radio shall be able to register and deregister stock number.
FR85: The cab radio shall be able to store/retrieve numbers and their details.
FR86: The cab radio shall be able to invoke supplementary services.
FR87: The cab radio shall be able to invoke tests.
FR88: The cab radio shall be able to automatically connect incoming calls to appropriate on-train users or devices (conductor, public address system, data systems, etc).
FR89: The cab radio shall be able to automatically establish outgoing calls initiated by on-train users or devices.
FR90: The cab radio shall be able to automatically handle calls of varying priorities.
FR91: The cab radio shall be able to send to the controller(s) a signal on activation of driver safety device.
FR92: The cab radio shall be able to transmit Railway emergency call event indication to 'train-borne recorder'.
FR93: The cab radio shall be able to run-time diagnostics.

Non-Functional Requirements (NFR)
NFR1: The network shall support data rates of at least 2.4 kbit/s."
"2010 - digital home 1.3";"Given the following system description, tell me in full detail and without ambiguities or vagueness everything that someone implementing the system should know. If necessary, make assumptions as you see fit, providing concrete examples for any potential doubts that may arise-for instance, when there are references to time without specific durations, when conditions are mentioned but not explicitly defined, or when dealing with device connections, etc. Present the information in the form of functional and non-functional requirements.
The Digital Home (DH) system, for the purposes of this document, is a system that will allow a home user to manage devices that control the environment of a home. The user communicates through a personal web page on the DigitalHome web server or on a local home server. The DH web server communicates, through a home wireless gateway device, with the sensor and controller devices in the home. The product is based on the Digital Home High Level Requirements Definition [HLRD 2010] is intended as a prototype, which will allow business decisions to be made about future development of a commercial product. The scope of the project will be limited to the management of devices which control temperature, humidity, security, and power to small appliances and lighting units, through the use of a web-ready device. The Digital Home components consist of household devices (e.g., a heating and air conditioning unit, a security system, and small appliances and lighting units, etc.), sensors and controllers for the devices, communication links between the components, and a computer system, which will manage the components.";"Functional Requirements (FR)
FR1: The DigitalHome System shall allow a web-ready computer, cell phone or PDA to control a home's temperature, humidity, lights, security, and the state of small appliances.
FR2: The communication center of the DH system shall be a DH home web server, through which a user shall be able to monitor and control home devices and systems.
FR3: Each DigitalHome shall contain a master control device (the DH Gateway Device) that connects to the home's broadband Internet connection, and uses wireless communication to send and receive communication between the DigitalHome system and the home devices and systems.
FR4: The DigitalHome shall be equipped with various environmental controllers and sensors (temperature controller-sensors: thermostats, humidity controller-sensors: humidistats, contact sensors, security sound and light alarms, and power switches).
FR5: The system shall allow sensor values to be read via wireless communication and saved in the home database.
FR6: The system shall allow controller values to be sent to controllers to change the DH environment.
FR7: The DigitalHome programmable thermostat shall allow a user to monitor and control a home's temperature from any location, using a web ready computer, cell phone, or PDA.
FR8: The system shall allow thermostats to be controlled individually or collectively so that temperature can be managed at different levels in various home spaces.
FR9: The system shall allow up to twenty-four one‑hour settings per day for every day of the week to be scheduled for each thermostat.
FR10: Up to eight thermostats shall be placed in rooms throughout the home.
FR11: If a thermostat device allows a user to make a manual temperature setting, the setting shall remain in effect until the end of the planned or default time period, after which the planned or default setting shall be used for the next time period.
FR12: A thermostat unit shall communicate via wireless signals with the master control unit.
FR13: The system shall support both Fahrenheit and Celsius temperature values.
FR14: The system shall be compatible with a centralized HVAC (Heating, Ventilation and Air Conditioning) systems: gas, oil, electricity, solar, or a combination of two or more.
FR15: The system shall adhere to the standards, policies and procedures of the American Society of Heating, Refrigerating and Air-Conditioning Engineers [ASHRAE 2010].
FR16: The DigitalHome programmable humidistat shall allow a user to monitor and control a home's humidity from any location, using a web ready computer, cell phone, or PDA.
FR17: Up to eight humidistats shall be placed in rooms throughout the home.
FR18: The system shall allow up to twenty-four one‑hour settings per day for every day of the week to be scheduled for each humidistat.
FR19: If a humidistat device allows a user to make a manual humidity setting, the setting shall remain in effect until the end of the planned or default time period, after which the planned or default setting shall be used for the next time period.
FR20: The DigitalHome system shall use wireless signals to communicate, through the master control unit, with the humidistats.
FR21: The DigitalHome system shall be able to manage up to fifty door and window contact sensors.
FR22: The DigitalHome system shall be able to activate both light and sound alarms: one sound alarm and one light alarm subsystem, with multiple lights.
FR23: When a security breach occurs and a contact sensor is set OPEN, the alarm system shall be activated.
FR24: The DigitalHome programmable Appliance Manager shall provide for management of a home's small appliances, including lighting units, by allowing a user to turn them on or off as desired.
FR25: The Appliance Manager shall be able to manage up to one hundred 115 volt, 10 amp power switches.
FR26: The system shall be able to provide information about the state of a power switch (OFF or ON), indicating the whether an appliance connected to the power switch is OFF or ON.
FR27: The system shall be able to change the state of a power switch (from OFF to ON, or from ON to OFF), thereby changing the state of an appliance connected to the power switch.
FR28: If a user manually changes the state of a power switch device, the device shall remain in that state until the end of the planned or default time period, after which the planned or default setting shall be used for the next time period.
FR29: The DigitalHome Planner Planner shall provide a user with the capability to direct the system to set various preset home parameters (temperature, humidity, security contacts, and on/off appliance/light status) for certain time periods.
FR30: The DigitalHome Planner shall provide a monthly planner.
FR31: For a given month and year, a user shall be able to create or modify a month plan that specifies for each day, for up to four daily time periods, the environmental parameter settings (temperature, humidity, contact sensors and power switches).
FR32: A user shall be able to override planned parameter values, through the DH website, or if available, through manual switches on household devices.
FR33: For a given month and year, in the past two years, the system shall be able to provide a report on the management and control of the home.
FR34: The monthly report shall contain daily average, maximum (with time) and minimum (with time) values of temperature and humidity for each thermostat and humidistat, respectively.
FR35: The monthly report shall provide the day and time for which any security breaches occurred, that is, when the security alarms were activated.
FR36: The monthly report shall provide a section that indicates the periods during which the system was not in operation.

Non-Functional Requirements (NFR)
NFR1: The displays of environmental conditions (temperature, humidity, contact sensors and power switches) shall be updated at least every two seconds.
NFR2: Each sensor (temperature, humidity, contact sensor, power state) shall have a minimum data acquisition rate of 10 Hz.
NFR3: Each environmental sensor or controller device shall be within 1000 feet of the master control device, in order to be in communication with the system.
NFR4: The DigitalHome System must be highly reliable with no more than 1 failure per 10,000 hours of operation.
NFR5: The DH System shall back up all system data (configuration, default parameter settings, planning, and usage data) on a daily basis, with the backup time set by the DH Technician during system setup.
NFR6: If the DH System fails (due to power loss, loss of internet access, or other software or hardware failure), the system recovery mechanism shall restore system data (configuration, default parameter settings, planning, and usage data) from the most recent backup.
NFR7: All DigitalHome operations shall incorporate exception handling so that the system responds to the user with a clear, descriptive message when an error or an exceptional condition occurs.
NFR8: Upon installation, a DigitalHome user account shall be established. The DigitalHome web system shall provide for authentication and information encryption through a recognized, reliable and effective security technology, such as Transport Layer Security. 
NFR9: Log in to an account shall require entry of an account name and a password.
NFR10: The development of the DH system shall use methods and techniques to support system maintenance, including:
· Documentation of requirements, design, and code.
· The use of abstraction, information hiding and module independence in system design.
· Adherence to IEEE standards [IEEE830, IEEE1008, IEEE1016, IEEE1028] and the HomeOwner Coding Standard [HO4710].
NFR11: The DigitalHome System shall provide users with online documentation about the DigitalHome system installed in their home."
"2010 - split merge";"Given the following system description, tell me in full detail and without ambiguities or vagueness everything that someone implementing the system should know. If necessary, make assumptions as you see fit, providing concrete examples for any potential doubts that may arise-for instance, when there are references to time without specific durations, when conditions are mentioned but not explicitly defined, or when dealing with device connections, etc. Present the information in the form of functional and non-functional requirements.
PDF Split and Merge is a FOSS tool that can split, merge and manipulate PDF documents. It provides a Graphical User Interface (GUI) and a shell Interface (Console). It is available in two versions, basic and enhanced, both of which are open source. The GUI provides users with all the functionality needed to handle one or multiple PDF files. The functionalities are distributed in plugins, where each plugin performs a specific function and loads in the main GUI. In the basic version, the GUI contains six plugins:
− Alternate Mix
− Merge/Extract
− Rotate
− Split
− Visual document composer
− Visual reorder
The Console is a command-line application that serves as the core application, providing both enhanced and basic features for PDF manipulation.";"Functional Requirements (FR)
FR1: The user shall be able to split a PDF document into multiple parts using predefined options. The system shall allow the user to save the output PDF files in a selected directory.
FR2: The system shall provide the following split options:
− Burst: Split the input file into single pages.
− Split every ""n"" pages: Split the input file at every ""n"" pages.
− Split even pages: Split the input file at every even-numbered page.
− Split odd pages: Split the input file at every odd-numbered page.
− Split after these pages: Split the input file at the specified page numbers.
− Split at this size: Split the input file into smaller files of the given approximate size.
− Split by bookmark level: Split the input file at every page linked by bookmarks of the selected level.
FR3: The user shall be required to enter the password before processing a protected PDF and then reload the PDF.
FR4: The user shall be able to select a document from a directory for splitting. Once imported, the system shall display information about the file (e.g., number of pages, PDF version).
FR5: The user shall be able to specify the destination folder for the output files, either a specific location or the same as the source. The user shall also be able to choose whether the output files should be compressed and define the PDF version of the generated documents.
FR6: The system shall start the splitting process when the user presses the ""RUN"" button.
FR7: The user shall be able to merge multiple PDF documents, subsections or extract sections from them and combine them into a single document.
FR8: The user shall be able to change the order of files using the ""Move Up"" and ""Move Down"" buttons.
FR9: The system shall allow the user to export the list of selected files as an XML file, which can be used as input for the console ""concat"" command with the ""-l"" option.
FR10: The system shall allow the user to merge two PDF documents by alternating pages (e.g., for documents scanned from one-sided scanners).
FR11: The user shall be able to modify the following parameters:
- Reverse first document: Take pages from the first document in reverse order.
- Reverse second document: Take pages from the second document in reverse order.
- Number of pages per switch: Define how many pages should be taken from one document before switching to the other. The default behavior is one page per document.
FR12: The system shall start the mixing process when the user presses the ""RUN"" button.
FR13: The system shall allow users to rotate entire PDF documents in bulk. Users shall not be able to select individual pages for rotation.
FR14: The user shall be able to modify the following parameters:
- Clockwise rotation (in degrees): The system shall allow users to select rotation angles (90°, 180°, 270°).
- Pages selection: The system shall allow users to rotate all pages, even pages, or odd pages.
FR15: The system shall provide output file naming options based on user-defined patterns.
FR16: The system shall start the rotation process when the user presses the ""RUN"" button.
FR17: The system shall provide a user-friendly interface for manipulating specific pages within a PDF file, including rotation, reordering, and deletion.
FR18: The user shall be able to change the zoom level of the thumbnail preview.
FR19: The system shall allow users to combine multiple PDF documents into a single document using an intuitive interface. Users shall be able to apply basic editing functions (e.g., reorder, rotate, reverse pages) before finalizing the document.
FR20: The system shall allow users to save the working environment, preserving the configuration of all active plugins for future sessions.
FR21: The system shall display log messages when requested by the user. 
FR22: The system shall categorize log messages using color codes:
- Black (DEBUG/INFO): General application information.
- Blue (WARNING): Warnings indicating unexpected but manageable situations.
- Red (ERROR/FATAL): Critical errors that prevent normal operation.
FR23: The system shall allow users to select and copy log messages, clear logs, or save them to a file.
FR24: Logging shall be enabled only if the log level setting is not set to ""OFF"".
FR25: The system shall allow users to modify their working environment, including:
- Application language
- GUI theme
- Alert sounds and dialog box preferences
- Log detail level
- Thumbnail creation library
- Auto-update settings
- Default working environment and directory
FR26: The system shall require a restart to apply changes to settings.

Non-Functional Requirements (NFR)
NFR1: The system shall allow only one document to be split at a time.
NFR2: The system shall require PDF version 1.5 or higher to enable output file compression.
NFR3: The system shall allow only two documents to be mixed at a time.
NFR4: The system shall allow only one document to be reordered at a time.
NFR5: The system shall be compatible with any operating system that supports a Java Runtime Environment (JRE) and PDF files, ensuring platform independence.
NFR6: The system shall run on any platform where a Java Virtual Machine (JVM) version 1.6 or higher is available. It shall be tested on various versions of Microsoft Windows, GNU/Linux distributions, and macOS."
"2009 - peazip";"Given the following system description, tell me in full detail and without ambiguities or vagueness everything that someone implementing the system should know. If necessary, make assumptions as you see fit, providing concrete examples for any potential doubts that may arise-for instance, when there are references to time without specific durations, when conditions are mentioned but not explicitly defined, or when dealing with device connections, etc. Present the information in the form of functional and non-functional requirements.
The tool's name is Peazip. The basic functions that Peazip features include creating compressed archives, updating compressed archives, extracting content of compressed archives, file and archive management tools (robust copy, split and join operations, fast or secure deletion, byte to byte comparison, calculation of a wide set of checksums and hashes over selected files), appending timestamp to archive name (useful for archiving and backup purpose) and two factor authentication (password and keyfile) for the managed archives. All pre-mentioned functions' parameters can be modified and adapted to user's needs and preferences from a settings menu.";"Functional Requirements (FR)
FR1: The user shall be able to browse and access all areas of the computer system where PeaZip is installed (e.g., storage drives, desktop, user documents, etc.), including files and archives.
FR2: The user shall be able to instantly access PeaZip's main interfaces, specifically the Create Archive and Extraction interfaces. The user shall also be able to change the view mode of files and archives displayed in the file manager interface. 
FR3: The user shall be able to modify the selection method of files and archives displayed in the file manager interface.
FR4: The system shall provide file management tools that are not strictly related to archiving, including:
- Secure file deletion
- Byte-to-byte comparison of two files
- File integrity checking
- File split and join operations
- File information display
- Hexadecimal preview of a file's contents.
FR5: The user shall be able to extract the contents of a selected compressed archive into a folder. The user shall define the folder's name and storage location. The archive from which the contents are extracted shall remain intact, retaining its original name and location.
FR6: The system shall support read-only (browsing and extraction) formats, including:
- 7z, 7z-sfx, ARC/WRC, BZ2/TBZ2, GZ/TGZ, PAQ/LPAQ, PEA, QUAD/BALZ, split, TAR, UPX, ZIP
- ACE, ARJ, CAB, CHM, COMPOUND (MSI, DOC, XLS, PPT), CPIO, ISO, Java (JAR, EAR, WAR)
- Linux packages (DEB, PET/PUP, RPM, SLP), LHA/LZH, LZMA, Mac (DMG/HFS), NSIS, OpenOffice files
- PAK/PK3/PK4, RAR, SMZIP, U3P, UDF, VHD, WIM, XAR, XPI, XZ, Z/TZ
FR7: The user shall be able to:
- Compress one or more files or archives into a new compressed archive.
- Create multiple compressed archive volumes, each with a size equal to or smaller than the original file(s).
- Update an existing archive by adding new files or archives.
- Select specific files or archives to include in an archive.
FR8: The user shall be able to drag and drop files or archives between any location on the computer system and PeaZip. This functionality shall be supported in the File Manager, Create Archive, and Extraction interfaces.
FR9: The system shall allow users to encrypt (lock) archives using a password. If an encrypted archive is accessed, PeaZip (or any compatible application) shall require the password for further actions such as browsing, updating, or extracting its contents.
- The system shall support two-factor authentication, allowing users to use a keyfile in addition to a password for added security.
- The system shall allow users to generate a random password and create a random keyfile.
- The system shall support the decryption (unlocking) of encrypted archives.
FR10: The system shall display a graphical representation of ongoing operations through its graphical wrapper, PeaLauncher. This interface shall display real-time progress and final execution results.
FR11: The user shall be able to modify PeaZip's functionality to suit their needs and preferences. The available settings shall include:
- Application language
- Execution preferences for PeaZip's utilities
- PeaLauncher settings
- Character encoding
- Supported archiving and compression formats
- File and system management tools
- Graphical layout of the application.

Non-Functional Requirements (NFR)
NFR1: The system shall require an x86-compatible CPU, as some performance-critical sections are written in assembly language (ASM). 
NFR2: The system shall be compatible with the following operating systems:
· All 64-bit versions of Microsoft Windows
· All 32-bit versions of Microsoft Windows (95/98/NT/2000/XP/Vista)
· All POSIX-compliant systems, including:
  · All versions of Linux
  · All versions of BSD
  · All UNIX-like operating systems"
"2004 - phillips";"Given the following system description, tell me in full detail and without ambiguities or vagueness everything that someone implementing the system should know. If necessary, make assumptions as you see fit, providing concrete examples for any potential doubts that may arise-for instance, when there are references to time without specific durations, when conditions are mentioned but not explicitly defined, or when dealing with device connections, etc. Present the information in the form of functional and non-functional requirements.
The MSN messenger xlet is a MHP version of the popular PC application. It is designed to demonstrate the capabilities of MHP and Platform-i. The Platform-i MSN messenger application is independent of other projects. The final product will be an MHP MSN messenger xlet where there users interact as end-users only. With the xlet the user shall be able to see online friends, chat with them and see which TV program they are watching. Unlike the PC version, the xlet does not support file transfers or webcams.";"Functional Requirements (FR)
FR1: The user shall be able to log in to the messenger using an existing Passport account.
FR2: The system shall not allow users to create a new Passport account through the application.
FR3: The user shall be able to change and manage their status, which is visible to buddies. The application shall provide a list of available statuses for the user to select.
FR4: The system shall update and display a buddy's status when they change it.
FR5: The system shall display the status of all buddies in the user's contact list.
FR6: The user shall be able to change the nickname by which they are visible to their buddies.
FR7: The system shall display the nicknames of all buddies in the user's contact list. 
FR8: The system shall automatically update a buddy's nickname in the contact list when the buddy changes it.
FR9: The user shall be able to assign a custom nickname to a specific buddy. This custom nickname shall take precedence over the nickname set by the buddy.
FR10: The user shall be able to add a buddy to their buddy list. 
FR11: The user shall be able to delete a buddy from their buddy list.
FR12: The user shall be able to block specific buddies from contacting them.
FR13: The system shall display a visible notification when an incoming message is received.
FR14: The system shall display incoming messages on the screen.
FR15: The user shall be able to compose a message and send it to a buddy.
FR16: The system shall support the display of emoticons in both incoming and outgoing messages. 
FR17: The user shall be able to select an emoticon from a list to include in their message.
FR18: The system shall display the history of sent and received messages within the current chat session.
FR19: The user shall be able to chat with multiple buddies simultaneously.
FR20: The user shall be able to request information about the TV program or channel their online buddy is currently watching.
FR21: The system shall notify the user when they receive a new email in their Hotmail inbox.
FR22: The system shall provide the user with access to their Hotmail inbox.
FR23: The system shall display emails from the user's Hotmail account on the screen.
FR24: The user shall be able to play games with online buddies.

Non-Functional Requirements (NFR)
NFR1: The system shall use the .NET Messenger Service Protocol for communication. The version of this protocol shall be MSNPv8, which is the standard protocol at this time."
"2005 - nenios";"Given the following system description, tell me in full detail and without ambiguities or vagueness everything that someone implementing the system should know. If necessary, make assumptions as you see fit, providing concrete examples for any potential doubts that may arise-for instance, when there are references to time without specific durations, when conditions are mentioned but not explicitly defined, or when dealing with device connections, etc. Present the information in the form of functional and non-functional requirements.
The Child Care Management software is intended to provide a computer based system that will assist in managing a child care center. typical administrative functions involved in operating a center will be automated through software to improve workflow efficiency. For instance, tasks such as tracking child immunizations and maintaining classroom waiting lists will be managed by the system, allowing employees to spend more time caring for children. In addition, invoice processing and customer report generation will be integrated into the system, reducing the time administrative staff spends on paperwork. Before accessing to the NCCM systememployees must enter their username and password. The system will store information in a database for future reference, and teachers will have the ability to add or edit comments on child records. Administrators will have access to a reporting feature that generates preformatted documents summarizing key customer information. Additionally, they will be able to print invoices, which will include a special notice if a child is due for a required immunization.
Billing Process: Customers will be billed on the last day of each month, with discounts applied for families with multiple children enrolled in the care center.
Daily Reminders Feature: 
- All employees will have access to daily reminders.
- Employees can enter the date of an event along with a description.
- On the scheduled date, a pop-up notification will be displayed when the employee logs into the system.
- Once acknowledged, the reminder will be permanently removed from the database.
Customer Registration: Administrators will be responsible for registering new customers.";"Functional Requirements (FR)
FR1: The system shall provide two levels of access: teachers/assistants and administrators.
FR2: The system shall allow teachers and assistants to enter or edit child comments and child arrival/departure times only.
FR3: The system shall allow administrators to enter or edit all data.
FR4: The system shall restrict access to viewing and printing reports to administrators only.
FR5: The system shall restrict access to viewing and printing invoices to administrators only.
FR6: The system shall allow all employees to use the Daily Reminders feature.
FR7: The system shall require each user to log in with a unique username and password. The password does not need to be unique.
FR8: The system shall generate usernames based on the first four characters of the employee's last name, followed by the first three characters of their first name.
FR9: The system shall assign a password to each user.
FR10: The system shall require passwords to contain 6 to 8 alphanumeric characters.
FR11: The system shall lock a user account after three unsuccessful login attempts until an administrator resets the password.
FR12: The system shall automatically log out users after 10 minutes of inactivity.
FR13: The system shall allow users to set daily reminders for themselves.
FR14: The system shall allow users to select the reminder date from a calendar.
FR15: The system shall display a pop-up notification when a user logs in on the date of their scheduled reminder.
FR16: The system shall store immunization dates in a child's record.
FR17: The system shall display a reminder message to a teacher when a child is within two weeks of a required immunization.
FR18: The system shall store the date of the child's last physical examination in their record.
FR19: The system shall allow administrators to enter the types and schedules of required immunizations.
FR20: The system shall include a notification about required immunizations on the monthly invoice.
FR21: The system shall generate invoices with the following billing structure:
- $90 per month for a single child.
- $157.50 per month for two children.
- $157.50 for the first two children, plus $45 per additional child.
FR22: The system shall maintain an account history for each customer, including all activity by date.
FR23: The system shall provide itemized invoices showing the amount due.
FR24: The system shall generate all invoices at the end of each month and make them available for printing.
FR25: The system shall generate a Customer Directory Report, listing customers alphabetically by last name, including their address and phone number.
FR26: The system shall generate a Daily Classroom & Center Enrollment Report, listing children alphabetically by classroom, indicating their attendance status.
FR27: The system shall generate a Parent/Child Cross-Reference Report, listing parents alphabetically by last name, including their children's first names.
FR28: The system shall generate a Birthday List & Child Age Report, listing children alphabetically, including their birthday and age.
FR29: The system shall generate a Family Registration Information Report, listing customers alphabetically, including their address and phone number.
FR30: The system shall generate an Immunization Due & History Report, listing children alphabetically, including due immunizations and previous immunization dates.
FR31: The system shall generate a Child Enrollment/Withdrawal Report, listing children alphabetically, indicating whether they are enrolled or withdrawn.
FR32: The system shall generate a Child Notes & Comments Report, listing children alphabetically, including teacher notes and comments.
FR33: The system shall generate an Account Activity Report, listing a selected customer's account activity by date.
FR34: The system shall record user ID, date, time, and a description of changes when an account is edited.
FR35: The system shall store the following parental information: Name, address, home phone, work phone, email, emergency contact, and authorized pickup person.
FR36: The system shall store the following child information: Name, date of birth, gender, classroom name, special needs, photo, teacher's comments, and immunization dates.
FR36: The Child's record shall contain the following information: name, date of birth, gender, classroom name, special needs, photo, teacher's comments and immunization dates
FR37: The system shall allow users to enter, store, and update parent, child, and billing information.
FR38: The system shall store customer log notes, including the date and details of any communication with a parent.

Non-Functional Requirements (NFR)
NFR1: The system shall allow users to enter up to a 50-character message for their reminder.
NFR2: The system shall limit each classroom to a maximum of 20 children.
NFR3: The system shall ensure that each student belongs to only one class.
NFR4: The system shall assign one teacher and one assistant to each class.
NFR5: The system shall maintain a waiting list for up to 100 potential customers.
NFR6: The system shall have a web-based interface compatible with Internet Explorer and Netscape Navigator.
NFR7: The background color of all windows shall be blue.
NFR8: The system shall respond to all user requests within 20 seconds."
"2009 - warc III";"Given the following system description, tell me in full detail and without ambiguities or vagueness everything that someone implementing the system should know. If necessary, make assumptions as you see fit, providing concrete examples for any potential doubts that may arise-for instance, when there are references to time without specific durations, when conditions are mentioned but not explicitly defined, or when dealing with device connections, etc. Present the information in the form of functional and non-functional requirements.
The main goal of the WARC Tools project is to facilitate and promote the adoption of the WARC file format for storing web archives by the mainstream web development community by providing an open source software library, a set of command line tools, web server plug-ins and technical documentation for manipulation and management of web archive files or WARC files. This project has delivered a core software library called ""libwarc"" and a set of end user command line tools, extensions to existing tools, and simple web applications for accessing WARC content. In addition all the libraries have APIs and dynamic language bindings. The library and tools are scriptable (command lines in shell scripts, dynamic language bindings to the library), and programmable (dynamic language bindings, Java packages, and the C library itself). The last phase will build upon the original libwarc, extending the collection of WARC Tools and implement a full migration application. Phase III will include community participation in the speci!cation of the tools and applications, these will come from a number of International Internet Preservation Consortium (IIPC) member institutions, and similarly for testing. Phase III implementation will follow the original philosophy of providing powerful tools to enable crawl engineers, web archivists, researchers and other WARC users to easily manipulate and explore collections of web archive content without needing to write complex low-level code.";"Functional Requirements (FR)
FR1: The system shall provide a clear Application Programming Interface (API) for handling the migration process and default configuration.
FR2: The migration API shall require only one header file to be included.
FR3: The system shall require a configuration file to be explicitly provided. If a configuration is not specified, the system shall generate an error.
FR4: The user shall be able to provide metadata related to the conversion, which will be stored in the converted files (e.g., institution, context, crawler, collection name).
FR5: The system shall allow the storage of automatically generated migration metadata in converted files (e.g., OS/kernel type, original ARC name, ARC size, ARC digests, conversion timestamp, ARC record offset).
FR6: IIPC members shall be able to define the default metadata they want to include in migrations.
FR7: The system shall support calling external tools and services during migration (e.g., database queries, shell commands, web services).
FR8: The system shall use persistent, opaque, unique, and global identifiers for accessing records.
FR9: A default external tool (e.g., ClamAV) shall be used to scan files before conversion as a pre-conversion step.
FR10: The system shall support external tools such as JHOVE and DROID for file format identification.
FR11: The migration process shall be capable of running on multiple machines with easy deployment, potentially using a simple messaging infrastructure.
FR12: The system shall allow logging to be enabled or disabled at any time.
FR13: The system may include software checkpoints (e.g., start-transaction, end-transaction) to manage atomic transactions, except where operating system limitations prevent it.
FR14: The system shall support a ""dry-run migration"", allowing a blank conversion to generate reports (e.g., performance analysis, bad ARCs, time estimation) without writing real WARC data.
FR15: Deduplication may be performed before migration as part of a batch process.
FR16: The system shall detect and report duplicate WARC records with identical checksums. A centralized database shall store previously processed records for comparison.
FR17: To validate migration success, the arc_warc_verify tool shall match the metadata in newly generated WARC files with corresponding ARC files.
FR18: The system shall support sampling to quickly validate conversions.
FR19: The validation process shall use Heritrix's arcreader to verify that the original ARC records were correctly converted to WARC.
FR20: The system shall support round-trip validation, allowing WARC files to be migrated back to ARC for checksum comparison.
FR21: The system shall allow repackaging of WARC files by filtering records based on URL (using regular expressions).
FR22: The system shall allow repackaging of WARC files by filtering records based on MIME type.
FR23: The system shall allow repackaging of WARC files by filtering records based on size.
FR24: The system shall allow repackaging of WARC files by filtering records based on timestamp (e.g., date intervals).
FR25: The system shall allow repackaging of WARC files by filtering records based on any field in the WARC specification.
FR26: The system shall allow pre- and post-processing operations during repackaging.
FR27: The system shall allow pre-processing operations to prevent a file or record from being processed if a specific condition is met.
FR28: Each repackaged WARC file shall include a user-defined metadata record describing the extraction context.
FR29: The system shall provide tools for generating reports from WARC files.
FR30: The system shall support exporting summary reports in multiple formats (e.g., XML, CSV).
FR31: The system shall enhance the WARC browser UI to display aggregated WARC summaries.
FR32: The system shall enhance the WARC browser UI to display a manifest of WARC files and their locations.
FR33: The system shall provide a diff tool to compare WARC sets based on specified criteria (e.g., timestamp, hostname).
FR34: The system shall provide a tool to generate difference graphs between WARC collections.
FR35: The system shall allow viewing of crawl deltas for quality assurance.
FR36: The system shall implement server-side rewriting for the WARC browser.
FR37: The system shall integrate a proxy mode within the WARC browser.
FR38: The system shall integrate a full-text search module with the WARC browser for indexing and searching WARC files.

Non-Functional Requirements (NFR)
NFR1: The system shall be able to process multiple WARC files simultaneously, with selection/grouping options based on:
- Explicit file names.
- Wildcard name matching.
- Size limitations.
- Number of items.
NFR2: The system shall support multi-machine execution, but handling hardware failures shall be out of scope.
NFR3: The system shall be compatible with Java development environments, supporting web services and RESTful APIs.
NFR4: The system shall provide logging facilities to track command progress, process duration, and output levels.
NFR5: The system shall enhance usability by providing shell script wrappers for major commands.
NFR6: The system shall allow restricted operations on selected collection subsets (e.g., filtering by name).
NFR7: The workflow system shall have a configurable management strategy for ARC to WARC migration.
NFR8: The migration workflow shall be driven by command-line tools and scripts.
NFR9: Migration configurations shall be created using a Web User Interface.
NFR10: The system shall support pre- and post-conversion actions at each migration level (e.g., record, WARC, job)."
"2004 - colorcast";"Given the following system description, tell me in full detail and without ambiguities or vagueness everything that someone implementing the system should know. If necessary, make assumptions as you see fit, providing concrete examples for any potential doubts that may arise-for instance, when there are references to time without specific durations, when conditions are mentioned but not explicitly defined, or when dealing with device connections, etc. Present the information in the form of functional and non-functional requirements.
The product is a stand-alone web application with a theme mechanism to allow easy integration of the application into the ABC Paint website. The ColorKast solution is a server based application with a web-based client for consumer and enterprise access. In some respects, the application is the next generation of the old mechanical, hand-select, palette board system located in paint stores everywhere. Primarily, the application will include a old to new product-line ""translator"", a graphical color chooser, a color search-engine, a user color palette, possibly, an easy to use color matching system, and an administrative interface. All of these will be defined and described later in this same document. The actual user interface will be described in a separate user interface specification whitepaper. All references to performance or specification apply to the application client. Specifications and performance estimates apply to the application server only if explicitly stated.
Functions are modularized sub-components of the client application. Each of the functions has a single purpose and can accomplish its mission without the other components. Together, the components function as a stand-alone application.
• Color Chooser (Pointing device driven color selection utility)
• Color number translator (old scheme -> new scheme)
• Find a particular number of colors near a given color
• Session persistent user color palette (colors picked, images uploaded)
• Color search engine (all collections, specific collection)
• Color matching (uploaded image)
• Administrative interface (update, add, delete colors, add users)";"Functional Requirements (FR)
FR1: The system shall provide a task-based screen interface to enhance usability and workflow efficiency.
FR2: The system shall include a task pane in all workflows, providing easy access to online help and next-step options.
FR3: The system shall support theme customization, allowing consumers to use the application within the ABC Paint website, while ABC Paint employees can operate in their enterprise LAN environment.
FR4: The system shall provide a graphical color chooser, an intuitive selection tool operated via a pointing device.
FR5: The system shall include a color translator, which functions as a specialized color search engine, allowing users to convert old paint numbers to new ones based on the given paint number, source collection, and target collection.
FR6: The system shall provide a closest color tool, a specialized function of the color search engine, allowing users to locate a specified number of colors similar to a given paint number and collection within a target collection.
FR7: The system shall support a color search engine, enabling users to find a specified number of colors within any or all collections based on input criteria such as paint name, paint number, or an industry-standard color format.
FR8: The system shall provide a user color palette tool, which shall store the user's recent color searches. If the color sample matcher is enabled, it shall also store recently uploaded images for matching purposes.
FR9: The system shall provide an administrative interface allowing administrators to update, add, and delete paint information.
FR10: The system shall allow administrative users to add new system users.
FR11: The system shall include a color sample matcher, allowing users to upload images in a common format for color matching.
FR12: The color sample matcher shall enable users to graphically select a color or blended color group using a pointing device, which will then be used in a color search.

Non-Functional Requirements (NFR)
NFR1: The system shall communicate using the Hypertext Transfer Protocol (HTTP) to complete transaction-based services with client computers.
NFR2: The system shall associate user color matching data with a single client session. This data shall be removed from the server after 30 days.
NFR3: Updates to paint and collection information shall occur in real time, but actual processing time may vary depending on the amount of data being updated, added, or deleted on the server.
NFR4: To verify application performance, the system shall display the time taken by the server to process a request."
"2008 - caiso";"Given the following system description, tell me in full detail and without ambiguities or vagueness everything that someone implementing the system should know. If necessary, make assumptions as you see fit, providing concrete examples for any potential doubts that may arise-for instance, when there are references to time without specific durations, when conditions are mentioned but not explicitly defined, or when dealing with device connections, etc. Present the information in the form of functional and non-functional requirements.
Following the complete or major loss of system generation (blackout), it will be necessary to establish initial generation that can supply a source of electric power to other system generation and begin system restoration. These initiating generators are referred to as system Black Start generators. They must be able to self-start without any source of off-site electric power and maintain adequate voltage and frequency while energizing isolated transmission facilities and auxiliary loads of other generators. Generators that can safely reject load down to their auxiliary load are another form of Black Start generator that can aid system restoration, but are not addressed with this Black Start Capability Plan (BCP). From a planning perspective, a system Black Start Capability Plan (BCP) is necessary to ensure that the quantity and location of system Black Start generators are sufficient and that they can perform their expected functions as specified in overall coordinated WECC BCP. The CAISO may from time to time test Unit(s) designated to provide Black Start service (through an RMR or Interim Black Start Contract) by requiring the Unit to deliver Black Start service pursuant to a Test Dispatch Notice provided to Owner's Scheduling Coordinator. The Black Start Test shall be performed in accordance with the Ancillary Services Requirements Protocol in the CAISO Tariff. The CAISO shall not request a Black Start Test for a hydroelectric Unit during periods of constrained water availability.";"Functional Requirements (FR)
FR1: The system shall determine the amount and location of required Black Start generation through contingency studies, forming the basis of CAISO's emergency plans.
FR2: The system shall specify the initiating disturbance in contingency studies.
FR3: The system shall define the magnitude and extent of the outage (e.g., local area, CAISO Controlled Grid, or WECC) in the studies.
FR4: The system shall specify the assumed generation status following the initiating disturbance.
FR5: The system shall define the status of interconnections in the studies.
FR6: The system shall account for system demand levels at the time of the disturbance.
FR7: The system shall assess interconnection support and the availability of support from other utilities for generation and demand restoration.
FR8: The system shall evaluate generator performance, including a failure rate for Black Start units, to be determined by CAISO.
FR9: The system shall estimate the expected transmission system damage in the studies. 
FR10: The system shall annually verify that the number, size, availability, and location of Black Start generating units meet WECC restoration plan requirements for the CAISO Balancing Authority Area.
FR11: The system shall document Cranking Paths, including initial switching requirements, between each Black Start generating unit and the units it supports. This documentation shall be available for WECC review upon request and may include Cranking Path diagrams.
FR12: The system shall include the following factors in the Black Start planning evaluation process:
- Diverse fuel resources for Black Start power.
- Available cranking and transmission paths.
- Adequacy of communication systems.
- Voltage and frequency regulation capability of units.
- Generator protection and control systems for abnormal conditions.
- Limited energy resources (e.g., hydro, pumped storage, compressed air) shall be used sparingly.
FR13: The system shall annually enter into RMR and Interim Black Start Contracts with generators that meet the planning evaluation criteria.
FR14: The system shall require that any Voluntary Black Start unit seeking Black Start designation within the CAISO Balancing Authority:
- Demonstrates at least every five years (via simulation or testing) that it can perform required functions according to the WECC BCP.
- Submits documentation of test results and analysis to CAISO, WECC, or NERC upon request.
- Reports previous Black Start test results to CAISO and WECC.
- Notifies the CAISO RT Dispatcher within 24 hours of a test, indicating success or failure.
- Files a letter with CAISO within 14 days of a test, documenting its outcome.
FR15: The system shall maintain testing records, including test dates, durations, and compliance with Black Start testing requirements.
FR16: The Black Start unit shall be equipped with governors capable of operating in isochronous mode.
FR17: The Black Start unit shall maintain voltage within emergency limits over a range from no load to full external load, in compliance with NERC reliability standards.
FR18: The system shall ensure that adequate transmission capacity is available to connect the Black Start facility to the source providing station services to other generating stations.
FR19: The Black Start unit shall be capable of starting and energizing the transmission path without external grid assistance.
FR20: The Black Start Test shall include the use of key operating aids, such as telephone communications and SCADA, where applicable.
FR21: The following start-up/synchronization time limits shall apply:
- Hydroelectric units & combustion gas turbines: Within 30 minutes of initiation.
- Industrial gas turbines: Within 60 minutes of initiation.
- Hot, steam-driven turbines: Within 2.5 hours of initiation.
- Other technologies: Start-up limits shall be negotiated, considering ICU start-up, normal start-up, and switching time.
FR22: The minimum runtime duration of a Black Start test shall be 10 minutes after synchronization to the grid.
FR23: The CAISO market schedule shall be submitted for any test energy.
FR24: The CAISO shall periodically conduct performance tests, with or without prior notification.
FR25: The CAISO shall have exclusive authority to determine when a Black Start Generating Unit must operate in response to grid conditions.
FR26: The CAISO shall request Black Start tests from at least one-third of all RMR and Interim Black Start units annually.
FR27: The system shall assess Black Start units for their ability to self-provide start-up power until they can switch to an active transmission path and synchronize with the grid.
FR28: Black Start units may be tested for:
- Multiple successive starts within a specified timeframe, as per the RMR or Interim Black Start contract.
- Reactive power generation required under the voltage support agreement of the contract.
FR29: The system shall maintain a Black Start database containing all designated Black Start generators for system restoration.
FR30: The Black Start database shall be reviewed and updated annually.
FR31: The database shall include details such as name, location, MW capacity, unit type, latest test date, and starting method.
FR32: As system simulation technology becomes available, CAISO shall conduct operator training for system restoration and Black Start unit operation."
"2004 - ijis";"Given the following system description, tell me in full detail and without ambiguities or vagueness everything that someone implementing the system should know. If necessary, make assumptions as you see fit, providing concrete examples for any potential doubts that may arise-for instance, when there are references to time without specific durations, when conditions are mentioned but not explicitly defined, or when dealing with device connections, etc. Present the information in the form of functional and non-functional requirements.
The Integrated Justice Information System (IJIS) is an initiative being undertaken by Tarrant County, Texas. The vision for IJIS is to define and develop enhanced business processes and supporting technology solutions that result in a more effective and efficient administration of justice in Tarrant County. When complete, IJIS will facilitate rapid sharing of information across the Criminal Justice Community while providing each stakeholder with advanced justice management capabilities. The system must submit requests for appointed counsel, process requests for appointed counsel, manage notifications, manage reporting, manage notice of case filing decisions, manage defendant contact, manage attorney list and manage defense attorney compensation";"Functional Requirements (FR)
FR1: The system shall enable law enforcement agencies to capture defendant and incident information, including supporting documents.
FR2: The system shall enable magistrates to electronically review and submit requests for appointed counsel.
FR3: The system shall enable the Office of Attorney Appointments to review and process requests for appointed counsel within one business day of receiving the request.
FR4: The system shall notify law enforcement agencies if a request for counsel has been denied.
FR5: The system shall notify both the appointed attorney and the defendant when an appointment has been made.
FR6: The system shall allow an appointed attorney to review appointments and log the date and type of first contact with the defendant. 
FR7: The system shall allow an appointed attorney to log the date and time of the first in-person visit with the defendant, as applicable.
FR8: The system shall notify the Office of Attorney Appointments if an appointed attorney fails to make first contact by the end of the first business day after the appointment.
FR9: The system shall notify both the appointed attorney and the Office of Attorney Appointments when the District Attorney accepts or rejects the case and whether any charges were added, removed, or modified.
FR10: The system shall enable the Office of Attorney Appointments to generate reports that measure compliance with the Texas Fair Defense Act.
FR11: The system shall generate a report with the number of appointments made by date range (day, week, month, quarter, annual, and ad hoc) and type of appointment (felony, misdemeanor, etc…).  
FR12: The system shall generate a report with the number of denials of counsel by date range (day, week, month, quarter, annual, and ad hoc) and type of denial.
FR13: The system shall generate a report with the minimum, maximum, and average number of hours between date/time of arrest and magistration by date range (day, week, month, quarter, annual, and ad hoc).
FR14: The system shall generate a report with the minimum, maximum, and average number of hours between date/time of magistration and request for counsel by date range (day, week, month, quarter, annual, and ad hoc). 
FR15: The system shall generate a report with the minimum, maximum, and average number of hours between date/time of request for appointment of counsel and appointment/denial by date range (day, week, month, quarter, annual, and ad hoc). 
FR16: The system shall generate a report with the minimum, maximum, and average number of hours between date/time of appointment of counsel and Defense Attorney first contact by date range (day, week, month, quarter, annual, and ad hoc). 
FR17: The system shall generate a report with the minimum, maximum, and average number of days between date/time of appointment and case filing by date range (day, week, month, quarter, annual, and ad hoc).
FR18: The system shall generate a report with the minimum, maximum, and average number of days between date/time of case filing and disposition by date range (day, week, month, quarter, annual, and ad hoc).
FR19: The system shall generate a report with the minimum, maximum, and average number of days between date/time of appointment and disposition by date range (day, week, month, quarter, annual, and ad hoc).
FR20: The system shall generate a report with the minimum, maximum, and average number of total hours billed by Defense Attorney and Offense Type by date range (day, week, month, quarter, annual, and ad hoc).
FR21: The system shall generate a report with the minimum, maximum, and average number of court appearances by Defense Attorney and Offense Type by date range (day, week, month, quarter, annual, and ad hoc).
FR22: The system shall generate a report with the minimum, maximum, and average of total payments made to Defense Attorney by Offense Type by date range (day, week, month, quarter, annual, and ad hoc).
FR23: The system shall generate a report with the minimum, maximum, and average cost of reimbursement types (Court Appearances, Investigation, etc...) by Offense Type by date range (day, week, month, quarter, annual, and ad hoc).
FR24: The system shall generate a report with the minimum, maximum, and average number of appointments for Defendants with special needs by date range (day, week, month, quarter, annual, and ad hoc).
FR25: The system shall generate a report with the minimum, maximum, and average number of duplicate appointments and amount of payments made on those cases/charges (day, week, month, quarter, annual, and ad hoc).
FR26: The system shall generate a report with the minimum, maximum, and average number of non-disposed cases/charges and amount of payments made on those cases/charges (day, week, month, quarter, annual, and ad hoc).

Non-Functional Requirements (NFR)
NFR1: The system shall enable law enforcement agencies to capture defendant and incident information within 48 hours of arrest. 
NFR2: The system shall enable magistrates to electronically review and submit counsel requests within 24 hours of the indigency hearing.
NFR3: The system shall notify law enforcement agencies of a denied counsel request within 24 hours of the denial.  
NFR4: The system shall notify the appointed attorney and defendant of an appointment within 24 hours of the appointment.
NFR5: The system shall ensure that all procedures comply with the Texas Code of Criminal Procedure (CCP).
NFR6: The system shall ensure that all procedures comply with the Texas Government Code.
NFR7: The system shall ensure that all procedures comply with the Texas Local Government Code."
"2009 - video search";"Given the following system description, tell me in full detail and without ambiguities or vagueness everything that someone implementing the system should know. If necessary, make assumptions as you see fit, providing concrete examples for any potential doubts that may arise-for instance, when there are references to time without specific durations, when conditions are mentioned but not explicitly defined, or when dealing with device connections, etc. Present the information in the form of functional and non-functional requirements.
The system will be a search engine for finding the location of torrents and streaming sites for videos on the internet. The user can specify which of the 2 or both to look for. The results will be divided into the types that were specified using different tabs, and then the results will be orderable by different categories, such as name, size, site, etc. The user will have the option to filter out videos containing certain content depending on age restrictions, for example adult content. In addition the user will have the option to filter out or only search certain websites, for example a user may only want to look at videos on YouTube. They will have the facility for users to store their favorite videos, so that they can come back to the video at another time. There will be two levels of user for our system. The first will be the general user that will be using our software to find their videos. They will only see the front end of the system. The second level will be the system developers. They will be able to edit which sites the system will search, depending on whether they think the site is safe, compatible with our software, the speed at which the site can be searched, and how useful the site is to us, i.e. how many results have come back from that site.";"Functional Requirements (FR)
FR1: The system shall allow torrent search and streaming search to share the same search bar.
FR2: The system shall allow the database of torrent sites to be updated via the internet.
FR3: The system shall provide a tick box to allow the user to include torrent searching in their query.
FR4: The system shall retrieve and display the number of seeds, the number of peers, the size of the file, the date posted, and a link to the webpage for each torrent result.
FR5: The system shall display the message ""No results were found for this search"" if no results are found for a query.
FR6: The system shall allow the user to arrange results by size, date, or alphabetical order by clicking on the corresponding column headers.
FR7: The system shall provide page buttons to allow the user to navigate through the results.
FR8: The system shall allow the database of video hosting and video linking sites to be updated via the internet.
FR9: The system shall provide a tick box to allow the user to include video hosting site searches in their query.
FR10: The system shall provide a tick box to allow the user to include video link site searches in their query.
FR11: The system shall retrieve and display the full video name, length, date posted, and a link to the video for each video hosting site result.
FR12: The system shall retrieve and display the show's name, episode name, and a link to the webpage for each video link site result.
FR13: The system shall display the message ""No results were found for this search"" if no results are found for a query.
FR14: The system shall allow the user to arrange results by length, date, or alphabetical order by clicking on the corresponding column headers.
FR15: The system shall provide page buttons to allow the user to navigate through the results.
FR16: The system's user interface shall consist of one main screen, with all functionality accessible from this screen.
FR17: The system shall use hyperlinks to allow the user to open websites in their default web browser.

Non-Functional Requirements (NFR)
NFR1: The system shall use PHP or similar languages as the communication standards to query the servers of different websites and retrieve results.
NFR2: The system shall ensure that query times do not exceed 5 seconds for any website.
NFR3: The system shall ensure that sending the hyperlink to the default browser takes less than 1 second.
NFR4: The system shall ensure that loading the program takes less than 10 seconds.
NFR5: The system shall not display any torrent results with 0 seeds.
NFR6: The system shall ensure that sorting results takes no longer than 0.1 seconds.
NFR7: The system shall display up to 100 results per page.
NFR8: The system shall not display any torrent results with a rating of less than 1.
NFR9: The development team shall thoroughly investigate each website within the database on a monthly basis to ensure that no illegal or harmful content is exposed to the users."
"2006 - stewards";"Given the following system description, tell me in full detail and without ambiguities or vagueness everything that someone implementing the system should know. If necessary, make assumptions as you see fit, providing concrete examples for any potential doubts that may arise-for instance, when there are references to time without specific durations, when conditions are mentioned but not explicitly defined, or when dealing with device connections, etc. Present the information in the form of functional and non-functional requirements.
This product is a new, centralized data system. Source data for this system are the long-term Agricultural Research Service (ARS) watersheds, with those participating in the Conservation Effects Assessment Project (CEAP) project expected to participate in this data system first. The data system consists two main parts -- a central database management system for the uploading, storage, and management of data, and a client application to allow users access and interact with the data. Diverse end-users can access, search, analyze, visualize, download, and report various types of integrated watershed data contributed from the multiple locations. Types of data will include biophysical data (i.e., point-based in time and/or space, spatially variable data, time series), data about land use, management, and conservation practices, and economic data.";"Functional Requirements (FR)
FR1: The system shall establish a database in support of CEAP to house the collective data assembled or generated during research activities. The database shall support a variety of data types and formats, including but not limited to: spatial data (vector, raster, imagery, and tabular), tabular data (static and time-series), spreadsheets, documents, reports, photographs, and URL links.
FR2: The system shall allow users to view the entire universe of watersheds from a top-level screen for selection.
FR3: The system shall allow users to view watershed descriptive data.
FR4: The system shall allow users to browse, query, and download individual sampling station data and metadata.
FR5: The system shall allow users to visualize time-series data.
FR6: The system shall allow users to generate tabular reports of selected data.
FR7: The system shall allow users to visualize, query, and download spatial data.
FR8: The system shall allow users to browse, visualize, and download agricultural modeling data and results.
FR9: The system shall maintain a metadata database.
FR10: The system shall allow users to browse and query watershed metadata by theme or location.
FR11: The system shall adopt a metadata standard that is compliant with Federal regulations. The current Federal standards for spatial data are the Content Standard for Digital Geospatial Metadata (version 2.0), FGDC-STD-001-1998. The CEAP database team shall evaluate conversion of metadata if the Federal government adopts the ISO 19115 geographic information/metadata standard in the future.
FR12: The system shall implement a metadata input tool that supports creating and editing metadata in the chosen format. The metadata tool shall allow for local and web-based input and editing. A likely scenario involves a web-based wizard that allows users to specify particulars of a data set, then save those answers and relate them to a particular project, so that these selections can be reused in future uploading operations.
FR13: The system shall implement a database of STEWARDS metadata elements. The database shall provide browse and query functionality.
FR14: The system shall implement a web-based browse-and-query tool for searching STEWARDS metadata. The system shall support queries by location, theme, and keyword. A likely scenario involves a web-based wizard that allows users to specify particular querying parameters and then save them for reference later, facilitating time-based comparisons with minimal user training.

Non-Functional Requirements (NFR)
NFR1: The system shall be capable of storing hundreds of megabytes of data on demand.
NFR2: All user and application data, as well as software installation and configuration files, shall be fully backed up on a weekly-nightly basis. Additionally, secure off-site storage shall be performed on a weekly basis with 24-hour retrieval times.
NFR3: The system shall ensure that application servers and database servers are load balanced at the application level to ensure maximum stability and availability.
NFR4: The system shall require a ""back-end"" private network environment to ensure that end-user operations (on the front end) are not impeded by database backups, index propagations, or other large back-end data transfers.
NFR5: The system shall manage data and application backups through fully supported backup software solutions.
NFR6: The system shall require HTTP and GIS server applications, as the web will be the primary delivery protocol for the application, to support system functionality.
NFR7: The system shall use commonly supported web browsers to implement a thin-client architecture. The use of browser plug-ins shall be restricted to an as-needed basis.
NFR8: The system shall require email server applications to support system functionality, as email will serve as a secondary delivery protocol for alerts, data, and other information from the system.
NFR9: The system shall use Microsoft SQL Server as the primary data storage mechanism, as the corporate standard relational database management system, to support system functionality.
NFR10: The system shall make data available in standardized data formats, such as tab-delimited text, for use on users' client systems, including local installations of ARC GIS software or other offline software applications.
NFR11: The system shall show no visible deterioration in response time as the number of users increases. Response times for querying metadata shall be on the order of a few seconds or less. Response times for retrieving actual images may take much longer, anywhere from a few minutes to several hours. If a user requests a large image with a short response time, the ARS data system shall advise the user that the target response time cannot be met and refer them to an alternate method of obtaining the data.
NFR12: The system shall load as quickly as comparable productivity tools in the environment it is running in.
NFR13: Data on the server shall be protected from power loss, but data in transit from the server to the requester may be lost. Given that these data will also remain on the watershed site system, such failures will be monitored, and the uploading process will be repeated.
NFR14: The system shall follow industry best practices for authentication, using single-sign-on systems like Microsoft Active Directory to perform authentication. This authentication addresses security requirements to ensure that those using the system are who they say they are, particularly when data are being changed or updated.
NFR15: The system shall protect any data that should be viewed by a restricted audience with appropriate security features.
NFR16: The integrity of STEWARDS data shall be critical to its success as a product. Scientific research and publications will rely on data obtained through the system. Therefore, extensive data validation and review shall be performed before data are uploaded to the system and as part of the upload process. The system shall have policies and procedures to protect data from intentional or unintentional modifications, ensuring that accurate data are made available.
NFR17: The system shall be available to the intended audience 24 hours per day, 7 days a week, with 99% availability and a tolerance of -5% (not less than 50% of working hours in any week). The system's availability will be concerned with the reliability of the software and network components. Intentional ""denial of service"" attacks are not foreseen as a significant concern."
"2009 - email";"Given the following system description, tell me in full detail and without ambiguities or vagueness everything that someone implementing the system should know. If necessary, make assumptions as you see fit, providing concrete examples for any potential doubts that may arise-for instance, when there are references to time without specific durations, when conditions are mentioned but not explicitly defined, or when dealing with device connections, etc. Present the information in the form of functional and non-functional requirements.
Statewide e-mail system.--A state e-mail system that includes the service delivery and support for a statewide e-mail, messaging, and calendaring service is established as an enterprise information technology service as defined in s. 282.0041. The service shall be designed to meet the needs of all executive branch agencies and reduce the current cost of operation and support.";"Functional Requirements (FR)
FR1: The user shall be able to send, receive, and delete e-mails and attachments.
FR2: The user shall be able to reply to e-mails and attachments.
FR3: The user shall be able to forward e-mails and attachments.
FR4: The user shall be able to print e-mail messages.
FR5: The user shall be able to customize e-mail messages with word processor-like features for formatting e-mail content.
FR6: The user shall be able to establish rules (auto-reply, out-of-office reply, temporary transfer to another party, move files to inbox folders).
FR7: The user shall be able to perform a spell check.
FR8: The user shall be able to organize content into personal folders or similar storage mechanisms to aid with e-mail retrieval.
FR9: The agency admin shall be able to migrate existing public folders into the statewide e-mail system.
FR10: The agency admin shall be able to create and manage public folders or similar storage mechanisms to aid with the collection, organization, and sharing of information with other people in their individual agency or organization.
FR11: The user shall be able to create contact lists, including those imported from other sources.
FR12: The user shall be able to export contact lists.
FR13: The user shall be able to share contact lists/address books.
FR14: The agency admin shall be able to create and share distribution lists.
FR15: The user shall be able to create calendars and customize calendar views.
FR16: The user shall be able to schedule resources such as conference rooms, teleconference rooms, etc.
FR17: The user shall be able to create reminders and tasks.
FR18: The agency admin shall be able to accommodate programmer testing of e-mail functionality embedded in software applications.
FR19: The user shall be able to share inbox, calendar, and files with users, given permission.
FR20: The user shall be able to delegate their permissions to another user.
FR21: The user shall be able to embed links to files and websites in e-mails.
FR22: The agency admin shall be able to provision e-mail accounts for their individual agency or organization (including the ability to integrate e-mail account provisioning with LDAP-like directory services).
FR23: The user shall be able to search for e-mails based on age, size, sender, recipient, subject, keyword, attachment content.
FR24: The agency admin shall be able to auto-enforce standard conventions for creating accounts and distribution lists.
FR25: The data center admin shall be able to control message size limits for e-mails (inbound and outbound).
FR26: The agency admin shall be able to create generic email accounts/addresses to be accessed by multiple users.
FR27: The user shall be able to customize their view in the client application (such as adding fields, arranging fields, and ordering e-mails by fields).
FR28: The user shall be able to archive at the desktop.
FR29: The agency admin shall be able to provide a server-based archiving solution.
FR30: The agency admin shall be able to archive at various regularly defined intervals.
FR31: The agency admin shall be able to search archives and forward, print, and restore items from the archive in bulk.
FR32: The agency admin shall be able to filter archives by sender, recipient, date, subject, content, attachments, keyword, etc.
FR33: The agency admin shall be able to provide long-term retention separate from the active e-mail system.
FR34: The agency admin shall be able to provide individual users the ability to search their portion of the archive repository.
FR35: The agency admin shall be able to satisfy legal requests for e-mail discovery and provide printed or digital results.
FR36: The agency admin shall be able to capture all sent and received e-mails into the organization.
FR37: The agency admin shall be able to select the e-mail retention period for a specific e-mail (e.g., 1 year, 3 years, or 5 years).
FR38: The agency admin shall be able to search the e-mail header, including Date, From, Subject, To, and CC.
FR39: The agency admin shall be able to search the body of the e-mail, including the header and all text contained within the e-mail itself.
FR40: The agency admin shall be able to perform a full-text search, including the header, body, and any attachments to the e-mail.
FR41: The agency admin shall be able to import data from other sources such as PST, NSF files into the archiving solution.
FR42: The agency admin shall be able to put discovery search results on legal hold to suspend deletion.
FR43: The agency admin shall be able to search using Boolean fields.
FR44: The agency admin shall be able to archive based on policy (e.g., e-mail address, group, organization, etc.).
FR45: The user shall be able to flag individual e-mails to prevent them from being archived.
FR46: The data center admin shall be able to provide pre-emptive e-mail content filtering.
FR47: The data center admin shall be able to whitelist/blacklist senders by domain or IP address.
FR48: The data center admin shall be able to block or allow e-mails based on multiple message attributes.
FR49: The system shall provide message hygiene reports.
FR50: The system shall protect internal e-mail customer identities.
FR51: The user shall be able to integrate agency applications into the e-mail and mobile messaging environments.

Non-Functional Requirements (NFR)
NFR1: The agency admin shall be able to move older data to tiered storage (lower-cost storage) while maintaining accessibility.
NFR2: The data center admin shall be able to recover all messages.
NFR3: The data center admin shall be able to restore previous backups without service interruption.
NFR4: The system shall provide pre-emptive e-mail virus protection (scanning prior to delivery at the mail server).
NFR5: The system shall permit  the user to establish TLS encryption with other businesses or customers.
NFR6: The user shall be able to access e-mail with Blackberry services using a BlackBerry device.
NFR7: The user shall be able to access e-mail with non-BlackBerry mobile data devices (e.g., iPhones, Treos, Pres, etc.).
NFR8: The user shall be able to access their mailbox and components via a web browser over a secure (encrypted) connection.
NFR9: The user shall be able to access an SMTP bridgehead for agency applications."
"2009 - gaia";"Given the following system description, tell me in full detail and without ambiguities or vagueness everything that someone implementing the system should know. If necessary, make assumptions as you see fit, providing concrete examples for any potential doubts that may arise-for instance, when there are references to time without specific durations, when conditions are mentioned but not explicitly defined, or when dealing with device connections, etc. Present the information in the form of functional and non-functional requirements.
GOG is a tool to directly get Catalogue, Main Database (MDB) data and final (in the sense of statistically equivalent to the final mission data) data without the use GASS telemetry, GIBIS or the main ESAC database The Gaia Object Generator (GOG) is expected to simulate catalog data, auxiliary data and intermediate main database data (including mission final data) for all the Gaia instruments. It will use error models to provide rapid simulations of large amount of data.  This 'Software Product' is composed of several 'Modules':
- The initialisation modules is in charge of loading and storing the read configuration in a proper way. The module has to offer a common interface to get values from the configuration in an easy manner.
- The epoch parameters module is in charge of all the epoch parameters settings and calculations of the GOG simulation.
- The combined parameters module is in charge of all the combined parameters settings and calculations of the GOG simulation
- The spectrum module is in charge of all the spectrum settings and calculations of the GOG simulation. 
- The output module comunicates GOG flow execution with the filesystem. When the flow request a file it obtains it from the system and also it writes the files requested as GOG outputs";"Functional Requirements (FR)
FR1: The GOG initialization module shall be able to read information from the input sources. The options are to use the Universe Model or a provided user source.
FR2: The GOG catalog module shall include information on the universe model.
FR3: The GOG initialization module shall include information on the instrument model, including:
• The selected scanning law
• Dead time
• Noise models (including detection noise)
FR4: The GOG catalog module shall include information on the reduction model, including:
• Instrument effects subtraction
• Node bias subtraction
• Noises (PPE residuals, scientific content extraction noise, subtraction of close sources, second FoV contamination noise, background subtraction).
FR5: The GOG initialization module shall define the output specification parameters (spectrum RPBP/RVS, astrometry, Vr, physical parameters, and flags), epoch, and/or combined number of epochs.
FR6: The epoch parameters module shall determine the astrometric parameters for epoch data (including instrumental and reduction errors), including transit times and field angles in each CCD, as well as the mean transit time and field angle for the transit. Gate activation and signal loss due to window cutoff must be taken into account.
FR7: The epoch parameters module shall determine the epoch photometry (including instrumental and reduction errors), including G mag (for each CCD and average for the transit), GRP, GBP, and GRVS. Gate activation and signal loss due to window cutoff must be taken into account.
FR8: The epoch parameters module shall determine the epoch radial velocity (including instrumental and reduction errors).
FR9: The epoch parameters module shall determine the epoch flags.
FR10: The epoch parameters module shall determine the epoch physical parameters.
FR11: The system shall compute the astrometric combined data using all previous transits.
FR12: The system shall compute parallax and proper motion errors.
FR13: The system shall determine the covariance matrix.
FR14: The system shall determine the estimated errors for the astrometric parameters at the mean epoch.
FR15: The system shall determine the combined data photometry.
FR16: The system shall determine the mean radial velocity.
FR17: The system shall determine the final flags.
FR18: The system shall determine the mean physical parameters.
FR19: The spectrum simulation module shall take noise effects into consideration, including:
• Flux noise (Poisson noise, total detection noise, etc.)
• CCD combination noise (for RVS)
• Wavelength calibration
• Multi-transit combination noise (only for combined data)
FR20: The universe catalog output data from the simulation shall follow the universe model ICD document.
FR21: The GOG output shall be driven by the MDB data model. The output will be used to distribute extracts to the DPCs.
FR22: For source generation, GOG shall have 2 main options available: Universe Model from GaiaSimu or an Object Input Catalogue.
FR23: GOG shall consider noise effects. For noise generation, those effects shall be user-selectable (they can be added or not, and the values shall be provided by users). Noise shall be classified into two groups:
1. Instrumental noises: noises coming from the observation process, such as onboard detection and tracking, or observation dead-time.
2. Reduction noise: noise added to the data when removing instrumental noise.
FR24: GOG shall provide the same result for identical input configuration parameters.
FR25: GOG shall generate data for a considerable number of astrosources, where the number could be a significant part of the expected final catalogue (20%).

Non-Functional Requirements (NFR)
NFR1: GOG shall be fully integrated into the Gaia Simulator project. That is, it shall use, as the other simulators, the GaiaSimu library and the GaiaTools library.
NFR2: GOG shall have a source-by-source processing mechanism.
NFR3: GOG shall provide a way to be run from a command line or a shell script.
NFR4: GOG shall be able to run in cluster or grid environments.
NFR5: GOG shall be built as a standalone Java application that can be invoked from a command line and deployed as a JAR file.
NFR6: GOG shall be designed to run in either single-threaded mode or in grid environments.
NFR7: GOG shall run on LINUX, UNIX, and MAC computers (minimum). GOG results shall be platform-independent.
NFR8: GOG shall be able to process one complete source processing in 2 CPU seconds."
"2003 - agentmom";"Given the following system description, tell me in full detail and without ambiguities or vagueness everything that someone implementing the system should know. If necessary, make assumptions as you see fit, providing concrete examples for any potential doubts that may arise-for instance, when there are references to time without specific durations, when conditions are mentioned but not explicitly defined, or when dealing with device connections, etc. Present the information in the form of functional and non-functional requirements.
agentMom project will be a framework that provides reusability of agent's communication. It is implemented in Java and provides the basic building blocks for building agents, conversations between agents, and the message that are passed in the conversations. The system will:
- Enable agents to broadcast a message to all the agents within the same local network.
- Enable agents to multicast a message to all the agents within the same multicast address.
- Enable agents to unicast a message to other agents within organization.
- Allow agents to choose among unicast, multicast and broadcast communication.
- Allow agents to join and leave multicast group.
- Provide message encryption and decryption techniques for secured communication.
- Allow agents to choose to encrypt or not to encrypt message";"Functional Requirements (FR)
FR1: The system shall support the ability to send unicast message.
FR2: The system shall support the ability to receive unicast message.
FR3: The system shall ensure that unicast messages are only received by the specified address.
FR4: The system shall ensure that unicast messages arrive at the specified address and in order.
FR5: The system shall support the ability to send multicast message.
FR6: The system shall support the ability to receive multicast message.
FR7: The system shall support the ability to send request to join multicast group.
FR8: The system shall support the ability to send request to leave multicast group.
FR9: The system shall not allow receiving multicast message from a group before joining that multicast group.
FR10: The system shall not allow receiving multicast message from a group after leaving that multicast group.
FR11: The system shall support the ability to set time-to-live for multicast message.
FR12: The system shall support the ability to set multicast address and port for sending and receiving multicast message.
FR13: The system shall support the ability to receive multicast message from multiple groups.
FR14: The system shall support the ability to sent broadcast message.
FR15: The system shall support the ability to receive broadcast message.
FR16: The system shall ensure that broadcast messages are sent to all possible hosts within the same local network.
FR17: The system shall support the ability to encrypt unicast message.
FR18: The system shall support the ability to decrypt unicast message.
FR19: The system shall allow an agent to decide whether or not to encrypt a message.
FR20: The system shall automatically decrypt encrypted message.
FR21: The system shall support the ability to encrypt multicast message.
FR22: The system shall support the ability to decrypt multicast message
FR23: The system shall support the use of the architecture that agent directly controls the conversations.
FR24: The system shall support the use of the architecture that agent's components control the conversations.

Non-Functional Requirements (NFR)
NFR1: The system shall be based on AgentMom version 1.2."
"2001 - libra";"Given the following system description, tell me in full detail and without ambiguities or vagueness everything that someone implementing the system should know. If necessary, make assumptions as you see fit, providing concrete examples for any potential doubts that may arise-for instance, when there are references to time without specific durations, when conditions are mentioned but not explicitly defined, or when dealing with device connections, etc. Present the information in the form of functional and non-functional requirements.
Libra forms part of a larger system comprising the Sun Grid Engine cluster management system that runs on a Linux-based cluster. SGE is responsible for receiving the jobs submitted by the user and delegating them to Libra for scheduling and placing on appropriate workstations or execution hosts. Libra communicates its decision regarding workstation allocation to the resource manager, which then dispatches the job to the chosen workstation. Once assignment to a workstation has occurred, Libra is responsible for implementing the scheduling policy on the jobs executing at the workstations. the Libra scheduler will be QoS driven: it will aim to optimize resource utilization within user-imposed constraints: thus, user satisfaction is the primary concern, as opposed to maximizing CPU utilization. Thus, the two job parameters most relevant to the scheduling decisions will be:
• Budget allocated by the user to the process
• Deadline";"Functional Requirements (FR)
FR1: The system shall allow the user to submit jobs.
FR2: The user or administrator shall be able to view details about the jobs that have been submitted and the progress of the execution of the jobs.
FR3: The user and the administrator shall be able to cancel a job or, under specific circumstances, change a job parameter.
FR4: The Libra scheduler shall initialize a job, once it has been accepted by SGE, with information from the scheduler.
FR5: Libra shall determine the possibility of satisfying the user's requirements, given their budget and deadline. Hence, the most important inputs are the budget, deadline, and execution time to determine whether the job can be accepted or not.
FR6: Libra shall decide how the job will be scheduled based on its budget and deadline. It shall use the Stride Scheduling Algorithm to enforce resource allocations (CPU cycles) proportional to the user's budget and deadline. This shall be performed by Libra once it has decided that a job can be accommodated.
FR7: The system shall decide on which node and queue the job will be placed for execution. This decision shall be based on the job's budget, execution time, and deadline.
FR8: The system shall take the job and insert it into the queue on the execution host that the scheduler had previously decided is the appropriate place for it.
FR9: Every time a job is scheduled for execution on a host, Libra shall update the cluster status. This action shall also be performed when a job ends and is removed from the cluster.
FR10: Libra shall decide how to time-slice between all the jobs currently being executed. These scheduling decisions shall be made based on the stride-scheduling algorithm.
FR11: There shall be two user types – the cluster user and the cluster administrator – each of which shall have its own corresponding interface.
FR12: There shall be a different command for each of the following actions:
• Submit jobs with the associated deadline, cost, and execution time.
• Query the cluster to establish the current cost per unit time for submitting new jobs.
• Monitor the status of submitted jobs.
• Cancel jobs submitted by the user.
• Check the user's credit balance.
• Check the user's usage history. 

Non-Functional Requirements (NFR)
NFR1: The scheduler shall not support job migration for the purpose of decreasing resource fragmentation.
NFR2: There shall be a maximum of 1 bug/KLOC (thousand lines of code).
NFR3: In the event of a system outage, the cluster shall be down while the Linux operating system boots up. This process shall take less than five minutes.
NFR4: The Libra scheduler shall ensure the privacy of user job status and maintain full control over job execution, so that alteration of scheduling criteria or actual resource allocation is not possible without administrator authority.
NFR5: The maximum response time for the submission of a job shall be 1 minute.
NFR6: Libra scheduler shall ensure that all jobs are completed with a 10% error allowance.
NFR7: All code shall be written as specified by the Hungarian Naming Convention.
NFR8: All code shall be written as required by the GNU General Public License.
NFR9: All coding shall be done in standard C.
NFR10: The cluster administrator shall be able to interact with the system through the Linux command prompt."
"2007 - puget sound";"Given the following system description, tell me in full detail and without ambiguities or vagueness everything that someone implementing the system should know. If necessary, make assumptions as you see fit, providing concrete examples for any potential doubts that may arise-for instance, when there are references to time without specific durations, when conditions are mentioned but not explicitly defined, or when dealing with device connections, etc. Present the information in the form of functional and non-functional requirements.
The University of Puget Sound is currently seeking a new courseware system and is investigating Moodle as an option. Moodle is courseware system that managers courses, assignments, wiki pages, forums, etc. Our goal is to refine parts of Moodle to provide functionality that improves the overall learning experience of students at the University and helps professors to make students aware of new ways of presenting material.
Students are the primary consumers of a courseware system. They are accessing information posted by professors, uploading assignments and project files, and discussing concepts.
Professors are the primary content administrators of a courseware system. They are uploading files, links, and multimedia, and grading assignments in addition to creating new places for students to discuss and collaborate.
System Administrators are primarily responsible for maintaining the courseware system. They contribute minimally to the courses themselves, but spend more time modifying the system's configuration and making appropriate updates";"Functional Requirements (FR)
FR1: The system shall be able to capture and manage files where appropriate.
FR2: The system shall allow multiple file uploads to be configured on a per-page basis.
FR3: The system shall be able to capture and organize voice clips that can be used where appropriate.
FR4: The system shall allow students to organize their voice clips into a portfolio.
FR5: The system shall allow students to download their voice clips in a flexible format.
FR6: The system shall store audio clips in a format conducive to speech.
FR7: The system shall allow users to delete recorded clips.
FR8: The system shall be able to display web feeds for all pages of the course management system where elements such as forum posts, assignment postings, announcements, wiki alterations, and other blocks of information that a user may view are added.
FR9: The system shall allow web feeds to be turned on or off on a per-page basis.
FR10: The system shall be able to use search functionality as a way to navigate Moodle pages instead of using hierarchical links.
FR11: Users shall be able to search through pages in a course.
FR12: The system shall display a search box on every page after a user has logged in.
FR13: The system shall allow users in the capacity of course administrator (professors) to post grades associated with assignments for a particular actor in the capacity of student.
FR14: Professors shall be able to post grades for an assignment based on the ratio of points earned to points possible.
FR15: The professor shall be able to attach feedback in the form of text or an attachment. Time stamps shall be attached to the last time the grade was modified so that actors may examine when particular grades were submitted and how an actor in the role of student has improved or lessened his performance in the course.
FR16: The system shall display grade information such as the grade for each assignment, averages, and overall grade to the student to whom the grades belong.
FR17: The system shall maintain a grade history.
FR18: The system shall provide a wiki where students and professors can collaboratively create networks of documents.
FR19: The system shall provide a blog engine.
FR20: The system shall provide both e-mail and SMS notifications for pages.
FR21: Students shall be able to select in their preferences whether notifications are sent to their mobile telephone (via SMS) or e-mail account.

Non-Functional Requirements (NFR)
NFR1: Voice clips shall be optionally downloadable in a format such as MPEG Audio (mp3) format.
NFR2: Voice clips shall be stored in a format optimized for speech, as this feature is meant to catalog voice recordings. Recordings shall only be converted to MPEG Audio (mp3) format.
NFR3: The system shall be backed up on a configurable schedule. It shall be backed up on a nightly basis, with options for weekly, off-site backup when necessary.
NFR4: The system shall be available 24 hours a day, 7 days a week.
NFR5: The system shall support at least 1000 concurrent users.
NFR6: System administrators shall have access to comprehensive, searchable documentation."
"2005 - grid 3D";"Given the following system description, tell me in full detail and without ambiguities or vagueness everything that someone implementing the system should know. If necessary, make assumptions as you see fit, providing concrete examples for any potential doubts that may arise-for instance, when there are references to time without specific durations, when conditions are mentioned but not explicitly defined, or when dealing with device connections, etc. Present the information in the form of functional and non-functional requirements.
The need for a method of visualisation of biological data has been identified. Currently, there are many groups offering many different tools for visualising data. These visualisation tools provide a range from tabular to three-dimensional graphical views. However, a need has been identified for a tool that can display data in a three dimensional environment, which allows the user to investigate the data and easily see various attributes of the data at a glance. The main actors in the systems are the identifier, the investigator and the demonstrator. 
The initiation phase of this Grid 3D application consist of these actors getting biological data. The identifier supplies data to the application, and the application returns point of view / info. The investigator also supplies data to the application, and the application returns information. The app supplies data to the demonstrator and the demonstrator returns 3D view.
When 3D grid application is running: the demonstrator, investigator and identifier command the app to rotate the grid, zoom the grid, move the grid, select point(s) or retrieve point info. The application must return desired Graphical Representation.";"Functional Requirements (FR)
FR1: The system shall plot the data points in a scientifically correct manner.
FR2: The system shall label the grid axis correctly according to the input from the data file.
FR3: The system shall color the data points in accordance with the cluster number (contained in the data file).
FR4: A single click of the mouse over a data point shall display the name of the data point.
FR5: A double-click of the mouse over a data point shall cause the application to display all the data point's details.
FR6: The system shall allow multiple points to be clicked so that multiple names can be displayed.
FR7: The system shall allow the user to orient the grid. Rotation, zoom, and move functions shall be available.
FR8: The data file shall contain a name for each data point.
FR9: The data file shall contain 3 parameters from which the data points are to be plotted.
FR10: The data file shall contain a single parameter to designate the color of the points. This attribute shall be used for comparison.
FR11: The data file shall contain a description for each data point.
FR12: In order for the grid to reflect the nature of the user's data, the system shall allow the user to specify their own axis.
FR13: The first row of the data file shall contain the column headings.

Non-Functional Requirements (NFR)
NFR1: The system shall be able to handle up to 2000 data points.
NFR2: The data points shall be large enough to see and select, but they shall not be too large, so as to distort the overall pattern of the point spread.
NFR3: The axis labels shall be clearly visible and easily recognized after the grid has been oriented into a different position.
NFR4: The application shall be colored so that screenshots can be printed clearly (i.e., black on a white background).
NFR5: The system shall start within 30 seconds.
NFR6: The interaction with the data points shall have a delay of no longer than 2 seconds.
NFR7: The response to a change in orientation shall be fast enough to avoid interrupting the user's flow of thought."
"0000 - gamma j";"Given the following system description, tell me in full detail and without ambiguities or vagueness everything that someone implementing the system should know. If necessary, make assumptions as you see fit, providing concrete examples for any potential doubts that may arise-for instance, when there are references to time without specific durations, when conditions are mentioned but not explicitly defined, or when dealing with device connections, etc. Present the information in the form of functional and non-functional requirements.
GAMMA-J's Web Store is designed to allow new online store owners a quick and easy means to setup and perform sales and other core business over the internet. This Web Store will:
• Manage customer accounts
• Manage an online store inventory
• Manage a customer's ""Shopping Cart""
• Confirm Orders
• Have an unambiguous interface to assist in browsing the categories and products
• Use Secure Socket Layer (SSL) for security
• Have an availability of 99.999%
• Allow an optional mirror site for reliability and backups
• Feature interface for future software enhancement via ""Plug-ins""
The initial inventory will be 100 items. Expandable with unique codes, the owners can purchase to expand the inventory. The minimum total inventory will be 20,000 items. Since this will be a ""Plug and Play device"", no software installation will be necessary. This software will contain all of the basic needs to manage an online store. Advanced needs can be added in the future via ""plug-ins"".";"Functional Requirements (FR)
FR1: The system shall allow customers to create accounts to store their customer profiles, configure contact information, view their purchase history, and confirm orders.
FR2: The system shall allow customers to register, log in, and log out of their accounts.
FR3: Customer profiles shall include payment information, such as the ability to store credit card information and address information.
FR4: The system shall store products in multi-tiered categories, where a category can contain subcategories or products.
FR5: The system shall allow administrators to update the categories, the products placed in categories, and the specific product details.
FR6: The system shall allow customers to add products to the shopping cart.
FR7: The system shall clearly display the number of items in the shopping cart, along with the total cost.
FR8: The system shall allow customers to add or remove products from the shopping cart prior to checkout and order confirmation. 
FR9: The system shall allow customers to confirm their order after checkout. If the order is incorrect, the customer shall be able to revise and update their order. The customer shall then receive a confirmation email with the specific order details.
FR10: The system shall allow customers to search for products matching their search criteria.
FR11: The system shall present an unambiguous interface to assist customers in browsing categories and products.
FR12: The system shall implement an Application Interface to allow various plug-ins to interact with the system. The plug-in API shall be well documented, and specifications shall be provided to plug-in developers.
FR13: The system shall send an email confirmation to the customer stating that the items they ordered will be delivered to the shipping address, along with a tracking number.
FR14: The system shall send an email to the System Administrator regarding any technical queries from customers or salespeople.

Non-Functional Requirements (NFR)
NFR1: The system shall operate with the following internet browsers: Microsoft Internet Explorer versions 6 and 7, Netscape Communicator versions 4 and 5.
NFR2: The system shall operate on an Intel-based system with Slackware Linux 2.6 and Apache Web Server.
NFR3: The system shall use an SQL-based database to store inventory information.
NFR4 The system shall be compatible with all major web browsers, such as Internet Explorer, Mozilla Navigator, Mozilla Firefox, Opera, and Safari.
NFR5: The system shall be able to handle 1000 customers logged in concurrently at the same time.
NFR6: The system shall be able to retrieve 200 products per second.
NFR7: The system shall be able to add a product to the shopping cart in less than 2 milliseconds.
NFR8: The system shall be able to search for a specified product in less than 1 second.
NFR9: The system shall be able to email customers and vendors in less than 1 second.
NFR10: The system shall be able to validate credit cards in less than 2 seconds.
NFR11: The system shall be able to acquire shipping charges in less than 2 seconds.
NFR12: The system shall be able to restore 1000 records per second.
NFR13: The system shall validate credit cards against fraud.
NFR14: The system shall encrypt all sensitive information via https.
NFR15: The system shall encrypt all customer data in database.
NFR16: The system shall auto detect IP DOS attacks and block IP automatically.
NFR17: The system shall detect consecutive failed login attempts.
NFR18: The system shall have an availability of 99.99%.
NFR19: The system shall perform searches via Dijkstra's shortest path algorithm.
NFR20: For returning customers, the system shall validate the 'existing' credit card in the system after each login.
NFR21: The system shall automatically compress image files that are too large in size.
NFR22: The system shall validate email address existence.
NFR23: The system shall employ on-demand asynchronous loading for faster execution of pages.
NFR24: The system shall be extremely portable via the usb drive.
NFR25: The system shall be easy to migrate or backed up via another usb drive.
NFR26: The system shall adhere to the following hardware requirements: 
· 4GB Flash ram chip 
· 128MB SDRAM 
· Intel XScale PXA270 520-MHz chipset 
· OS: Apache web server 
· Database: MySQL"
"2008 - virtual ed";"Given the following system description, tell me in full detail and without ambiguities or vagueness everything that someone implementing the system should know. If necessary, make assumptions as you see fit, providing concrete examples for any potential doubts that may arise-for instance, when there are references to time without specific durations, when conditions are mentioned but not explicitly defined, or when dealing with device connections, etc. Present the information in the form of functional and non-functional requirements.
Virtual-EDU consists of an online website that allows users to create a classroom like environment with the features that it contains. Once registered to the system, a user can create a profile sharing his or her information with the rest of the enrolled users. Users will be able to find commonalities with each other through the user profile. Virtual-EDU also gives users the ability to store data and/or important materials in a secure network location for future retrieval or present usage. This particular data as well as other files may be shared or worked on using Virtual-EDU extensive tools for file sharing and document collaboration. Users can work together on a single document in real time or send their work to other users via secure file sharing methods and protocols. If further communication is need between users, Virtual-EDU has features such as instant messaging, where users can hold single or group conversations via a secure real-time communication based on typed text. However, if more efficient means of communication are need, users have the ability to hold single or group video/audio conferences, whereby the users will be able to see other users streamed live in real-time.
Virtual-EDU features: instant messaging, video and audio streaming, file sharing, document collaboration, hosting space and user profiles.";"Functional Requirements (FR)
FR1: The system shall allow users to log in.
FR2: The system shall allow users to be marked as online or offline. Online users shall be marked in green and offline users shall be marked in red.
FR3: If a professor is marked online, students shall be able to ask questions and receive answers from the professor almost instantaneously.
FR4: The system shall provide each user with a list of contacts. 
FR5: The system shall allow real-time conversations to be initiated between parties.
FR6: The system shall allow users to browse and search for files.
FR7: The system shall allow users to send files to other parties.
FR8: Selected files shall be marked in blue.
FR9: The system shall allow users to start audio and video streams.
FR10: The system shall allow users to accept and deny calls.
FR11: The system shall allow users to end audio and video streams.
FR12: The system shall allow users to customize their profile. Users shall be able to select/change their password, update personal information (phone number, address), and change the background colors and menu layout on their profile page.
FR13: The system shall provide each user with their own Virtual-Space where files can be uploaded. 
FR14: The system shall allow users to select and deselect files from their Virtual-Space.
FR15: The system shall allow users to delete files from their Virtual-Space.
FR16: The system shall allow users to download files from their Virtual-Space.
FR17: The system shall allow users to create and delete folders in their Virtual-Space.
FR18: The system shall allow students to take online exams that can combine multiple-choice, true/false, short answer, and essay questions, just like in a paper exam.
FR19: The system shall allow users to customize the online learning classroom to their preference. 
FR20: The system shall allow users to customize the sections of the page into different views.
FR21: The system shall allow users to upload their documents and transfer them between other users/computers. Files saved in the virtual hard drive space shall be accessible to the user even if the user is accessing Virtual-EDU from a different computer.
FR22: The system shall allow professors to host their lectures as video and/or audio podcasts. 
FR23: The system shall allow users to share programs, enter meetings, and share and edit documents at the same time.
FR24: The system shall include a Help window where users can contact the system administrator if they have difficulty logging in.
FR25: The system shall include a Contact Us window that enables users to look up a list of pertinent email addresses and phone numbers within the institution.
FR26: The system shall include a News window where the administrator can post current news as needed.
FR27: The system shall be completed within the allotted development timeframe.

Non-Functional Requirements (NFR)
NFR1: The system shall be compatible with Windows XP, Vista, or Mac-OS operating systems.
NFR2: The system shall be compatible with Internet Explorer, Mozilla Firefox, and Safari internet browsers.
NFR3: The system shall require users to have pop-up windows enabled on their systems.
NFR4: The system shall require users to enable JavaScript on their systems to install the Instant-EDU messaging software.
NFR5: The system shall require users to have antivirus software installed to scan incoming files from other users of the system.
NFR6: For the first release, each class shall need a quota space of at least 1GB per student.
NFR7: The system shall use SSH client, FTP client, and VPN client for connections between computing endpoints.
NFR8: The system shall not allow users to upload or post discriminatory data regarding race, color, creed, religion, sex, age, handicap, marital status, or national origin. The system shall also prohibit uploading or posting inflammatory or derogatory data.
NFR9: In the event that inflammatory or derogatory content is identified, the content shall be immediately removed, and the appropriate authorities shall be notified, potentially resulting in disciplinary action.
NFR10: User passwords shall be between 8 and 12 characters, including letters and numbers, but excluding spaces.
NFR11: The system shall have an estimated 99% uptime, although data loss may occur during an outage. 
NFR12: The system shall be periodically unavailable due to necessary maintenance upgrades. In the event of scheduled maintenance, students and staff shall be notified at least 24 hours in advance."
"2009 - library";"Given the following system description, tell me in full detail and without ambiguities or vagueness everything that someone implementing the system should know. If necessary, make assumptions as you see fit, providing concrete examples for any potential doubts that may arise-for instance, when there are references to time without specific durations, when conditions are mentioned but not explicitly defined, or when dealing with device connections, etc. Present the information in the form of functional and non-functional requirements.
This is the System Administration Module of an Integrated Library System (ILS). The System Administration Module facilitates the management of every aspect of the Integrated Library System. Specifically, the System Administration Module support the following activities, among others:
• Configuring the ILS to enable and support features and processes required for management of the Library branches, patrons, collections, and circulation transactions.
• Monitoring, troubleshooting, and controlling server performance.
• Monitoring, troubleshooting, and controlling database and application performance.
• Monitoring, troubleshooting, and controlling services, ports, and application programming interfaces.
• Managing user and group accounts and privileges.
• Managing server and client software installation, upgrades, and updates.
• Backing up databases, configuration files, log files, etc.";"Functional Requirements (FR)
FR1: The system shall allow multiple staff members and patrons to simultaneously access and update patron and item records, including at staff check-in and check-out terminals, as well as self check-out stations.
FR2: The system shall allow staff to identify where any patron record or item record is in use (location, user, date, and time placed).
FR3: The system shall support individual and shared staff login accounts; access to modules shall be granted through ""roles"" or ""privileges"" that allow each account to access as many (or as few) modules as needed. Individual logins shall allow user-level preferences and an audit trail.
FR4: The system shall provide access to all configuration files.
FR5: The system shall provide access to all configuration files.
FR6: The system shall support the creation of custom dashboards that display current and historical data about system performance, record creation and modification, circulation transactions, etc.
FR7: The system shall allow configurable alert thresholds.
FR8: The system shall send alerts via administrative dashboards, email messages, and text messages.
FR9: The system shall send alerts to an unlimited number of recipients via any or all alert methods.
FR10: The system shall provide a dashboard with performance monitoring and management tools. It shall identify processes by process ID, owner username, IP address (if applicable), CPU utilization, memory utilization, and run time. Runaway processes shall be identified. System status shall be represented by visual indicators (e.g., green and red lights).
FR11: The system shall provide a server management console, including: software shutdown utility, software startup utility, server shutdown utility, and server restart utility.
FR12: The system shall provide an administrative dashboard displaying: last full and incremental backup, last planned and unplanned system reboot, last software upgrade, current software version, transactions waiting to be processed, size of log files, current count of records by record type (item, bibliographic, patron, etc.), and database utilization (size, processes running).
FR13: The system shall provide a management console displaying workstations running client software, including workstation name and IP address, and utilities for managing and terminating client sessions.
FR14: The system shall provide a circulation dashboard showing key performance indicators such as check-outs per hour, check-ins per hour, holds placed per hour, and holds paged per day. Indicators shall be limited to a single branch or set to system-wide.
FR15: The system shall provide a single console with access to all configuration files. Read and write permissions for individual configuration files shall be assignable to users and groups.
FR16: The system shall provide a dashboard for locating and viewing log files.
FR17: The system shall provide a single interface for reviewing and controlling scheduled tasks, including staff-scheduled tasks, automated reports, scheduled imports and exports, and software updates.
FR18: The system shall support restrictions based on business rules, such as preventing the deletion of item records in checked-out status or preventing the deletion of bibliographic records with existing holds.
FR19: The system shall provide customizable ""Rules of Suppression"" that specify whether patrons and staff can view authority, bibliographic, order, and item records in staff and public interfaces.
FR20: The system shall allow the creation and modification of requesting rules that determine whether a patron can place a hold on an item. Requesting rules may evaluate patron type, current number of holds, current patron account balance, item type, item status, owning location code, and other criteria.
FR21: The system shall allow the creation and modification of loan rules that permit or prohibit check-out of items, calculate loan periods, and determine renewal limits. Loan rules may evaluate patron type, current number of items checked out, current patron account balance, item type, item status, owning location code, check-out location code, and other criteria.
FR22: The system shall be able to specify default values, data validation, automatic formatting, and required status for any field.
FR23: The system shall provide the capability to perform live incremental and full backups of data and transaction logs.
FR24: The system shall support an unlimited number of record sets, with the ability to import and export set members in batch. Record sets can be the basis for batch field updates, can be used to limit the scope of queries, and can be used to delete original records with the ability to review prior to deletion, log errors, and undo deletions.
FR25: The system shall provide a dedicated interface for creating new staff accounts. The new staff account creation process shall provide configurable templates for account administrators; it shall also provide granular privileges for account creation, modification, and deletion.
FR26: The system shall provide a dedicated interface for creating new patron accounts. The patron account creation process shall provide configurable templates for staff use, support field validation and required fields, and offer configurable defaults.
FR27: The system shall support the scheduling of maintenance tasks, reports, and data exports.
FR28: The system shall allow staff to be given permission to schedule tasks, reports, and data exports. System administration staff shall be able to view and manage jobs scheduled by other staff members.
FR29: The system shall support administrator-programmable and user-programmable macros and/or keyboard shortcuts.
FR30: Staff and group accounts shall be independent of workstations; client installation shall not be tied to a specific location.
FR31: The system administrators shall be able to create report templates available to front-line staff, which can be run as-is or modified to meet specific needs.
FR32: The system shall provide reports for each record type, including current record numbers, the current number of records, the number deleted, and the number purged. Record types include patron, bibliographic, item, order, invoice, etc. Access to record numbers shall be controlled at the user/group level.
FR33: The system shall be able to define and select four types of printers: receipt printer, standard printer, label printer, and forms printer. All Windows printers shall be supported.

Non-Functional Requirements (NFR)
NFR1: The system shall provide real-time processing.
NFR2: The system shall support SMTP for email transport.
NFR3: The system shall support secure protocols, including SFTP, SSL, and SSH. SFTP shall be supported in both active and passive modes, configurable per vendor.
NFR4: All client configuration files shall be server-based; configurations shall be exportable and importable between clients."
"2001 - beyond";"Given the following system description, tell me in full detail and without ambiguities or vagueness everything that someone implementing the system should know. If necessary, make assumptions as you see fit, providing concrete examples for any potential doubts that may arise-for instance, when there are references to time without specific durations, when conditions are mentioned but not explicitly defined, or when dealing with device connections, etc. Present the information in the form of functional and non-functional requirements.
BEYOND is a macro-project focused on improving user interfaces. This document presents some projects with their individual problem areas and domains.
1. Philips DVS aims at developing a prototype of an authoring tool for visualisation, specification, design, code generation of user interfaces for consumer products, with particular emphasis on screen based user interfaces and control, and taking into account the constraints of the consumer world as mentioned above.
The high level requirements for this authoring tool are:
- The authoring tool should allow easy modification of the behaviour of user interfaces.
- The authoring tool should support easy development of adaptive user interfaces.
- The authoring tool should allow the functional requirements specification of thenext generation of consumer products to be developed in a much faster and efficient manner.
2.  In other project, we desire to have an 'intelligent' software layer having the most important feature that the User Interface is User Definable. The software structure of the firmware should be suitable for adding a 'UIinterpreter' (to interprete and visualize the UI code generated by the UI Editor; so a very important component in this project). 
To make our UI-Editor complete, it must have a simulation module incorporated so we can try the complete system off-line on our development computer before loading the generated code into the Vector System.";"Functional Requirements (FR)
FR1: The authoring tool shall provide a set of standard widgets. A widget is a graphical entity representing the interface between a user and the application software.
FR2: The set of standard widgets shall contain picture, to display a bitmap, e.g. a logo.
FR3: The set of standard widgets shall contain screen, to define properties for a whole screen.
FR4: The set of standard widgets shall contain dialog, to provide a container for other widgets, excluding screens.
FR5: The set of standard widgets shall contain text, to provide a field to display a text string.
FR6: The set of standard widgets shall contain button, to trigger specific actions on a user request.
FR7: The set of standard widgets shall contain slider, to show the current state of an analogue value, e.g. volume.
FR8: The authoring tool shall provide for each project a project repository containing a font definition, a colour palette, bitmap images and strings.
FR9: The authoring tool shall allow the user to manage a palette and its colours. Colours are organised in a palette.
FR10: The authoring tool shall allow the user to import bitmaps from an external source.
FR11: The authoring tool shall allow the user to simulate a user interface on a PC.
FR12: The authoring tool shall provide a complex widget containing a menu structure and a navigation function.
FR13: The authoring tool shall provide a menu editor. This menu editor allows the user to define items in a menu.
FR14: The authoring tool shall allow the user to generate C code for a target platform, e.g. a DVD player.
FR15: The authoring tool shall be able to assist the user in the authoring process by a wizard.
FR16: The software structure of the firmware shall be suitable for adding a 'UIinterpreter' (to interprete and visualize the UI code generated by the UI Editor so a very important component in this project).
FR17: The software (firmware) shall be able to control all the available hardware and the hardware state should be accessible to the firmware and be exposed to the UI-Code.
FR18: The software architecture of the firmware shall allow the extension with additional functionality.
FR19: The UI Editor shall allow flexible creation and modification of the user interface of the Vetronics application. This must be done in an interactive and visual way.
FR20: The UI Editor shall be able to communicate with the Vetronics hardware, to download the developed UI to the Vetronics system for real use. This communication is done using different kinds of interfacing (Serial port, USB, FireWire, IrDa, CAN, ...).
FR21: The UI Editor shall not only allow the management of the UI of the Vetronics application, but should also support definition of the behavior of the Vetronics system through the connection of real actions to UI elements.
FR22: The UI-Editor shall be an open-application so we can add new functionality to support new hardware configurations. To obtain this we must create an open framework on which we can Plug-In all functionality we desire.
FR23: The UI interpreter (=VM) shall show a ""start menu"" (defined in the UI by the UI Editor) when the system is powered up.
FR24: The UI interpreter shall interpret the downloaded UI code to navigate through the menus and perform defined actions.
FR25: The UI interpreter shall control the interference between the defined UI and the environmental conditions, such as overruling user-defined UI elements and actions by an ""emergency"" UI and behavior. This is the decision-agent we need for content prioritization.
FR26: The UI Editor shall allow the user to create/modify menus.
FR27: The UI Editor shall enable the user to associate an event to one or more actions.
FR28: The UI Editor shall be a user friendly and powerful development tool, attention for visualization and simulation issues, attention for solutions that speed up the development of the UI, attention for general usability issues and user interface design: the Windows guidelines should be followed.
FR29: The UI Editor shall have a simulation module incorporated so we can try the complete system off-line on our development computer before loading the generated code into the Vector System.

Non-Functional Requirements (NFR)
NFR1: The system should be compatible with the common versions of Windows (98/ME/2000) and near-future versions."
"2001 - hats";"Given the following system description, tell me in full detail and without ambiguities or vagueness everything that someone implementing the system should know. If necessary, make assumptions as you see fit, providing concrete examples for any potential doubts that may arise-for instance, when there are references to time without specific durations, when conditions are mentioned but not explicitly defined, or when dealing with device connections, etc. Present the information in the form of functional and non-functional requirements.
";"Functional Requirements (FR)
FR1: Any operation requiring the user to supply a file name shall allow the user either to select the file from a list derived from the files in the currently open application or to enter a file name, a relative path, or a full path.
FR2: For any operation where the user is prompted to select from a list, the user shall be able to cancel the operation.
FR3: Output pretty-printed text files and SDTs shall be displayed only when the user requests them.
FR4: When collecting generated output files from HATS-SML, the HATS-GUI shall overwrite any file whose name is generated automatically.
FR5: The main interface shall be menu-driven.
FR6: The File menu shall contain items for manipulating individual files and for closing the HATS-GUI application.
FR7: The Application menu shall contain items for manipulating entire applications.
FR8: The Configure menu shall contain items for modifying the application configuration.
FR9: The Run menu shall contain items for executing HATS-SML programs.
FR10: The View menu shall contain items for viewing HATS-SML output.
FR11: The File/Select menu item shall provide an interface for selecting files within the currently open application.
FR12: The File/Save As menu item shall provide an interface for saving a previously selected file under a different name.
FR13: The File/Delete menu item shall provide an interface for deleting a selected file. The HATS-GUI shall prompt the user to confirm deletion before completing this action.
FR14: The File/Exit menu item shall provide an interface for exiting the HATS-GUI.
FR15: The Application/Select menu item shall provide an interface for selecting and opening an application.
FR16: The Application/Close menu item shall provide an interface for closing an application.
FR17: The Application/Save menu item shall provide an interface for saving application configuration information.
FR18: The Application/Save-As menu item shall provide an interface for saving an application and its associated files under a different name.
FR19: The Application/Delete menu item shall provide an interface for deleting an application and all files in its directory. The HATS-GUI shall prompt the user to confirm deletion before completing this action.
FR20: The Configure/Editors menu item shall provide an interface for entering editor configuration information, which shall be used when starting editor processes.
FR21: The Configure/Node Display menu item shall provide an interface for configuring the display of SDT nodes.
FR22: The HATS-GUI shall allow the user to specify the number of SDT-node levels to expand during viewing.
FR23: The HATS-GUI shall allow the user to select node colors. At a minimum, eight colors (red, yellow, white, black, green, blue, orange, violet) shall be provided.
FR24: The HATS-GUI shall allow the user to select node shapes. At a minimum, rectangles and ellipses shall be provided.
FR25: The Configure/File Associations menu item shall provide an interface for associating file types with tools.
FR26: The Configure/HATS-SML menu item shall provide an interface for entering implementation-dependent parameters for starting HATS-SML processes.
FR27: The Run/Generate Parser menu item shall provide an interface for generating a parser program.
FR28: The Run/Parse Target menu item shall provide an interface for selecting and parsing target programs.
FR29: The Run/Parse Program menu item shall provide an interface for selecting and parsing transformation-language programs.
FR30: The Run/Execute Transforms menu item shall provide an interface for executing transformation-language programs.
FR31: The Run/Pretty-Print menu item shall provide an interface for selecting SDTs and style files, then formatting the SDT accordingly.
FR32: The View/SDT menu item shall provide an interface for viewing, navigating, and searching SDTs produced by transformations.
FR33: The View/Text menu item shall provide an interface for viewing and searching pretty-printed text.
FR34: The View/Standard Output menu item shall provide an interface for viewing HATS-SML debug output.
FR35: The View/Select Text menu item shall provide an interface for selecting text in SDT or pretty-print views.
FR36: The View/Copy Text menu item shall provide an interface for copying selected text to the system clipboard.
FR37: The GUI shall allow the user to create modify copy or delete applications or files regardless of HATS-SML status.
FR38: If starting a HATS-SML process fails the HATS-GUI shall notify the user with a message.
FR39: Data sets shall be saved with appropriate file-name extensions.
FR40: The user shall be able to initiate OS processes from the HATS-GUI optionally passing command-line arguments these command sequences are part of the application configuration.
FR41: The HATS-GUI shall perform file operations via the host OS create delete open for read/write read write and close.
FR42: The HATS-GUI shall compare file timestamps precision ≤ 1 second when interacting with the host OS.
FR43: The HATS-GUI shall allow creating a new application containing at minimum a .spec (lexical) .grm (grammar) .lib (ML library) and configuration the user shall name the application.
FR44: All files for a given application shall reside in a single directory named after the application.
FR45: Exactly one .spec file shall describe lexical specifications, exactly one .grm file shall describe grammar and exactly one .lib file (written in ML) shall describe function-symbol interpretations.
FR46: Whenever prompting for a file name the HATS-GUI shall suggest a name when copying within the same directory it shall append a sequential extension.
FR47: Standard-output and standard-error streams shall display in a tabbed window cleared before each HATS-SML run (or before a script execution).
FR48: Selecting ""display output"" shall open a new window with buttons to close it.
FR49: Each display window shall have a mouse cursor showing pointer location and a keyboard cursor tracking insertion point.
FR50: The keyboard cursor shall move via arrow keys and jump to the mouse cursor position on click.
FR51: File/ Select shall list files in the open application if none is open it shall first prompt to open an application.
FR52: File/Save As shall prompt for a new name create the file in the open application copy contents and make it the selected file.
FR53: File/Delete shall prompt to confirm if confirmed delete the selected file and clear the selection.
FR54: File/Edit shall launch the OS editor specified in configuration passing the selected file name as an argument.
FR55: File/Exit shall terminate all HATS-SML processes and the GUI if configuration changes are unsaved prompt to save.
FR56: Application/Select shall let the user navigate directories to choose an application making it the current one.
FR57: Application/Close shall close the current application if configuration changes are unsaved prompt to save.
FR58: Application/Save shall write all application configuration to nonvolatile storage.
FR59: Application/Delete shall prompt to confirm if confirmed delete the application directory and its contents and clear the selection.
FR60: Application/Save As shall prompt for a new application name copy the entire directory (including subdirectories) to the new name and select it.
FR61: When deleting an application directory containing subdirectories the system shall confirm each subdirectory deletion if any is declined abort the operation.
FR62: Selecting Configure menu options shall list configuration elements for selection and prompt for values.
FR63: View SDT shall prompt the user to select an SDT file in the current application.
FR64: View Text shall prompt the user to select a pretty-printed text file in the current application.
FR65: View Standard Error shall display all standard-error output since the last clear.
FR66: View Standard Output shall display all standard-output output since the last clear.
FR67: When viewing an SDT clicking an expandable node shall expand it (show children) or collapse it (hide children).
FR68: Expansion depth when opening a node shall follow the application configuration.
FR69: Clicking an already-expanded node shall collapse it and remove all its descendants.
FR70: The HATS-GUI shall collect and interpret process exit codes 0 for success nonzero for failure.
FR71: The GUI shall allow importing a file into the application by copying it into the application directory.
FR72: The user shall be able to continue working—editing viewing submitting—while HATS-SML runs transformations.
FR73: The GUI shall support executing a script file containing a sequence of HATS-SML commands stopping on error or completion.
FR74: Before running a script the standard-error and standard-output displays shall be cleared.
FR75: The GUI shall allow selecting and displaying output files display methods shall depend on file type.
FR76: The user shall be able to select any set of nodes in a displayed graph selections shall be visually indicated.
FR77: The user shall be able to deselect all selected nodes.
FR78: When nodes are selected in an SDT all nodes in the smallest well-formed tree containing them shall be highlighted.
FR79: In a navigation window clicking shall center the main SDT view on the node nearest the click.
FR80: When both SDT and pretty-print views of the same file are open selections and cursor movement shall be mirrored between them.
FR81: Users shall be able to resize windows dynamically SDT views shall adapt to available space.
FR82: SDT displays shall include a text area showing leaf-node text copy-and-pasteable to other applications.
FR83: The user shall be able to display multiple SDTs simultaneously each in its own window.
FR84: SDTs shall render as directed acyclic graphs nodes for SDT nodes edges for parent-child relationships.
FR85: On initial display only the root node shall be shown.
FR86: When showing a node and its children the parent shall appear above its children and all children of the same parent at the same height.
FR87: Node color and shape shall follow the types defined in the application configuration.
FR88: Users shall be able to expand nodes (adding descendants) and collapse nodes (removing descendants).
FR89: Users shall be able to hide selected nodes—removing them and marking their parents/descendants as hidden.
FR90: Users shall be able to unhide all hidden nodes.
FR91: After unhiding users shall be able to re-hide only those nodes hidden before the last unhide.
FR92: The HATS-GUI shall allow expanding the SDT by a predetermined number of levels as set in the configuration.
FR93: The HATS-GUI shall provide a ""fully expand subtree"" function regardless of the configured expansion level.
FR94: SDT displays shall offer a Refresh command clear reload and re-expand to the previous state if possible.
FR95: If a graph or text display exceeds window bounds scroll bars shall allow panning arrow keys shall also scroll.
FR96: In graph windows keyboard cursor keys shall move to the nearest unhidden node left/right at the same level or to the nearest unhidden ancestor/descendant up/down if none the cursor stays.
FR97: The pointing-device cursor shall track pointer motion clicking moves the keyboard cursor to the nearest element.
FR98: If keyboard cursor movement moves it off-screen the view shall scroll minimally to reveal it.
FR99: If the full SDT graph exceeds the main window a navigation window shall show a compressed overview with a box indicating the visible region.
FR100: Users shall be able to toggle the navigation window on and off.
FR101: The HATS-GUI shall provide SDT search prompt for a pattern highlight matches center on the first match set the keyboard cursor if none display ""No Match Found.""
FR102: To initiate an SDT search the user shall select nodes press Ctrl + Insert choose ""Tree Search"" press Ctrl + Shift + Insert to populate the search box and start the search.
FR103: SDT pattern search shall begin at the current cursor proceed top-to-bottom left-to-right wrap to the root and stop at the starting node.
FR104: The HATS-GUI shall support repeating the search forward from the current cursor stopping at the original start if no further match.
FR105: The HATS-GUI shall support repeating the search in reverse right-to-left bottom-to-top stopping at the original start if no further match.
FR106: Text-pattern search shall begin at the current cursor proceed left-to-right top-to-bottom wrap to the start and stop at the starting location.
FR107: Pretty-printed text formatting shall exactly match the source file no extra whitespace and displayed in a fixed-width font.
FR108: The user shall be able to select pretty-printed text files to display each shall open in its own window with horizontal and vertical scrolling.
FR109: The HATS-GUI shall not halt execution as a result of any HATS-SML error messages.
FR110: The HATS-GUI shall collect HATS-SML error messages in a single initially clear display area accessible via a tab listing errors in the order received.
FR111: Error messages shall not be displayed until the user requests them.
FR112: The user shall be able to clear the error display without restarting the HATS-GUI.
FR113: When both SDT and text views are open navigation in one shall mirror in the other with text highlighted for terminal-node descendants of selected SDT nodes.
FR114: When both SDT and text views are open text selection shall highlight corresponding SDT nodes.

Non-Functional Requirements (NFR)
NFR1: The HATS-GUI shall be able to communicate with Sun Solaris Linux and Windows 2000.
NFR2: The HATS-GUI shall display an SDT with 10 000 nodes in five seconds or less.
NFR3: The HATS-GUI shall display a 1 000 000-node SDT within ± 2 seconds of the time it takes to display a 10 000-node SDT.
NFR4: The HATS-GUI shall allow a user to request transformations while HATS-SML is parsing or performing transformations.
NFR5: The HATS-GUI shall allow navigating a 10 000-node SDT so that scrolling one screen width takes less than three seconds.
NFR6: The complexity of the text-search algorithm shall not exceed O(n²) for n nodes.
NFR7: The complexity of the tree-search algorithm shall not exceed O(n²) for n nodes.
NFR8: The complexity of the scrolling algorithms for text and graphs shall not exceed O(n²) for n displayed nodes.
NFR9: The user shall not be required to log in or authenticate when using the system.
NFR10: The GUI shall run on Windows 2000 Sun Solaris 8 and Linux without modifying the Java code.
NFR11: The system shall be implemented in the Java 1.3 programming language.
NFR12: The previously implemented algorithm of drawing the entire SDT in a large virtual window with a smaller viewport and zooming into portions of the tree shall be deemed unacceptable and shall not be used."
"2003 - qheadache";"The product is a computerized game that displays an interface used to solve a specific headache. The product runs as a standalone application. Its user interface uses menus, graphics and sounds. The product requires the use of a keyboard and a mouse to interface with the user. It requires a graphical display of at least 800*600 resolution. The users consist of anyone who wants to play a simple game who knows how to operate a computer, with a beginning level player starting at age 8, up through an advanced level player who could be an adult.";"Functional Requirements (FR)
FR1: The user must be able to undo and redo the last thousand actions.
FR2: The product must count and display the play time.
FR3: The product must count and display the number of user actions.
FR4: The product must record a play’s score (time and action count) associated with the user’s name.
FR5: The product must display a window with all player scores.
FR6: The main window must include a board and a menu bar.
FR7: The board must be a rectangular area for block movement with height 5x and width 4x where x is between 50 and 100 pixels and blocks are separated by a margin of 0.1x.
FR8: There must be four square blocks of side x.
FR9: There must be four rectangular blocks of size 2x by x.
FR10: There must be one block of size x by 2x.
FR11: There must be one square block of side 2x.
FR12: The board must be black and blocks must be yellow.
FR13: A block must be selected when the user left-clicks on it.
FR14: When a block is selected the game state must become Block Movement.
FR15: A block must be deselected when the user left-clicks on it again.
FR16: When a block is deselected the game state must become Block Selection.
FR17: During Block Movement state the selected block must follow the mouse.
FR18: The selected block must not overlap other blocks or exit the game area and must maintain at least 0.05x distance from other blocks.
FR19: The user must be able to cancel a movement.
FR20: After cancelling a movement the game must restore blocks to their previous positions and this must count as a movement and undo must be unavailable if no prior movement exists.
FR21: The user must be able to redo a cancelled movement.
FR22: After redoing a movement the game must restore blocks to positions before the cancellation and this must count as a movement and redo must be unavailable unless the previous action was undo.
FR23: When the large square reaches the bottom of the board the game must end.
FR24: Player statistics must be frozen when the game ends.
FR25: If the current player’s movement count is lower than the highest in the statistics file the Finish Window with Statistics must display otherwise the Simple Finish Window must display.
FR26: The Finish Window with Statistics must display You win! Enter your name: an edit box with 20-character limit and an OK button.
FR27: If the player clicks OK in the Finish Window with Statistics the statistics must be recorded and the window closed.
FR28: When the Finish Window closes the Statistics Window must display.
FR29: The Simple Finish Window must display You win! and an OK button.
FR30: If the player clicks OK in the Simple Finish Window it must close and the Statistics Window must display.
FR31: The game must record the number of block movements since start and the elapsed time.
FR32: Each block movement must increment the count by one and record the time difference from the previous movement.
FR33: The game must maintain statistics for up to ten players.
FR34: Player statistics (name, movement count, elapsed time) must be recorded and if ten entries exist the one with highest movement count must be removed.
FR35: If updating the file succeeds no output must occur otherwise an error message must display.
FR36: The user must be able to erase all statistics.
FR37: The Player Statistics Window must list up to ten entries (player name, movement count, elapsed time) from the statistics file.
FR38: The user must be able to open a saved game via a dialog which loads board state and statistics from the file.
FR39: The user must be able to save the current game and if never saved invoke Save As otherwise overwrite the previous file with current block positions, last 10000 previous positions, movement count and elapsed time.
FR40: When Save As is used a dialog must prompt for a file and then save current block positions, previous positions, movement count and elapsed time.
FR41: Exit must stop the game and if unsaved prompt to save with Yes invoking Save and closing the main window and No closing the main window.
FR42: The menu bar must contain Open Game, Save Game, Save Game As and Exit in that order.
FR43: The action menu must contain Undo and Redo in that order.
FR44: The statistics menu must contain Display and Erase in that order.
FR45: The Help menu must contain About and when activated the About Window must display Qheadache 1.0 by Jean-Philippe Brossat jp_brossat@yahoo.fr.

Non-Functional Requirements (NFR)
NFR1: There can be only one user per machine.
NFR2: The product must run on all operating systems supported by Qt.
NFR3: The product requires a graphical display of at least 800x600 resolution.
NFR4: The product must be portable to Windows OS."
"2005 - triangle";"Triangular Games is a stand-alone software application that is meant to realize games described in the article “Games on Triangulations”. A triangulation game is a strategic game played on a triangular grid, typically by two players. The objective of the game is to create a path that connects three sides of the triangular grid. Players take turns placing lines or dots on the grid, with the goal of preventing their opponent from completing a path while also trying to complete their own. The software makes it possible to play multiple triangulation games.  The games may be played alone or against another person, depending on the type of game. A graphical user interface will be shown to the user. This user interface is mainly mouse controlled but may also be used with a keyboard as well.
By default, the system will be able to implement three different games, namely constructing, transforming and marking. New games may be added to the software easily without the need to modify the code of the original application. These added games will be automatically selectable through the application’s graphical user interface. The software will be implemented using the Java-platform. This makes it possible to run the application on multiple different environments without any modification to the code.";"Functional Requirements (FR)
FR1: The system uses a graphical user interface to display data to the user.
FR2: The system can be fully operated using a keyboard.
FR3: The system can be fully operated using a mouse.
FR4: The system supports multiple games and can load additional games from an external source.
FR5: The system supports multiple opening positions that can be applied to all games.
FR6: The system shall support two-player turn-based gaming.
FR7: The system includes an artificial intelligence opponent that supports all two-player games.
FR8: The system provides an embedded AI that can assume control of a player on request.
FR9: The system can load implementation files for different artificial intelligences.
FR10: The system prompts the user to implement new AIs when available.
FR11: The system supports defining new games without modifying source code.
FR12: On startup the system shall search an external source for games and load them.
FR13: All games must end when a predefined condition is met.
FR14: The system must save game state to a file.
FR15: The system must load game state from a file.
FR16: The system includes embedded help files containing basic solutions and hints for problematic situations.

Non-Functional Requirements (NFR)
NFR1: All user interfaces must follow the common guidelines specified in the usability document.
NFR2: The interface shall consist of one main window for gameplay and dialog windows for changing general settings.
NFR3: The system shall function on any computer with a screen for output and keyboard mouse or both for input.
NFR4: The system requires a working Java runtime environment and a graphical user interface provided by the Java Swing library.
NFR5: The system must execute without issues on any machine that meets the Java runtime environment requirements.
NFR6: The basic artificial intelligence must calculate the next move within ten seconds.
NFR7: The system shall run well on both Linux and Windows and be playable using mouse keyboard or both."
"1999 - multi-mahjong.html";"MultiMahjong is a product consisting of two programs – a MultiMahjongServer and a MultiMahjongClient. This Server/Client architecture allows up to 4 players to play Mahjong against each other over a TCP/IP network. The MultiMahjongClient program also allows one player to play in stand-alone mode. As any game of Mahjong requires 4 players and there may not be 4 people available for a network game the system allows the user to select enough computer opponents to make up the required 4 players. In a single-player game the user plays against 3 computer opponents. To play the game users use the MultiMahjongClient. The MultiMahjongServer resides on a TCP/IP server and communicates with MultiMahjongClients."; "Functional Requirements (FR)
FR1: The MultiMahjongServer shall reside on a central computer connected to a TCP/IP network with a unique IP address.
FR2: The MultiMahjongServer shall accept connections from MultiMahjongClients and communicate via IP.
FR3: The MultiMahjongServer shall relay data received from one MultiMahjongClient to other requesting MultiMahjongClients.
FR4: The MultiMahjongServer shall automate game initialization functions including randomizing tile order seating position and storing the Game Info database.
FR5: The MultiMahjongServer shall maintain a High Scores list with the names and scores of the top players.
FR6: The MultiMahjongServer shall allow real-time chat between MultiMahjongClients.
FR7: The MultiMahjongServer shall permit players to modify their names and icons during gameplay.
FR8: The MultiMahjongServer shall host all required Computer Opponents.
FR9: The MultiMahjongServer shall provide a graphical interface for administrators to view logs and change settings.
FR10: The MultiMahjongServer shall save preferences to a file and load them at startup.
FR11: The MultiMahjongClient shall allow users at any time (when no game is in progress) to create a new multiplayer game create a new single-player game join an existing game or quit.
FR12: When creating a new multiplayer game the MultiMahjongClient shall prompt the user to enter a name choose an icon select the number of human and computer opponents (total 4) and set the score limit before beginning play.
FR13: The MultiMahjongClient shall send game initialization information to the MultiMahjongServer to start a new game.
FR14: When creating a new single-player game the MultiMahjongClient shall prompt the user to enter a name choose an icon and set the score limit.
FR15: The MultiMahjongClient shall retrieve a list of joinable games from the MultiMahjongServer when the user selects Join Game.
FR16: When joining a game the MultiMahjongClient shall prompt the user to enter a name choose an icon and select which game to join.
FR17: The MultiMahjongClient shall send join information to the MultiMahjongServer.
FR18: In single-player mode the MultiMahjongClient shall host three Computer Opponents. In multiplayer mode it shall host COs as needed so that each client hosts at most one CO.
FR19: The MultiMahjongClient shall retrieve from the MultiMahjongServer for each game whether it must host a CO the score limit all players’ names icons seating positions and the tiles of supported players.
FR20: The MultiMahjongClient shall display unstarted games showing the creator’s name and icon score limit and number of open seats.
FR21: The MultiMahjongClient shall save user preferences to a file and load them at startup.
FR22: The MultiMahjongClient shall allow game creators to set CO ability levels (Beginner Intermediate Advanced).
FR23: The MultiMahjongClient shall allow users to upload a custom JPEG or GIF image for their icon.
FR24: The MultiMahjongClient shall enforce Chinese Mahjong rules for all player moves.
FR25: The MultiMahjongClient shall notify the user when it is their turn to draw a tile.
FR26: The MultiMahjongClient shall update the display with other players’ actions retrieved from the MultiMahjongServer.
FR27: The MultiMahjongClient shall notify the user when Chow Pung Kong or Mahjong is available and send that choice to the server.
FR28: The MultiMahjongClient shall allow the user to draw a tile when it is their turn and send that action to the server.
FR29: The MultiMahjongClient shall allow the user to discard a tile and send that action to the server.
FR30: The MultiMahjongClient shall inform the user when another player is fishing.
FR31: The MultiMahjongClient shall inform the user when another player goes Mahjong and update the round wind if needed.
FR32: The MultiMahjongClient shall inform the user when a hand ends in a draw.
FR33: The MultiMahjongClient shall maintain the user’s tiles in order.
FR34: The MultiMahjongClient shall play sound effects for game actions.
FR35: The MultiMahjongClient shall allow the user to toggle sound on or off at any time.
FR36: The MultiMahjongClient shall provide online access to user documentation at any time.
FR37: The MultiMahjongClient shall allow viewing the High Scores list on the server.
FR38: The MultiMahjongClient shall automate drawing from the wall if no other option exists.
FR39: The MultiMahjongClient shall allow undoing the last move in single-player mode.
FR40: The MultiMahjongClient shall allow saving the game in single-player mode.
FR41: The MultiMahjongClient shall support real-time chat between players.
FR42: The MultiMahjongClient shall allow changing icons and names during the game.
FR43: The game shall end when four rounds have been played or the user chooses to end.
FR44: The user shall be able to end the game at any time then quit or start/join another game.
FR45: The MultiMahjongServer shall notify all connected clients when a game ends and allow them to quit or start/join a new game.
FR46: If a user leaves prematurely a CO shall be created on another client to fill their place preserving state.
FR47: Computer Opponents shall follow Chinese Mahjong rules.
FR48: Computer Opponents shall not access concealed tiles or wall faces.
FR49: Computer Opponents shall know the count of tiles in the wall and a player’s hand.
FR50: Computer Opponents shall read any player’s exposed or revealed hand.
FR51: Computer Opponents shall be able to draw discard reveal Kongs and perform Chow Pung Kong and Mahjong.
FR52: Computer Opponents shall track unplayed tiles based on discarded exposed or revealed tiles.
FR53: Computer Opponents shall recognize nearly complete sets and avoid discarding those tiles.
FR54: Computer Opponents shall play at three levels: Beginner Intermediate and Advanced.
FR55: Computer Opponents shall use look-ahead algorithms at Intermediate and Advanced levels.
FR56: Computer Opponents shall perform calculations at any stage.
FR57: Computer Opponents shall support rule variants specified by the game creator.
FR58: The system shall offer CO styles that users can choose.
FR59: The MultiMahjongClient shall calculate possible Chow Pung Kong and Mahjong moves within five seconds of the last discard notification.
FR60: The MultiMahjongServer shall run without a graphical interface under a command prompt.
FR61: The MultiMahjongClient shall provide a graphical interface operable by mouse and keyboard.
FR62: The MultiMahjongClient shall display animations for game actions.

Non-Functional Requirements (NFR)
NFR1: The system shall require computers to be configured for TCP/IP networking.
NFR2: If a nonfatal error occurs a dialog shall report the error and allow continuation.
NFR3: The error dialog shall include a link to the online troubleshooting guide.
NFR4: If a fatal error occurs a dialog shall report the error and only allow quitting and cleanup.
NFR5: The system shall be implemented in JDK 1.2.
NFR6: The coding standard shall follow Sun Microsystems conventions.
NFR7: The system shall support multiple languages via Java Unicode.
NFR8: The software shall run on any JVM supporting JDK 1.2 including Windows 95/98/NT Macintosh OS 8 and Solaris 2.6/7.
NFR9: Minimum processor requirement shall be 100 MHz.
NFR10: Minimum RAM requirement shall be 32 MB.
NFR11: Minimum disk requirement shall be 10 MB uncompressed.
NFR12: Minimum video requirement shall be 16-bit resolution 800x600.
NFR13: Minimum network requirement shall be TCP/IP LAN or 28.8 Kbps modem.
NFR14: Computer Opponents shall respond within one minute in single and multiplayer modes.
NFR15: The MultiMahjongServer shall support up to 10 simultaneous games (40 players)."
"2005 - phin";"This document describes the Public Health Information Network (PHIN) functional requirements for systems participating in the management of outbreaks and other health events. Outbreak Management (OM) is the PHIN functional area intended to support investigation, monitoring, management, analysis, and reporting of health events or acts of bioterrorism. OM should aid in data collection and analysis to identify and contain health events. OM systems should be configurable for different event types and capture data on cases, contacts, investigations, exposures, relationships, clinical and environmental specimens and samples, laboratory results, vaccinations, treatments, travel history, and conveyance information. The application should allow defining new objects during investigations. Central to OM functionality is the ability to collect case and exposure data and create traceable links between entities. By tracing transmission mechanisms and identifying sources, response staff can better contain events. OM systems should integrate with early event detection, countermeasure administration, laboratory, and surveillance systems to manage and mitigate events."; "Functional Requirements (FR)
FR1: Systems supporting OM shall address broad system-level needs such as flexible configuration.
FR2: Systems supporting OM shall collect a variety of data to support investigations, including demographics, cases, exposures, investigations, agents, contacts, specimen and sample collection, laboratory tests, travel and conveyance, and restriction monitoring.
FR3: Systems supporting OM shall support case investigation, maintain comprehensive linkages, trace contacts, and monitor quarantine and isolation.
FR4: Systems supporting OM shall enable investigators to produce aggregated and individual reports about affected entities and events.
FR5: OM information shall be exchangeable between systems involved in investigation, identification, confirmation, and reporting of a health event according to established standards.
FR6: Systems supporting OM shall use existing standard vocabulary lists and data structures and implement new standards as they emerge.
FR7: Systems supporting OM shall define personnel, roles, activities, and responsibilities necessary for all aspects of OM.
FR8: Systems supporting OM shall secure data from corruption and unauthorized access and protect OM systems from sabotage or failure, with a continuity plan for system unavailability.
FR9: Systems supporting OM shall protect patients, organizations, and personnel from fraudulent or unauthorized use of their information.
FR10: Systems supporting OM shall offer configuration flexibility to add new data fields, entities, entity types, and relationship types for each health event.
FR11: Systems supporting OM shall support structured data entry for common forms and fields to ensure data integrity, validity, and standardization.
FR12: Systems supporting OM shall support multiple deployment options, including client–server, disconnected, and web-based modes.
FR13: Systems supporting OM shall allow disconnected computers to reconnect and share OM data with other disconnected instances.
FR14: Systems supporting OM shall synchronize data across all instances connected to the same server.
FR15: Systems supporting OM shall record and store electronic data from remote devices uploaded to an aggregating system.
FR16: Systems supporting OM shall use configurable domain-specific vocabularies.
FR17: Systems supporting OM shall capture demographic data about persons involved in an investigation, including subject ID, name, address, date of birth, gender, phone number, race, ethnicity, and country of citizenship.
FR18: Systems supporting OM shall capture data about organizations involved in an investigation, including organization name, location, and contact information.
FR19: Systems supporting OM shall capture data about locations involved in an investigation, including name, type, street address, city, state, zip code, country, GPS coordinates, and other details.
FR20: Systems supporting OM shall capture data about animals involved in an investigation, including type, age, gender, owner name and address, color, weight, species, and a subject ID.
FR21: Systems supporting OM shall capture data for objects involved in an investigation that are not persons, organizations, places, or animals.
FR22: Systems supporting OM shall capture data about conveyances involved in an investigation, including type and route information.
FR23: Systems supporting OM shall capture data about gatherings involved in an investigation, including time, location, and nature of the event.
FR24: Systems supporting OM shall capture data about living things other than persons or animals, including type and custom data.
FR25: Systems supporting OM shall capture travel history for entities to support investigation of infection or exposure.
FR26: Investigated health events shall be assigned a unique jurisdictional Event ID.
FR27: Systems supporting OM shall capture event data including investigation reason, event category, start date, suspected agent or focus, geographic area, and status.
FR28: Systems supporting OM shall record the case definition for a health event.
FR29: Systems supporting OM shall capture changes to case definitions as health events evolve.
FR30: Systems supporting OM shall record travel history details including transportation method, flight number, departure and arrival dates and times, and origin and destination locations.
FR31: Systems supporting OM shall record travel history for animals or objects including shipping invoices, delivery receipts, and delivery schedules.
FR32: Systems supporting OM shall collect detailed conveyance data including carrier identifier, conveyance type, make, model, year, and identification number.
FR33: Systems supporting OM shall avoid capturing redundant demographic information for entities appearing in both case and exposure data.
FR34: Systems supporting OM shall capture case data including unique Case ID, suspected agent, diagnosis, health status, case status, investigation dates, clinical history, symptom onset, epidemiological links, and priority.
FR35: Systems supporting OM shall allow case diagnosis updates manually or automatically if case definitions change.
FR36: Systems supporting OM shall collect epidemiological data including symptom onset, symptom type, risk factors, medical history, laboratory data, procedure data, and questionnaire responses.
FR37: Systems supporting OM shall allow dynamic capture of event-specific case investigation data.
FR38: Systems supporting OM shall record and link all entities exposed in the context of a case.
FR39: Systems supporting OM shall capture investigator demographic information including name, address, and contact details.
FR40: Systems supporting OM shall capture both investigating and reporting jurisdictions for cases and investigations.
FR41: Systems supporting OM shall classify associated entities as investigation controls.
FR42: Systems supporting OM shall capture exposure investigation data including exposure level, type, place, duration, frequency, and proximity.
FR43: Systems supporting OM shall collect detailed exposure source and exposed entity data including type, subject ID, contact ID, contact name and address, exposure dates, health status, and priority.
FR44: Systems supporting OM shall collect epidemiological data for exposure investigation matching case investigation data elements.
FR45: Systems supporting OM shall capture dynamic event-specific contact data between subjects.
FR46: Systems supporting OM shall support monitoring and follow-up activities for cases and exposed individuals.
FR47: Systems supporting OM shall collect monitoring data for isolated or quarantined cases and exposures.
FR48: Systems supporting OM shall record follow-up exam data for individuals receiving countermeasures.
FR49: Systems supporting OM shall collect follow-up data from subjects or proxies to track symptoms and compliance.
FR50: Systems supporting OM shall assign a unique Specimen ID to each specimen or sample collected.
FR51: Systems supporting OM shall link specimens to subjects by unique Subject ID.
FR52: Systems supporting OM shall store specimen data including Specimen ID, Subject ID, purpose, collection date and time, subject type, specimen category and type, suspected agent, risk indicator, collector information, location, volume, and quantity.
FR53: Systems supporting OM shall include clinical specimen data covering source site, symptom onset date, and sample type (acute or convalescent).
FR54: Systems supporting OM shall include environmental sample data covering collection method, location, source, nature, quality control, collection times, and sample volumes.
FR55: Systems supporting OM shall include food sample data covering lot number, batch number, manufacturer, shipping invoice, temperature, sample type, and storage condition.
FR56: Systems supporting OM shall support bar-coding for specimen data capture.
FR57: Systems supporting OM shall capture chain of custody information for all specimens and samples.
FR58: Systems supporting OM shall capture detailed chain of custody for forensic and select agent samples including collector, location, handlers, and shipper acceptance.
FR59: Systems supporting OM shall create laboratory test requests for specimens or specimen groups.
FR60: Systems supporting OM shall collect batch shipment information including shipper, tracking number, and sender contact details.
FR61: Systems supporting OM shall support labeling, packaging, shipping instructions, and manifests for batch shipments.
FR62: Systems supporting OM shall store laboratory results and link them to original test requests.
FR63: Systems supporting OM shall store laboratory result data including Specimen ID, Subject ID, test date and time, test type, organization details, result values, interpretation, and notes.
FR64: If a specimen record exists results shall be linked by Specimen ID.
FR65: If no specimen record exists results shall be linked by Subject ID.
FR66: Systems supporting OM shall support all granularity levels of laboratory results.
FR67: Systems supporting OM shall capture or link prophylaxis and treatment data including orderer, name, date, type, duration, and dosage.
FR68: Systems supporting OM shall collect contraindication information explaining why interventions were not administered or complied with.
FR69: Systems supporting OM shall collect adverse event data for reactions to vaccines or prophylaxis to guide interventions or identify pharmaceutical or facility issues.
FR70: Systems supporting OM shall capture activity logs including date, time, activity type, initiator, and contact information.
FR71: Systems supporting OM shall support investigator activity logs for monitoring calls and follow-up scheduling.
FR72: Systems supporting OM shall support cross-jurisdiction communication tracking in activity logs.
FR73: Systems supporting OM shall provide validated electronic questionnaires for common, agent-specific, and custom data elements.
FR74: Systems supporting OM shall support digital signatures in electronic questionnaires.
FR75: Systems supporting OM shall provide configuration and revision control for investigation-specific questionnaires.
FR76: Systems supporting OM shall publish investigation-specific questionnaires and implementation guides.
FR77: Systems supporting OM shall support reusable questionnaire libraries using common terminology.  
FR78: Systems supporting OM shall support manual or automatic updates to case record status when definitions change.  
FR79: Systems supporting OM shall track case record status changes due to definition updates.  
FR80: Systems supporting OM shall support dynamic entity relationship definitions for investigation relationships.  
FR81: Systems supporting OM shall link epi data to entities including symptoms, survey questions, specimens, results, and interventions.  
FR82: Systems supporting OM shall link each new case’s Entity ID to its Event ID within an investigation.  
FR83: Systems supporting OM shall capture potential cases and contacts from identification through treatment and follow-up via entity, event, and action linkages.  
FR84: Systems supporting OM shall link laboratory results to specimens and subjects unambiguously, supporting multiple results per specimen.  
FR85: Systems supporting OM shall associate each subject with exposure contacts including cross-jurisdiction links.  
FR86: Systems supporting OM shall trace, investigate, and monitor contacts of exposed entities.  
FR87: Systems supporting OM shall create new contacts from case records and identify contact types.  
FR88: Systems supporting OM shall support contact exposure tracing allowing multiple contacts per case and multiple cases per contact.  
FR89: Systems supporting OM shall produce contact work lists sortable by priority or geography.  
FR90: Systems supporting OM shall allow analytical searches based on multiple criteria.  
FR91: Systems supporting OM shall produce charts, maps, and graphs illustrating OM data such as epi-curves and case distribution.  
FR92: Systems supporting OM shall generate electronic data dictionaries, line lists, activity logs, aggregate data, and call-back lists for response teams.  
FR93: Systems supporting OM shall generate reports indicating case counts, contacts per case, cases without epi-links, laboratory results, and intervention counts.  
FR94: Systems supporting OM shall support pre-formatted and ad-hoc queries and reports for efficient and accurate reporting.  
FR95: Systems supporting OM shall produce individual reports for emergency team members or investigators.  
FR96: Systems supporting OM shall compare characteristics of exposed and non-exposed persons.  
FR97: Systems supporting OM shall support printing questionnaires for multiple uses including field and phone interviews.  
FR98: Systems supporting OM shall aggregate data such as case counts, contacts per case, and intervention counts.  
FR99: Systems supporting OM shall centralize event data in a data warehouse for longitudinal analysis.  
FR100: Systems supporting OM shall provide data access to analytical tools such as SAS, SPSS, EPI-INFO, MS Access, MS Excel, and Crystal Reports.  
FR101: Systems supporting OM shall accept data from partner OM systems.  
FR102: Systems supporting OM shall create and send laboratory test request messages.  
FR103: Systems supporting OM shall receive, parse, and process laboratory test order responses per PHIN guidelines.  
FR104: Systems supporting OM shall receive, parse, and process laboratory result messages.  
FR105: Systems supporting OM shall exchange laboratory result messages with surveillance, early event detection, and preparedness systems.  
FR106: Systems supporting OM shall exchange messages for confirmed, probable, and suspect cases.  
FR107: Systems supporting OM shall exchange messages for investigations and exposure contacts.  
FR108: Systems supporting OM shall receive, parse, and process countermeasure administration messages.  
FR109: Systems supporting OM shall create and send countermeasure administration request messages.  
FR110: Systems supporting OM shall exchange aggregated data such as case counts, contacts per case, and intervention counts.  
FR111: Systems supporting OM shall provide aggregate data for event monitoring such as suspect cases, isolation, quarantine, and countermeasure recipients.  
FR112: Systems supporting OM shall define mapping interfaces and data dictionaries in data exchanges to describe standard and custom fields.  
FR113: Systems supporting OM shall group message components by observation type in data exchanges.  
FR114: Systems supporting OM shall support multiple import and export formats including databases, spreadsheets, messages, and text files.  
FR115: Systems supporting OM shall support data exchange for health event analysis and information sharing at all public health levels."
"2005 - clarus low";"This document describes the Clarus Initiative as a plan to interconnect autonomous surface‐transportation environmental data networks into a meta‐librarian system that collects organizes quality‐checks and publishes weather pavement and water‐level data to service providers and participants using standards such as NetCDF while supporting flexible centralized or decentralized architectures."; "Functional Requirements (FR)
FR1: The Clarus system shall implement quality‐checking processes as soon as data become available.
FR2: The Clarus system shall record the methods applied when deriving quality‐checking information.
FR3: The Clarus system shall implement quality‐checking rules for each environmental parameter.
FR4: The Clarus system shall implement quality‐checking rules for specific environmental situations.
FR5: The Clarus system shall implement quality‐checking rules specific to observation locations.
FR6: The Clarus system shall base its quality‐checking process on historical environmental data.
FR7: The Clarus system shall enable administrators to manage security groups.
FR8: The Clarus system shall restrict environmental data publication based on source.
FR9: The Clarus system shall record statistics about its operation.
FR10: The Clarus system shall log data transactions.
FR11: The Clarus system shall collect quality‐check and disseminate environmental data.
FR12: The Clarus system shall provide environmental data quality flags.
FR13: The Clarus system shall provide a user interface for administration.
FR14: The Clarus system shall manage data and metadata according to Clarus data‐sharing agreements.
FR15: The Clarus system shall detect data submission errors.
FR16: The Clarus system shall access in-situ observations from data collectors.
FR17: The Clarus system shall accept environmental data derived from images.
FR18: The Clarus system shall process data as they are received.
FR19: The Clarus system shall collect pavement-related observations.
FR20: The Clarus system shall accept environmental data from railway roadway maintenance construction service-patrol transit and emergency vehicles.
FR21: The Clarus system shall receive weather data from service providers.
FR22: The Clarus system shall notify contributors of data quality conditions.
FR23: The Clarus system shall enable quality managers to review passed and failed checks.
FR24: The Clarus system shall accept only observations with location timestamp and source metadata.
FR25: The Clarus system shall accept only observations of identified measurement types and units.
FR26: The Clarus system shall acquire process and disseminate data across North America.
FR27: The Clarus system shall accept data through a standard Clarus interface.
FR28: The Clarus system shall employ industry standards to minimize implementation impact.
FR29: The Clarus system shall disseminate data based on spatial queries.
FR30: The Clarus system shall recover automatically from unexpected shutdowns.
FR31: The Clarus system shall disseminate metadata in response to polling.
FR32: The Clarus system shall provide sensor equipment metadata on request.
FR33: The Clarus system shall respond to metadata queries from available metadata.
FR34: The Clarus system shall maintain a dynamic data library for at least seven days.
FR35: The Clarus system shall allow service providers to select specific data sets.
FR36: The Clarus system shall respond to data queries from available data.
FR37: The Clarus system shall disseminate data in response to scheduled requests.
FR38: The Clarus system shall disseminate data on change-notification requests.
FR39: The Clarus system shall notify subscribers when data sets become available.
FR40: The Clarus system shall enable data queries by location timestamp quality and source.
FR41: The Clarus system shall allow users to create data subscription requests.
FR42: The Clarus system shall implement quality-checking spatial tests using available data.
FR43: The Clarus system shall detect out-of-range values.
FR44: The Clarus system shall not modify original observations.
FR45: The Clarus system shall allow human quality checks of observations.
FR46: The Clarus system shall base its quality process on values from multiple observations and over time.

Non-Functional Requirements (NFR)
NFR1: The Clarus system shall minimize the time for data acquisition.
NFR2: The Clarus system baseline data types shall be defined by the NTCIP ESS 1204 standard.
NFR3: The Clarus system data definitions shall be consistent with the ITE TM 1.03 TMDD standard.
NFR4: The Clarus system shall transfer data as efficiently as possible.
NFR5: The Clarus system shall disseminate data using standard Internet protocols.
NFR6: The Clarus system shall minimize the time for data dissemination.
NFR7: The Clarus system shall respond to requests for information within five minutes.
NFR8: The Clarus system shall publish new data within twenty minutes of receipt.
NFR9: The Clarus system shall respond to requests for information within one minute.
NFR10: The Clarus system shall handle three hundred simultaneous data requests.
NFR11: The Clarus system shall complete automated quality checks within ten seconds of data receipt.
NFR12: The Clarus system shall be hosted at one or more physical locations.
NFR13: The Clarus system shall use hardware that implements industry-accepted interfaces.
NFR14: The Clarus system shall use software that implements industry-accepted interfaces.
NFR15: The Clarus system shall operate on redundant hardware.
NFR16: All HTML coding shall meet FHWA web requirements.
NFR17: The Clarus system shall support modular components.
NFR18: The Clarus system shall use latitude longitude and elevation to the nearest three feet.
NFR19: The Clarus system shall use Coordinated Universal Time for all timestamps.
NFR20: The Clarus system shall support six hundred concurrent users.
NFR21: The Clarus system shall support six thousand registered users.
NFR22: The Clarus system shall respond to 95 percent of requests 95 percent of the time.
NFR23: The Clarus program shall maintain continuous 24 x 7 operations.
NFR24: The Clarus program shall provide uninterruptible power.
NFR25: The Clarus program shall provide redundant communication."
"2003 - tachonet";"This document describes TACHOnet, a telematic network across the EU that automates information exchange among member states to ensure the uniqueness of heavy-vehicle driver smart cards and to enable centralized monitoring of professional drivers.";"Functional Requirements (FR)
FR1: The system shall allow a network member to send a request to one or all other members regarding the delivery status of a driver’s smart card.
FR2: The system shall allow a network member to send a bulk request concerning multiple driver smart card holders to one or all other members.
FR3: The system shall allow a member to generate statistics on messages sent and received.
FR4: The system shall track the workflow between request senders and their replies.
FR5: The system shall automatically transmit alert messages to senders repliers or administrators when reply time constraints are not met.
FR6: The system shall provide automatic replies to request senders via a standard interface to member systems.
FR7: The system shall allow the administrator to extract usage statistics standard reply delays by member and period and the percentage of unsuccessful transactions.
FR8: The system shall provide management of user rights and permissions.
FR9: The system shall allow inclusion of new network members through simple administrative tasks.
FR10: The system shall define and manage various message types such as pre-delivery checks stolen or lost cards renewals exchanges and duplicates.
FR11: The system shall be highly automated to relieve users of repetitive tasks.
FR12: The system shall provide application-level security including non-repudiation and encryption policies compatible with required security levels.
FR13: The system shall prevent any member including the administrator from reconstructing a consolidated European database.
FR14: The system shall allow a Member State to request card status (lost stolen etc) from the issuing authority.
FR15: The system shall allow a Member State to send card status modification requests (lost stolen etc) to the issuing authority.
FR16: The system shall allow enforcement authorities to request driver card status by card number and issuing state code or by personal details and issuing state code.
FR17: The system shall allow enforcement authorities to request workshop card status by workshop card number and issuing state code.
FR18: The system shall interface with members’ environments or provide a generic interface regardless of OS or technology.

Non-Functional Requirements (NFR)
NFR1: The system shall guide users through an interface based on end-user concepts.
NFR2: The system shall be easy to learn and shall not obstruct users’ thematic understanding.
NFR3: The system shall facilitate error correction.
NFR4: The system shall operate reliably with minimal interruptions in its first operational year and even fewer thereafter.
NFR5: The system shall support 24x7 high availability and shall respond to enforcement authority requests in under one minute.
NFR6: The system shall use the network facilities provided by the TESTA-II network."
"2010 - mashboot";"Mashbot is a web service for managing a companys presence on social networks by unifying interfaces of multiple services behind a standardized facade API. It supports scheduled marketing campaigns with a plugin‐based architecture for platforms such as Facebook Flickr Twitter Wordpress and YouTube."; "Functional Requirements (FR)
FR1: The system shall categorize users by roles and privileges and by user account roles within individual products.
FR2: The system shall support account roles of contributor approver and publisher.
FR3: A user may possess more than one role.
FR4: Roles shall reflect actions that can be performed by a user.
FR5: Roles can be assigned to a user account for individual products.
FR6: Contributors shall be able to create import edit delete and submit content for approval.
FR7: Approvers shall be able to approve actions performed by contributors.
FR8: Publishers shall be able to schedule or initiate actions by contributors and approvers.
FR9: The system shall allow creation of new user accounts.
FR10: The system shall allow any number of user accounts.
FR11: Users shall be able to modify their accounts after login.
FR12: The system shall require login before account modification.
FR13: The system shall allow deactivation of user accounts.
FR14: The system shall allow deletion of accounts with no history and prevent deletion of accounts with history.
FR15: The system shall deny access to deactivated users.
FR16: The system shall permit disabling all accounts except the system administrator.
FR17: The system shall allow users to reset their own passwords.
FR18: The system shall allow individual password resets.
FR19: A user shall only be allowed to change their own password.
FR20: A marketing campaign shall include name pieces of content schedule and user group permissions.
FR21: A schedule shall map times to publishing actions performable by a publisher.
FR22: A piece of content may be an image text video or audio.
FR23: The system shall associate Mashbot accounts with external service accounts.
FR24: The system shall provide an interface for authenticating user accounts to external services.
FR25: The system shall provide a standardized method for interacting with external services.
FR26: The user interface shall consist of a tabbed navigation bar with Dashboard Create Schedule and Explore tabs.
FR27: The Dashboard shall present graphs and charts of metrics including clickthrough rate page views and number of comments.
FR28: The Create view shall allow users to create or edit campaigns and content.
FR29: Users shall add content by selecting content types based on stored service credentials and schedule each element individually.
FR30: Users shall drag content items to the calendar to schedule with a default go‐live time of 12am and adjust the time as needed.
FR31: The calendar shall visually represent scheduled and deleted content and allow navigation by month.
FR32: The Explore view shall allow monitoring of social media through keyword searches and aggregate comments from content in campaigns.
FR33: A user shall be able to register a new account.
FR34: A user shall be able to log in.
FR35: A member shall be able to log out.
FR36: A member shall have a profile.
FR37: A member shall be able to modify their profile.
FR38: A user’s email shall be verified upon registration.
FR39: An admin shall be able to modify suspend and delete accounts.
FR40: A member shall be able to monitor trending topics and Facebook groups relevant to their campaigns.
FR41: A member shall be able to view @replies to tweets and responses to blog posts for their campaigns.
FR42: An admin shall be able to perform user account actions in bulk.
FR43: An admin shall be able to view edit and delete any campaign.
FR44: The system shall allow multiple users to collaborate on a campaign and support hierarchical permissions.
FR45: A campaign shall have a workflow approval process.
FR46: A member shall be able to unpublish delete and otherwise manage campaign content.
FR47: A member shall be able to schedule events in bulk or set live dates for individual events.
FR48: A member shall be able to delete existing content from supported services.
FR49: A member shall be able to see content published in all supported services.
FR50: A member shall be able to push to Facebook post to blogs post to Twitter and create new campaigns.
FR51: A member shall get notified when activity occurs in campaigns.

Non-Functional Requirements (NFR)
NFR1: The system shall encrypt data over the connection between web client and server.
NFR2: The system shall support backup to local or remote storage with incremental backups without outages and full backups with user interaction impact under ten minutes."
"2004 - rlcs";"The RLCS Application will allow an operator to view system status issue commands to change device status configure the system export log data generate reports and interface seamlessly with hardware devices. The five major software functions are GUI process control and monitoring sequencing data processing and security and reporting. The system will provide one-way data transfer of status data through a firewall to external systems every 30 seconds as well as a one-way serial data transfer. Workstations and controllers will reside on a private network to communicate field device information."; "Functional Requirements (FR)
FR1: The system shall have a graphical user interface allowing the operator to view system status issue commands to change device status configure the system export log data and generate reports.
FR2: The system shall provide a logon screen for the GUI.
FR3: The GUI shall display the current date time user name workstation location and other users logged into network units.
FR4: The GUI shall allow the user to monitor and control device opening and closing events with options appropriate to user security level.
FR5: The system shall display information about active overrides and unprotected devices.
FR6: The GUI shall present a geographic layout of the I-15 reversible lane control facility including mainline and SR-163 freeway areas.
FR7: The GUI shall provide a configuration option accessible only to administrators for viewing and modifying all database tables except log tables.
FR8: The configuration option shall allow assignment of security levels and passwords to staff members and remote account changes in field units.
FR9: When making configuration changes the GUI shall indicate affected devices controllers or workstations.
FR10: The system shall export logs in ASCII text for import into databases spreadsheets or reporting tools.
FR11: The GUI shall display detailed sensor data for individual devices and for categories of devices.
FR12: The user shall retrieve historic reports by date range and report name from the COTS reporting system.
FR13: The system shall display emergency contact information on alarm conditions.
FR14: The GUI shall request confirmation before executing user or scheduled commands.
FR15: The GUI shall allow alarm acknowledgement and configurable silencing of audible alarms.
FR16: The GUI shall provide diagnostic screens for sensor-level device failure diagnosis.
FR17: The system shall monitor all field sensors and process operator requests for device status changes.
FR18: All commands changing field control devices shall be integrity-checked at multiple levels.
FR19: The system shall control field elements to sensor level for controllable sensors aborting commands if any device status is unknown or invalid.
FR20: The system shall maintain current status for all devices at controller units and update sensor status alarms.
FR21: The software shall initialize control units and device sensors upon identification.
FR22: The system shall execute stored control sequences based on mode and schedule presenting them for operator confirmation.
FR23: Opening sequences shall halt if opposite direction closure device status becomes unknown or open.
FR24: The system shall log field device status to the database every two seconds configurable by the user.
FR25: The system shall update field device status displays every two seconds configurable by the user.
FR26: The system shall receive sensor status within two seconds of issuance and transmit control commands to devices within twelve seconds of operator confirmation.
FR27: Controller units shall monitor and send status and integrity data every two seconds or less.
FR28: The system shall detect alarm conditions within two seconds.
FR29: The system shall check scheduled events every sixty seconds to execute due actions.
FR30: The system shall support at least four normal daily open and close operations and equivalent emergency and maintenance schedules.

Non-Functional Requirements (NFR)
NFR1: The software shall support future facility changes through nonvolatile memory-based table updates without programming effort.
NFR2: The system shall employ a one-way hash function with a minimum 128-bit value for data and software integrity."
"2007 - water use";"The Water Use Tracking System is a GIS-based application that allows District employees and external customers to spatially and temporally track and analyze regulatory and resource management data to support SWUCA plan validation analysis and long-term trend assessment."; "Functional Requirements (FR)
FR1: The system shall track the relocation of active water use within the SWUCA.
FR2: The system shall track the movement of lapsed quantities including the originating permit well location reason for lapse and applicable MFL zone.
FR3: The system shall report the history of irrigation water conservation credits including balance earned used and drought quantities with individual geographic and aggregate reporting.
FR4: The system shall track and report on permitted data history such as use type irrigated acres and pumpage and detect reallocations of expired permits.
FR5: The system shall track and measure alternative source projects including surface water stormwater reclaimed water augmented surface water ASR desalination and conservation.
FR6: The system shall display the spatial impact of a permit application with other active applications and provide access to application and permit data with query by area or permit number while enforcing viewing restrictions.
FR7: The system shall create heat maps indicating over-pumping compliance and water credit usage.
FR8: The system shall create water-quality heat maps including sentinel well data.
FR9: The system shall report permits relocated by a permit holder.
FR10: The system shall track the impact of water use on MFL levels by comparing new or modified uses relocated uses change of use type lapsed quantities and retired permits.
FR11: The system shall track net benefit changes due to relocated permits changes of use reclaimed water and projects and calculate net benefit gain or loss.
FR12: The system shall report net benefit amounts for changes of location use land use change lapsed quantities and water withdrawal credits.
FR13: The system shall mark permits with land use changes to enable relocation to public supply utilities.
FR14: The system shall create a layer of MFL cones of depression indicating areas of influence.
FR15: The system shall report water-use transfers between permits including reclaimed-water leases.
FR16: The system shall report permit mitigation impacts including improvement percentage location cost method and effects.
FR17: The system shall report water made available through District resource development projects.
FR18: The system shall report permit duration.
FR19: The system shall compare data to adjacent districts GIS layers.
FR20: The system shall report permit compliance and crop reports by permit.
FR21: The system shall report competing applications including modifications and expirations.
FR22: The system shall provide MFL data comparisons including historical and current levels and mitigation requirements.
FR23: The system shall determine availability of alternative supplies such as reclaimed water and desalination.
FR24: The system shall report reserved-use amounts allocated to participants.
FR25: The system shall track ownership of wells and permits over time and trace relocated quantities with restrictions.
FR26: The system shall display permitted and actual pumpage and resource usage data from the water management database.
FR27: The system shall track requested and permitted quantities.
FR28: The system shall identify reactivation of standby permits due to loss of alternative quantities.
FR29: The system shall allow utilities and staff to find permits spatially and view use type acres and contact information.
FR30: The system shall analyze permits using GIS soil-type layers and compliance-based soil data.
FR31: The system shall provide printable and customizable maps.
FR32: The system shall link land purchases to permit-retirement evaluations.
FR33: The system shall track water-use changes due to land-use changes.
FR34: The system shall support queries by issue date expiration date use type commodity predominant use pumpage reports permitted quantities and permit status.
FR35: The system shall pull well packages for model integration including well details land elevation aquifer and depths.
FR36: The system shall associate permitted quantities pumpage and use-code data at the well level.
FR37: The system shall track land-use changes and their effect on water availability.
FR38: The system shall maintain historical permit data including spatial polygon representations.
FR39: The system shall track trends in land use and water-use changes.
FR40: The system shall support negotiation of new water use based on historical pumpage trends.
FR41: The system shall track water use by withdrawal source.
FR42: The system shall display pumpage quantities on maps with interactive statistics.
FR43: The system shall compare over-pumping percentages to regional averages by buffer distance and time.
FR44: The system shall identify pumped aquifer and enforce aquifer-specific constraints.
FR45: The system shall select water-use data temporally or with geographic overlays and export to spreadsheets.
FR46: The system shall select water use by predominant use type and region with historical trend support.
FR47: The system shall generate monthly Board reports showing monthly permitted quantity differences by area.
FR48: The system shall establish relationships between inputs such as rainfall and pumpage data.
FR49: The system shall report permitted versus actual water use by land use over time.
FR50: The system shall support ad-hoc geographic data extraction and aggregation via spatial queries and polygon buffers.
FR51: The system shall track aquifer level lake-level rainfall and stream-flow changes by area over time.
FR52: The system shall create layers of Developments of Regional Impact linked to population and demand projections.
FR53: The system shall identify stressed lakes their stress intervals and removal from stress lists.
FR54: The system shall track pumpage anomalies and predict compliance despite missing data.
FR55: The system shall map permittees not submitting reports and locate them for compliance actions.
FR56: The system shall report over-pumping noncompliance with options for time period area and map results.
FR57: The system shall assess AFL versus MFL comparisons with trending and resource impact analysis.
FR58: The system shall publish comparative charts of MFL and running AFL averages monthly.
FR59: The system shall add estimated quantities for unmetered permits from the water estimates database.
FR60: The system shall provide aggregated population data by service area and county.
FR61: The system shall provide spatial and temporal access to crop report information.
FR62: The system shall link water use environmental and well construction permits and notify staff of relevant changes.
FR63: The system shall calculate water quality trends by geographic area.
FR64: The system shall enable external customers to query and view application information locations by spatial temporal or data criteria with immediate or emailed results.
FR65: The system shall create a consistent grid for temporal data analysis including population and water use.
FR66: The system shall link pumpage water quality and water levels to enforce stop-pumping thresholds.
FR67: The system shall access well construction data by GPS or land description.
FR68: The system shall allow external users to click areas to obtain local lapsed quantities historical use and adjacent permit data for decision support.

Non-Functional Requirements (NFR)
NFR1: The system shall provide standard reports as hardcopy or interactive web-accessible documents with zoom pan and query capabilities.
NFR2: The system shall support GIS-based interactive maps and documents with zoom pan and query functionality."
"2009 - inventory 2.0";"The Inventory Management System allows Construction Junction staff to create maintain and view inventory contents and value in a categorized structure track items from donation to sale and integrates with QuickBooks POS and the organization’s website."; "Functional Requirements (FR)
FR1: The system shall provide a categorized view of the entire inventory down to individual items.
FR2: The system shall allow administrators to define inventory departments.
FR3: The system shall allow administrators to define inventory categories within departments.
FR4: The system shall allow administrators to customize attributes and details for each inventory item by department or category.
FR5: The system shall support adding items via donation processing or inventory management mode.
FR6: The system shall allow modifying deleting splitting and viewing details and history of unique and stock items.
FR7: The system shall suggest pricing based on historical original and sale prices of similar items.
FR8: The system shall display all past and current acquisition records for drop-off pickup and deconstruction donations.
FR9: The system shall create new acquisition records for unexpected drop-off donations at customer service or dock.
FR10: The system shall allow donors with or without acquisition numbers to receive donation receipts after acquisition record creation.
FR11: The system shall simplify acquisition data entry and allow printing of temporary acquisition labels.
FR12: The system shall allow crews to initiate acquisitions and require associate review before adding items to inventory.
FR13: The system shall update inventory upon sale via QuickBooks POS.
FR14: The system shall provide reporting by inventory items departments categories acquisitions and donors.
FR15: The system shall generate correlated reports across inventory entities.
FR16: The system shall integrate with the website to allow hierarchical and advanced keyword searches.
FR17: The system shall integrate Contact Us and Online Donation Form pages with Salesforce and image upload.
FR18: The system shall implement Salesforce Ideas on the Recycling & Resources webpage for crowdsourcing.
FR19: The system shall provide Add to Cart view cart checkout and forward-to-friend functionality.
FR20: The system shall restrict online purchases to flagged items and display sold status for fifteen days.
FR21: The system shall implement a membership program linked to CRM and POS for fast donor lookup.
FR22: The system shall issue in-store credit for frequent donors.
FR23: The system shall report items donated by a donor and their sale amounts.
FR24: The system shall allow staff-only wish lists with notifications when items become available.
FR25: The system shall automatically discount item prices over time based on aging rules.
FR26: The system shall track items purchased and left on-site for up to seven days.
FR27: The system shall send automated pickup reminder emails and update item status upon pickup.
FR28: The system shall support threshold-based overstock and understock indicators by department or category.
FR29: The system shall allow receiving of overstocked items and report overstock departments and categories.
FR30: The system shall support handheld or tablet scanning and inventory updates for staff and crews.
FR31: The system shall allow adding backstory information for unique items and share it in-store and online.
FR32: The system shall calculate donation size and truck capacity for Pickup/Decon logistics.
FR33: The system shall allow entry of donor‐related details to support future donations.
FR34: The system shall use touch-screen interfaces to minimize errors clicks and page switches.
FR35: The system shall be available during normal Construction Junction operating hours.

Non-Functional Requirements (NFR)
NFR1: The system shall require user login for staff access record created and modified user and timestamps and log sensitive operations.
NFR2: The system shall maintain consistently low response times to support timely task execution.
NFR3: The system shall provide all functionality via a web browser interface.
NFR4: The user interface shall use cross-browser standards and avoid browser-specific features.
NFR5: The system shall be built using industry best practices approved technologies and supportable by existing staff."
"2008 - vub";"The product will support a Publication Management System accessible via command line and web browser following W3C XHTML standards. The system will manage a database of bibliographical information and allow saving full publications in PDF and PostScript. It will automatically extract bibliographical information from the full text with manual correction options. Authors will be explicitly recognized and users can merge variants of names. The system will support bulk updates. The system will allow access to full text or abstracts with access control. The PMS will rely on a database and web server accessible via browser or command line. The system will support multiple user types. A Guest may log in or register anonymously. A VUB network user may search and download publications. A Member may search and download publications. A Publisher may upload publications. A Moderator may edit and delete publications. An Administrator may manage users technical settings and expel users. Access from outside the VUB network requires login. Registration requires first and last name password and valid email address with confirmation."; "Functional Requirements (FR)
FR1: The system shall allow logging in from the internet.
FR2: The system shall allow logging in via the VUB network.
FR3: The system shall allow account registration.
FR4: The system shall allow users to log off.
FR5: The system shall allow users to change their password.
FR6: The system shall allow searching for publications.
FR7: The system shall allow viewing search results.
FR8: The system shall allow viewing publication details.
FR9: The system shall allow viewing details for multiple publications.
FR10: The system shall allow downloading multiple publications.
FR11: The system shall allow downloading a single publication.
FR12: The system shall allow consulting publication references.
FR13: The system shall allow consulting references for multiple publications.
FR14: The system shall display the full text of a publication.
FR15: The system shall allow viewing details of a reference.
FR16: The system shall allow exporting cited references in BIB format.
FR17: The system shall allow exporting cited references in RIS format.
FR18: The system shall allow viewing author information.
FR19: The system shall allow editing personal data.
FR20: The system shall allow accessing own publications.
FR21: The system shall allow editing own publications.
FR22: The system shall allow uploading publications.
FR23: The system shall allow searching for users.
FR24: The system shall allow editing user settings.
FR25: The system shall allow creating user accounts.
FR26: The system shall allow deleting user accounts.
FR27: The system shall allow creating groups.
FR28: The system shall allow searching for groups.
FR29: The system shall allow deleting groups.
FR30: The system shall allow editing group settings.
FR31: The system shall allow editing system configuration settings.

Non-Functional Requirements (NFR)
NFR1: All data shall be saved in the database including static and dynamic information statistics publications and administrator settings with database consistency maintained at all times.
NFR2: The database shall support concurrent SQL requests without performance degradation and shall include backup structures for server or disk failure recovery.
NFR3: The web interface shall conform to W3C XHTML 1.0 Transitional standard.
NFR4: The implementation shall comply with SE1 coding conventions and object-oriented design.
NFR5: Design diagrams shall follow the UML standard.
NFR6: The PMS shall be available at all times from any computer.
NFR7: In case of database corruption the administrator shall restore the last database backup and reinitialize the system after resolving failures.
NFR8: Every user account shall be protected with a personal password accessible only by that user.
NFR9: User passwords shall be encrypted in transit and at rest to prevent unauthorized access.
NFR10: Direct database access shall be restricted to administrators via the command line interface.
NFR11: User levels shall be enforced for editing deleting and uploading publications.
NFR12: The database shall be maintained by administrators."
"2005 - microcare";"The Voucher Management System automates voucher creation distribution sales claim processing returns feedback reporting and security to minimize manual processes improve quality track claims prevent fraud and ensure timely payments."; "Functional Requirements (FR)
FR1: The system shall generate unique voucher numbers print them as barcodes and track them through distribution sales treatment claims processing and payment reporting.
FR2: Each voucher shall include project code group batch two-digit batch number ten-digit voucher number and security code.
FR3: The system shall enforce voucher validity dates modifiable only by authorized users.
FR4: Each voucher shall specify its maximum retail price.
FR5: Each voucher shall consist of three tear-off slips with a partner sub-section.
FR6: Tear-off voucher slips shall be adhesive to prevent loss on claim forms.
FR7: Each voucher slip shall include the voucher barcode and separate identifiers for client and partner.
FR8: The system shall maintain a distributor master with unique code name address location type and contact details to track sales.
FR9: Distributor records shall include code name business type proprietor designation address phone email and status.
FR10: The system shall maintain a salesman master to track performance of each MSIU sales team member.
FR11: The system shall capture distribution transactions including distributor name salesman date quantity sold batch allocation invoice amount and payment mode.
FR12: The system shall generate an auto-incrementing distribution invoice number.
FR13: The system shall allow adding new distributors or salesmen via popup master screens without closing the current form.
FR14: The system shall auto-select voucher batch and serial numbers from available stock and display batch serial and validity date.
FR15: In claim entry the system shall validate all data before saving to the database.
FR16: The system shall maintain a VSP master with code name physical and communication addresses locality facility level type registration body contact and status.
FR17: The system shall populate only active VSPs in entry screens and all VSPs in reporting.
FR18: Geographic and VSP fields shall support master-data lookup and on-the-fly creation of missing records.
FR19: The system shall warn and confirm when creating a VSP with an existing name.
FR20: The system shall auto-deactivate VSPs with more than two fraudulent claims and allow reactivation by management.
FR21: The system shall maintain payment-terms master including mode bank account bank name and payment frequency.
FR22: The VSP screen shall display claim-submission status details for the selected VSP.
FR23: The system shall capture VSP staff details upon claim entry.
FR24: Based on payment terms the system shall record claim-submission metadata including VSP name submission date form counts and treatment form numbers.
FR25: The system shall allow manual rejection of incomplete or invalid claims and quarantine them for resubmission.
FR26: The system shall capture detailed claim data including form number claim number submission date VSP name voucher number visit count patient demographics doctor notes HIV details claim amount and status.
FR27: The system shall support voucher-sales returns capturing distributor name salesman name return date and return amount.
FR28: The system shall validate returned vouchers against sales history and reject invalid returns.
FR29: The system shall record client feedback collected by MSIU.
FR30: The system shall generate analytical medical financial and statistical reports.
FR31: The system shall manage security by user group capturing group code and name.
FR32: The system shall allow creation of unlimited users within each user group.
FR33: The system shall save user records only if password and confirmation match.
FR34: The system shall prevent creation of duplicate user groups or users.
FR35: The application shall use touch-screen interfaces to minimize errors clicks and page switches.
FR36: The system shall be available during normal operating hours.

Non-Functional Requirements (NFR)
NFR1: The system shall require user login authorize access by role and record created/modified user and timestamp and log sensitive operations.
NFR2: The system shall maintain consistently low response times to support timely task execution.
NFR3: The system shall provide all functionality via a standards-compliant web browser interface.
NFR4: The user interface shall adhere to cross-browser standards and avoid browser-specific features.
NFR5: The system shall be built using industry best practices approved technologies and supportable by existing staff."
"2004 - sprat";"Based on the utility of goals and scenarios the tool assists analysts in mining reconciling and managing goal and scenario repositories with traceability classification and analysis modules support multi-user comparison and modular functionality across user roles and policy documents."; "Functional Requirements (FR)
FR1: The system shall support an administrator level a project manager level a guest level and an analyst level.
FR2: The system shall allow all users to have different access levels to projects.
FR3: The system shall allow users to securely log onto the system.
FR4: The system shall allow analysts to enter new goals as they are identified.
FR5: The system shall provide templates for goals scenarios rules and access control policies.
FR6: The system shall allow analysts to classify goals.
FR7: The system shall allow multiple subject classifications for each goal.
FR8: The system shall allow the project manager to add new goal classification types.
FR9: The system shall allow analysts to request new classification types and project managers to create them.
FR10: The system shall provide the ability to update existing goals.
FR11: The system shall provide the ability to delete goals.
FR12: The system shall automatically propagate associated policy information upon goal deletion or replacement.
FR13: The system shall display the number of occurrences of a goal in a policy across multiple policies and within a domain.
FR14: The system shall maintain traceability links between goals and their source policies.
FR15: The system shall display the number of distinct goals occurring in a policy.
FR16: The system shall display the context of a goal.
FR17: The system shall allow analysts to create update and guests to view goal keyword definitions.
FR18: The system shall allow project managers or definition creators to lock and unlock keyword definitions.
FR19: The system shall allow analysts and guests to search goals by analyst-selected attributes.
FR20: The system shall allow analysts to view elements of goals returned by queries.
FR21: The system shall support conflict identification and resolution.
FR22: The system shall allow analysts to view scenarios associated with individual scenarios.
FR23: The system shall allow project managers to add analysis documents and assign domains.
FR24: The system shall allow project managers to edit document domains.
FR25: The system shall allow project managers to delete document domains.
FR26: The system shall allow project managers to create document types.
FR27: The system shall display document names and links within a domain in alphabetical order.
FR28: The system shall support automatic multi-user analysis result comparison on demand.
FR29: The system shall allow project managers to create new domains and assign existing documents.
FR30: The system shall calculate Flesch Readability Score and Flesch-Kincaid Grade Level and display scores word and sentence counts via links to source documents.
FR31: The system shall allow analysts to add scenarios.
FR32: The system shall allow analysts to edit scenarios within projects.
FR33: The system shall allow deletion of scenarios from projects without system removal.
FR34: The system shall allow analysts to reuse scenarios.
FR35: The system shall allow analysts to view goals associated with scenarios.
FR36: The system shall allow analysts to view elements of any scenario.
FR37: The system shall list scenarios sharing specified attributes.
FR38: The system shall provide the ability to specify requirements.
FR39: The system shall provide the ability to add requirements.
FR40: The system shall provide the ability to delete requirements.
FR41: The system shall provide the ability to edit requirements.
FR42: The system shall provide a template for specifying requirements.
FR43: The system shall offer a trial version allowing entry of up to thirty objects.
FR44: The system shall allow analysts to add new objects with names types and attributes.
FR45: The system shall support association of privacy preferences with objects.
FR46: The system shall support hierarchical data structures and types.
FR47: The system shall allow graphical viewing of data structures.
FR48: The system shall support derivation of access control elements.
FR49: The system shall allow analysts to view scenario elements and edit access control rules concurrently.
FR50: The system shall support hierarchical representation of organizational structures.
FR51: The system shall support representation of organizational boundaries.
FR52: The system shall support representation of actor relationships.
FR53: The system shall support definition of roles.
FR54: The system shall support analysis of specific types of data flow within or across organizational boundaries given access control policies."
"2001 - esa";"The ASPERA-3 instrument package will fly on the European Space Agency’s Mars Express mission in mid-2003 and contains sensors to measure particles neutral atoms and fields in the Martian environment. Southwest Research Institute will provide the ASPERA-3 Processing and Archiving Facility (APAF) to acquire telemetry via NISN process it into Instrument Data File Set (IDFS) data products archive data locally distribute data to the team provide web-based displays and submit IDFS data to PDS."; "Functional Requirements (FR)
FR1: The system shall acquire ASPERA-3 experiment and Mars Express orbit and attitude telemetry from ESOC.
FR2: The system shall process all ASPERA-3 science data into IDFS data sets.
FR3: The system shall process engineering and ancillary information for calibration and science validation into IDFS data sets.
FR4: The system shall generate intermediate cleaned-up ASPERA-3 and MEX OA telemetry files if not provided by ESOC.
FR5: The system shall store ASPERA-3 and MEX OA telemetry data on a local SwRI archive.
FR6: The system shall store ASPERA-3 and MEX OA IDFS data sets on a local SwRI archive.
FR7: The system shall store any APAF-generated intermediate telemetry files on a local SwRI archive.
FR8: The system shall provide web-based displays of the most current ASPERA-3 data for public view.
FR9: The system shall provide web-based displays defined by the ASPERA-3 team for science analysis using any available data.
FR10: The system shall password-protect science-analysis web displays until ASPERA-3 data are public.
FR11: The system shall include built-in error handling in the APAF ground data system.
FR12: The system shall provide IDFS data and intermediate telemetry files to all ASPERA-3 Co-Is.
FR13: The system shall make IDFS data access software developed by SwRI available to ASPERA-3 Co-Is.
FR14: The system shall make science analysis software for IDFS-formatted data available to ASPERA-3 Co-Is.
FR15: The system shall provide ASPERA-3 and MEX OA IDFS data sets to NASA PDS.
FR16: The system shall provide IDFS data-processing algorithms to IRF.
FR17: The system shall deliver electronically distributed intermediate telemetry files to Co-Is within 24 hours of acquisition if transmission and processing are error-free.
FR18: The system shall integrate science analysis software into the NASA-approved data repository."
"2009 - model manager";"The Model Manager is a software tool for configuring scheduling running monitoring stopping and resuming model jobs. It extends the existing back-end system automates node management and job lifecycle operations via command-line or configuration files."; "Functional Requirements (FR)
FR1: Once logged in the user shall be able to submit a new job.
FR2: Once logged in the user shall be able to retrieve saved job configurations.
FR3: Once logged in the user shall be able to view the job queue and monitor running jobs.
FR4: The user shall be able to set up and submit a new model or post-processing job.
FR5: The user shall be able to submit a by-hand job.
FR6: The user shall be able to submit a job via a configuration file.
FR7: The user shall be able to retrieve modify and resubmit a previously saved job configuration.
FR8: The system shall present submission options for a new model job new post-processing job by-hand job or configuration file.
FR9: The user shall be able to select the cluster on which the job will run.
FR10: The user shall be able to choose the model to use.
FR11: The user shall define a unique job identifier.
FR12: The user shall schedule the job run time and cycle and specify case study or re-run for past cycles.
FR13: The user shall supply job parameters such as cycle interval forecast length and other applicable settings.
FR14: The user shall specify whether to write restart files and their frequency.
FR15: The user shall choose a predefined sigma-level configuration or supply a custom one.
FR16: The user shall specify the number of nodes to use.
FR17: The user shall be able to opt into email notifications at job start end and termination.
FR18: The user shall be able to enable final analysis for re-runs and case studies.
FR19: The user shall be able to enable preliminary analysis for re-runs and case studies.
FR20: The user shall be able to enable additional processing of model output.
FR21: The user shall be able to save model output to MetVault specifying output files.
FR22: The user shall be able to enable post-processing.
FR23: The user shall be able to select the type of post-processing to run.
FR24: The user shall be able to save a job configuration.
FR25: The user shall be able to view submitted jobs in the job queue.
FR26: The user shall be able to modify a job configuration and resubmit it.
FR27: The user shall be able to filter the job list by running scheduled past or all jobs.
FR28: The user shall be able to select a job and view detailed information.
FR29: The user shall be able to view a job’s log files.
FR30: The user shall be able to delete own jobs and a super user shall be able to delete any job.
FR31: The user shall be able to stop own running jobs and a super user shall be able to stop any job.
FR32: The user shall be able to restart own jobs and a super user shall be able to restart any job.
FR33: The user shall be able to resume own stopped jobs and a super user shall be able to resume any stopped job."
"2002 - evla back";"The Correlator Backend System performs real-time assembly formatting and processing of lag-frame telemetry from the EVLA Correlator into time series and spectra for delivery to End-to-End systems archival and science analysis with support for user-selected processing and error recovery."; "Functional Requirements (FR)
FR1: The system shall acknowledge receipt of all commands and data from the Monitor and Control System.
FR2: The system shall notify the Monitor and Control System of interruptions in data delivery from the Correlator.
FR3: The system shall verify successful delivery of output data to the End-to-End System.
FR4: The system shall guarantee safe delivery of all internal messages.
FR5: The system shall handle lag frames containing fewer than 128 values.
FR6: The system shall handle lag sets of up to 262144 values.
FR7: The system shall receive incoming data packets from the Correlator via the Backend network interface.
FR8: The system shall verify receipt of incoming data including error checking completeness statistics accumulation and out-of-tolerance reporting.
FR9: The system shall buffer input data in memory track buffer locations until processing completes and report buffer overflows.
FR10: The system shall respond to correlator mode changes user processing sequence changes and external commands by updating parameters and synchronizing the processing pipeline.
FR11: The system shall assemble input lag frames into continuous time series.
FR12: The system shall verify time series data ordering validity and report any out-of-tolerance conditions.
FR13: The system shall replace invalid data values with zeros.
FR14: The system shall track counts of invalid data values.
FR15: The system shall apply normalization based on invalid data statistics.
FR16: The system shall apply coarse quantization correction (Van Vleck correction).
FR17: The system shall perform time stamp adjustments as required by observational mode parameters.
FR18: The system shall apply windowing operations before and after Fourier transforms for RFI mitigation.
FR19: The system shall support chainable user-selected time-domain processing.
FR20: The system shall perform power-of-two complex-to-complex FFTs retaining positive and negative frequencies and accept time-domain outputs as input.
FR21: The system shall support chainable user-selected frequency-domain processing.
FR22: The system shall integrate spectral results with summation duration controlled by mode parameters and track sample counts per channel.
FR23: The system shall format output spectra with metadata auxiliary data into AIPS++ Measurement Set entities.
FR24: The system shall buffer formatted output in memory with disk backup track status until transmission and report errors and overflows.
FR25: The system shall send formatted output data to the End-to-End System.
FR26: The system shall verify successful receipt of sent output data and report any errors.
FR27: The system shall monitor data transfer rates from the Correlator and to the End-to-End System accumulate statistics compare against tolerances and report out-of-tolerance conditions.
FR28: The system shall monitor data processing performance accumulate statistics compare against tolerances and report out-of-tolerance conditions.
FR29: The system shall trap flag and recover from computational errors underflows overflows NaNs and infinities accumulate statistics compare against tolerances and report out-of-tolerance conditions.
FR30: The system shall monitor application processes and processors periodically or on request and report missing stopped defunct or damaged components.
FR31: The system shall monitor internal networks periodically or on request and report non-functioning components.
FR32: The system shall initiate processing tasks on any Backend processor on demand.
FR33: The system shall stop any Backend process on demand.
FR34: The system shall reboot any Backend processor on demand.
FR35: The system shall alter the priority of any Backend task on demand.
FR36: The system shall reboot any internal network on demand.
FR37: The system shall redistribute internal workload among processors including adjusting Correlator network destinations.
FR38: The system shall ensure all processes support reversible data processing preserving raw input recoverability.
FR39: The system shall maintain an input data queue with buffer and status tracking for lag frames.
FR40: The system shall maintain an output data queue with buffer disk backup and status tracking for processed spectra.
FR41: The system shall store processing parameters including sequence positions and adjustable parameters for all pipeline applications.
FR42: The system shall store processing flags identifying error and processing states.
FR43: The system shall store metadata for time series and spectra including invalid flags applied processes and coordinates.
FR44: The system shall report errors warnings failures recoveries and status messages to the Monitor and Control System.

Non-Functional Requirements (NFR)
NFR1: The system shall accept data input streams from the Correlator at a minimum of 1.6 GBytes per second.
NFR2: The system shall deliver output data streams to the End-to-End System at a minimum of 25 MBytes per second.
NFR3: The system shall have sufficient CPU capacity to perform all processing tasks without input or output data loss or delay.
NFR4: The system shall have sufficient memory and access speed to avoid input or output data loss or delay.
NFR5: The system shall have sufficient storage capacity and access speed to buffer short-duration data loads.
NFR6: The system shall support standby mode and resume operations with minimal delay.
NFR7: All users shall log in using unique identification."
"2002 - evla corr";"The Correlator Monitor & Control System provides the interface between the WIDAR Correlator hardware and the EVLA monitor and control environment via a master/slave network abstraction with a Virtual Correlator Interface gateway."; "Functional Requirements (FR)
FR1: The system shall power all computers and peripherals through UPS devices with capacity to safely coordinate a system-wide shutdown during prolonged outages.
FR2: The system shall use Ethernet IEEE 802.3 compliant interfaces at 100 Mbit/s or higher for CMIB MCCC and CPCC communications.
FR3: The system shall use transformer-coupled copper twisted-pair cabling unless noise ground isolation or distance constraints require other materials.
FR4: The system shall employ network switches within correlator racks to reduce wiring complexity.
FR5: The system shall isolate MCCC-CMIB MCCC-CPCC and MCCC-EVLA M&C networks on separate physical interfaces.
FR6: The system shall provide a redundant serial communication path between MCCC and CPCC for remote reboot in case of network or computing failures.
FR7: The system shall use fiber-optic or other low-RFI cabling for pathways penetrating the correlator shielded room.
FR8: The system shall employ routers or switches at the MCCC-EVLA M&C interface to protect against unauthorized access and irrelevant traffic.
FR9: The CMIB daughter board shall communicate with correlator carrier boards via PCI or ISA buses.
FR10: The CMIB shall read a 16-bit identifier from the host correlator board.
FR11: The CMIB shall read back the contents of all writable hardware control registers.
FR12: The CMIB shall support external commands to perform hardware warm boots.
FR13: The CMIB carrier board shall include visible indicators for operational status with red for fault and green for OK.
FR14: The system shall allow authorized users to remotely access individual CMCS computers via secure remote login.
FR15: Each CMCS computer shall include a hardware watchdog timer configured to reboot on system hang.
FR16: The CMIB shall include at least 64 MB of SDRAM IDE disk interface serial and parallel ports PCI or ISA bus support and a 100Base-T network interface to boot and run a generic COTS OS in a near-real-time environment from local non-volatile storage.
FR17: The operating system and module combination shall support real-time hardware control diagnostics standalone test-bench operation and network upgrades of PLD and FPGA personalities.
FR18: The MCCC shall support stand-alone boot and operation with local disk and file systems enabling CMIBs to boot configure and run without external communication.
FR19: The CPCC shall be a high-availability general-purpose computer supporting a COTS OS and capable of accepting multiple external hardware status signals through interface hardware.
FR20: The CPCC shall support stand-alone boot and operation with local disk and file systems.
FR21: The MCCC shall be a high-availability general-purpose computer with multiple Ethernet interfaces COTS OS server services and hot-swappable or redundant CPU support.
FR22: The system shall report all errors warnings and debug messages at the MCCC layer for display without direct CPU access.
FR23: The system shall categorize error and debug messages to enable filtering by content detail and rate.
FR24: The system shall provide a graphical interface for CMCS test software accessible remotely through the Virtual Correlator Interface.
FR25: The system shall provide test software enabling authorized users full access to all messaging monitoring and control traffic.
FR26: The system shall self-monitor and attempt autonomous correction of hardware and software faults.

Non-Functional Requirements (NFR)
NFR1: The software shall perform without requiring a total system restart due to internal failures between maintenance windows.
NFR2: The hardware shall operate indefinitely without complete loss of service except during total primary and backup power failure.
NFR3: The system shall continue processing configuration and control events until command queues are exhausted and communications are restored after loss of control data.
NFR4: The system shall support standby mode and resume operations with minimal delay.
NFR5: All system processing and interconnect hardware shall be easily accessible for maintenance repair replacement and reconfiguration.
NFR6: All system and application source code shall be available on the executing systems.
NFR7: All software processes shall be killable restartable debuggable and testable with minimal impact on operations.
NFR8: Software tools without source code shall include diagnostic packages and customer support.
NFR9: Operating systems shall either include source code or sufficient diagnostics and support.
NFR10: I/O communications and processing hardware shall be expandable reconfigurable augmentable and replaceable to meet evolving demands.
NFR11: All users shall log in using unique identification."
"2007 - mdot";"The DUAP system collects consolidates transforms and communicates transportation data from vehicles traffic management systems weather sources and traveler information via input dynamic persistent computational output presentation and administrative services."; "Functional Requirements (FR)
FR1: The DUAP System shall collect probe vehicle data.
FR2: The DUAP System shall collect roadway traffic data.
FR3: The DUAP System shall be able to collect weather data.
FR4: The DUAP System shall be able to collect Origin/Destination data.
FR5: The DUAP System shall be able to collect traveler information.
FR6: The DUAP System shall be able to collect road condition data.
FR7: The DUAP System shall be able to collect work zone data.
FR8: The DUAP System shall log Input Services data transactions.
FR9: The DUAP System shall organize the execution sequence of computational modules.
FR10: The DUAP System shall allow administrators to add modify and delete Input Services.
FR11: The DUAP System shall allow administrators to add modify and delete Computational Services.
FR12: The DUAP System shall allow administrators to add modify and delete Output Services.
FR13: The DUAP System shall allow administrators to add modify and delete Presentation Services.
FR14: The DUAP System shall restrict access to authorized users.
FR15: The DUAP System shall keep records of user access.
FR16: The DUAP System shall allow administrators to manage user access rights.
FR17: The DUAP System shall log system operations.
FR18: The DUAP System shall log Administrative Services data transactions.
FR19: The DUAP System shall cache raw and derived probe vehicle data.
FR20: The DUAP System shall cache raw and derived traffic data.
FR21: The DUAP System shall cache raw and derived road weather data.
FR22: The DUAP System shall cache raw and derived road condition data.
FR23: The DUAP System shall cache data only if associated with source location and timestamp.
FR24: The DUAP System shall log Dynamic Data Services data transactions.
FR25: The DUAP System shall derive traffic data from probe vehicle data.
FR26: Computational Services shall derive speed from probe vehicle data.
FR27: Computational Services shall derive congestion level based on volume to capacity.
FR28: Computational Services shall derive traffic counts from probe vehicle data.
FR29: Computational Services shall derive traffic distribution occupancy.
FR30: Computational Services shall derive freeway queue length.
FR31: Computational Services shall derive arterial queue length.
FR32: Computational Services shall derive travel time.
FR33: Computational Services shall derive turning movements.
FR34: The DUAP System shall infer incidents from probe vehicle data.
FR35: Computational Services shall infer incident location type and severity.
FR36: The DUAP System shall derive road surface weather observations.
FR37: The DUAP System shall derive travel demand.
FR38: The DUAP System shall derive roadway surface conditions.
FR39: Computational Services shall derive pavement surface conditions.
FR40: Computational Services shall derive bridge surface conditions.
FR41: Computational Services shall derive pothole locations.
FR42: Computational Services shall derive pothole severity.
FR43: The DUAP System shall identify high risk locations.
FR44: The DUAP System shall calculate measures of effectiveness.
FR45: The DUAP System shall perform data quality checking.
FR46: The DUAP System shall log Computational Services data transactions.
FR47: The DUAP System shall store geo-references for Michigan roadways.
FR48: The DUAP System shall store system configuration data.
FR49: The DUAP System shall publish data.
FR50: The DUAP System shall publish alerts.
FR51: The DUAP System shall log Output Services data transactions.
FR52: Presentation Services shall present published data.
FR53: Presentation Services shall include a traffic information browser.
FR54: Browsers shall allow unit selection between Metric and English.
FR55: Browsers shall display map icons for data locations.
FR56: Map display shall allow data layer selection.
FR57: Map display shall support traffic item layers.
FR58: Map display shall support pan and zoom.
FR59: Map display shall support decluttering for large areas.
FR60: Browsers shall provide tabular location data.
FR61: Tabular display shall allow data selection.
FR62: Presentation Services shall include an incident information browser.
FR63: Presentation Services shall include a traveler information browser.
FR64: Presentation Services shall include an asset condition browser.
FR65: Presentation Services shall include a weather information browser.
FR66: The DUAP System shall require users to log in for system access.

Non-Functional Requirements (NFR)
NFR1: Data elements shall include roadway event fields per SAE J2354 structure.
NFR2: Input Services shall include weather fields per SAE J2354 structure.
NFR3: Input Services shall include roadway traffic fields per SAE J2354 structure.
NFR4: Data elements shall include probe vehicle fields per SAE J2735 format.
NFR5: The DUAP System shall cache data for one week.
NFR6: The DUAP System shall allow access to data immediately after caching.
NFR7: The DUAP System shall archive cached data.
NFR8: Output Services shall publish traveler data in SAE J2354 format.
NFR9: Traffic browser shall support HTML4.01 JavaScript and XML 1.0.
NFR10: Incident browser shall support HTML4.01 JavaScript and XML 1.0.
NFR11: Traveler browser shall support HTML4.01 JavaScript and XML 1.0.
NFR12: Asset browser shall support HTML4.01 JavaScript and XML 1.0.
NFR13: Weather browser shall support HTML4.01 JavaScript and XML 1.0.
NFR14: The DUAP System shall conform to Michigan Department of Information Technology standards.
NFR15: The DUAP System shall use a Java software foundation.
NFR16: The DUAP System shall use JDBC for database interaction.
NFR17: The DUAP System shall support Oracle 10G.
NFR18: The DUAP System shall use standard SQL commands.
NFR19: The DUAP System shall use Michigan Geographic Framework geo-references."
"2008 - keepass";"KeePass organizes user credentials in a hierarchical group structure secured by a master password and optional key file. It supports entry management auto-type sequences password generation and one-time Transaction Authentication Numbers."; "Functional Requirements (FR)
FR1: The system shall allow creation of a new database.
FR2: The system shall allow opening an existing database.
FR3: The system shall allow saving changes to the database.
FR4: The system shall allow printing a selection of stored data.
FR5: The system shall allow searching for keywords in the database.
FR6: The system shall allow organizing data into groups and subgroups.
FR7: The system shall allow creating new groups or subgroups with a name and adding entries.
FR8: The system shall allow renaming existing groups and subgroups.
FR9: The system shall allow deleting groups and subgroups.
FR10: The system shall allow searching by title username password URL notes or group name.
FR11: The system shall allow adding new entries to the database.
FR12: The system shall allow modifying existing entries.
FR13: The system shall allow duplicating an entry within the same group.
FR14: The system shall allow deleting entries.
FR15: The system shall allow selecting the application language.
FR16: The system shall allow defining auto-type keypress sequences.
FR17: The system shall include a Help page.
FR18: The system shall allow unlocking the database with a master password a key file or both with consistent composition.
FR19: The system shall require a master key for database access and irreversibly lock the database if forgotten.
FR20: The system shall require a key file for database access and irreversibly lock the database if the file is lost.
FR21: The system shall allow specifying a database file path in the command line to open on startup.
FR22: The system shall allow importing and exporting files to and from the database.
FR23: The system shall allow switching focus back to KeePass from another application.
FR24: The system shall generate random passwords containing uppercase lowercase letters and numbers for new entries.
FR25: The system shall allow creating one-time Transaction Authentication Numbers.
FR26: The system shall prevent changing title username or URL in a Transaction Authentication Number entry.
FR27: The system shall automatically expire each Transaction Authentication Number after use.

Non-Functional Requirements (NFR)
NFR1: Auto-type sequences shall be limited to 59 characters.
NFR2: Copied passwords shall remain in memory for only ten seconds.
NFR3: The application shall run on .NET Mono and Win32 environments.
NFR4: Modal windows shall block access to the main database window until closed.
NFR5: The application shall leave no residual data on uninstall."
"0000 - inventory";"IUFA integrates three faculty databases and provides a secure web interface for accessing and managing inventory assets during working hours. Assets are classified as rooms and space, software licenses, or other assets. The application supports transferring, editing, modifying, and adding assets, creating borrow or reserve requests, returning assets, creating spaces, approving requests, authentication, search, permission management and report generation."; "Functional Requirements (FR)
FR1: Transferring assets within the same department shall update the database directly without a request.
FR2: Transferring assets between departments shall require approval by a departmental administrator and a faculty group member unless initiated by a higher-level group.
FR3: Transferring assets between faculties shall allow any authorized user to request and require approval by the faculty group or higher level.
FR4: Transferring assets outside the university shall require approval by the university group.
FR5: Administrative and inventory users shall be able to edit assets belonging to their department and higher-level users within their authorization.
FR6: All asset fields except identifiers shall be modifiable.
FR7: The system shall support bulk file uploads to modify assets.
FR8: Departmental and authorized inventory group members shall be designated as asset owners for department assets.
FR9: Faculty members shall be able to add assets for their related departments.
FR10: University group members shall be able to add all assets in the inventory.
FR11: The system shall support bulk file uploads to add multiple assets.
FR12: The system shall allow creation of borrow or reserve location requests.
FR13: Any authorized user shall be able to create a request.
FR14: Created requests shall remain pending until approved by an authorized administrator.
FR15: Inventory users shall verify returned assets and update the inventory.
FR16: IT group members shall be able to create new spaces and modify floor structures upon exception requests.
FR17: Authorized users shall be able to view and approve pending requests at their level.
FR18: Users shall receive email notifications upon request approval.
FR19: Approved requests shall be added to a pending execution list.
FR20: The inventory shall update upon asset return.
FR21: The system shall require username and password authentication for all users.
FR22: Administrative users shall be able to delegate actions to other users granting them inventory administrator roles.
FR23: The system shall report assets by location.
FR24: The system shall allow users to generate reports.

Non-Functional Requirements (NFR)
NFR1: Staff learning time shall be at most four hours.
NFR2: The web interface shall use clear consistent terminology for basic internet and office users.
NFR3: The application shall be available during working hours, with maintenance and backups performed outside working hours.
NFR4: The application shall run on Microsoft and Unix platforms.
NFR5: The web interface shall be compatible with IE, Firefox, Chrome, Opera, and Safari.
NFR6: Queries running longer than one minute shall be terminated.
NFR7: Backups shall run monthly."
"2005 - pontis";"Pontis 5.0 is a next-generation bridge management system supporting inspection, preservation policy recommendation, condition prediction, needs analysis, budgeting, reporting, and integration with agency systems. It provides web and client interfaces, XML data exchange, advanced modeling, and multiple asset support while maintaining National Bridge Inventory compatibility."; "Functional Requirements (FR)
FR1: The user shall be able to view physical inventory data through the Pontis GUI.
FR2: The user shall be able to switch between predefined structure lists.
FR3: The user shall be able to select structures by ID district county geographic group ownership custodianship functional class NHS status system status inspector bridge group inspection dates environment and elements with privilege-based restrictions.
FR4: The user shall be able to find structures by ID name intersected feature facility carried route number LRS posts structure type design type material or notes with privilege-based restrictions.
FR5: The user shall be able to enter a SQL WHERE clause in the Find and Filter windows and run the query with error reporting and automatic bridge-level security.
FR6: The user shall be able to select a structure by typing its ID and have the display scroll to it with automatic security enforcement.
FR7: The system shall display data in the configured unit of measurement as a permanent modal setting.
FR8: The user shall be able to select bridges on a map display and generate bridge lists for simulations or inspection rosters.
FR9: The user shall be able to view project planning data through the GUI.
FR10: The user shall be able to switch between predefined project lists.
FR11: The user shall be able to filter and select projects by structure ID project ID program action type status review status treatment year and end date.
FR12: The user shall be able to find projects by ID name status structure ID or program.
FR13: The user shall be able to filter and select work candidates by the same criteria as projects.
FR14: The user shall be able to enter a SQL WHERE clause against projects with error reporting and automatic security.
FR15: The user shall be able to select a project by typing its ID with automatic security and scrolling.
FR16: The user shall be able to select projects on a map display and generate project/bridge lists.
FR17: The user shall be able to execute predefined reports for bridge data project data preservation models simulations and configuration.
FR18: The system shall allow creation of arbitrary bridge or project reports by selecting map driver records.
FR19: The system shall allow creation or refresh of map displays from selected bridge or project records.
FR20: The user shall be able to create a new structure with a user-defined bridge key.
FR21: The user shall be able to duplicate an existing structure.
FR22: The user shall be able to import new structures from supported file types including PDI NBI and XML.
FR23: The user shall be able to edit and remove existing structures.
FR24: The system shall allow marking bridges inactive or closed and automatically filter them.
FR25: The system shall support management of bridges in design or preconstruction state.
FR26: The user shall be able to renumber bridge keys globally with privilege restrictions.
FR27: The user shall be able to create new inspections by copying previous inspections.
FR28: The user shall be able to create new inspections from scratch.
FR29: The user shall be able to select previous inspections by date type inspector or control group for copying.
FR30: The system shall provide a short-form interface for inspection data entry.
FR31: The user shall be able to copy notes from previous inspections when creating new ones.
FR32: The user shall be able to add new elements to a structure.
FR33: The user shall be able to edit all NBI data.
FR34: Only privileged users shall modify calculated appraisal ratings.
FR35: The user shall be able to edit element inspection data.
FR36: The user shall be able to edit inventory items excluding derived ratings.
FR37: The user shall be able to edit inspection and structure notes.
FR38: The system shall store notes in plain text or XML with configurable field size.
FR39: The user shall be able to create and edit work recommendations with quantity estimates.
FR40: The user shall be able to enter and update inspection planning information.
FR41: The user shall be able to link and manage multimedia files.
FR42: The system shall provide an inspection scheduling tool.
FR43: The system shall allow locking down inspection records to prevent modification.
FR44: Privileged users shall be able to delete inspections unless locked.
FR45: The user shall be able to sort element data by unit number environment and quantity.
FR46: The user shall be able to view and compare any two inspections in a tiled presentation highlighting differences.
FR47: The system shall provide a configurable tracking mechanism for inspection field review and approval.
FR48: The system shall calculate NBI condition ratings.
FR49: The system shall calculate and store bridge Sufficiency Ratings.
FR50: The system shall calculate appraisal ratings.
FR51: The system shall calculate Structurally Deficient/Functionally Obsolete status.
FR52: The system shall control updates to calculated ratings based on privileges.
FR53: The system shall prompt users to recalculate ratings when dependent fields change.
FR54: The administrator shall configure recalculation behavior with options for silent or confirmed updates.
FR55: The system shall eliminate dependencies on workstation control files.
FR56: The system shall update preservation transition probabilities from expert input.
FR57: The system shall create cost and deterioration elicitation records.
FR58: The system shall update preservation action costs from expert input.
FR59: The system shall update do-nothing transition probabilities from historical data.
FR60: The user shall be able to edit cost and deterioration models and view immediate impacts.
FR61: The system shall develop optimal preservation policies using configured costs and probabilities.
FR62: The system shall restore previous action costs probabilities and policies.
FR63: The system shall support multiple cost and deterioration models.
FR64: The system shall incorporate Health Index targets in preservation models.
FR65: The system shall streamline the model generation process.
FR66: The system shall compute long-term costs for health index targets by element and structure.
FR67: The user shall specify simulation timeframe thresholds project types needs and budget.
FR68: The user shall update unit costs and policy standards for the improvement model.
FR69: The user shall modify simulation technical parameters and rules.
FR70: The user shall select structural elements for simulation.
FR71: The system shall run program simulations and store results.
FR72: The user shall choose work recommendations inspector candidates and custom items for simulation.
FR73: The system shall run bridge analysis and store results.
FR74: The system shall provide a Bridge Analysis Dashboard for work scheduling impact and life-cycle cost analysis.
FR75: The user shall create new programs manually.
FR76: The user shall edit or delete programs.
FR77: The user shall create new projects manually.
FR78: The user shall edit or delete projects.
FR79: The user shall assign or remove work items from projects.
FR80: The user shall split projects into multiple or combine into master projects.
FR81: The user shall batch-update multiple projects.
FR82: The user shall edit project planning data through the GUI.
FR83: The system shall track funding levels and warn if budgets exceed funding.
FR84: The system shall group work candidates by action type.
FR85: The system shall validate NBI data in batch mode.
FR86: The user shall exchange data in NBI PDI and XML formats.
FR87: The user shall archive data for existing and removed structures.
FR88: The system shall store export/import control metadata centrally.
FR89: The system shall separate transient and static batch control records.
FR90: The user shall archive data for existing and removed structures.
FR91: The system shall filter archiving operations by structure status.
FR92: The system shall provide reporting for archived data.
FR93: The user shall restore archived data.
FR94: The system shall timestamp row changes in the database.
FR95: The administrator shall create and edit application roles.
FR96: The system shall provide a UI for role management.
FR97: The administrator shall assign users to roles.
FR98: The administrator shall assign permissions to roles.
FR99: The administrator shall add new users.
FR100: The user shall modify their basic profile.
FR101: The administrator shall create bridge-level access filters.
FR102: The administrator shall assign bridge-level filters to users.
FR103: The administrator shall remove or disable user access.
FR104: The system shall validate credentials at login.
FR105: The system shall authorize access by privileges at login.
FR106: The system shall track login and logout activity.
FR107: The system shall allow concurrent user sessions.
FR108: The administrator shall configure units of measure permanently.
FR109: The administrator shall configure dropdown list values.
FR110: The administrator shall create agency-specific elements and definitions.
FR111: The administrator shall add custom structure lists.
FR112: The administrator shall configure element environment material and category definitions.
FR113: The administrator shall add custom project lists.
FR114: The administrator shall configure default scenario parameters.
FR115: The administrator shall configure system operational options.
FR116: The system shall validate configuration options and detect conflicts.
FR117: The system shall provide diagnostic reports for configuration validation.
FR118: The administrator shall configure UI labels and screen displays.
FR119: The system shall interface with external services.
FR120: The system shall provide secured tools for overriding check-out status.
FR121: The system shall provide secured tools for clearing batch tables for deadlock resolution.
FR122: The system shall provide predefined secured admin reports for users roles privileges sessions and check-out status.

Non-Functional Requirements (NFR)
NFR1: The application shall look and feel consistent across web and standalone environments.
NFR2: The developer shall support existing PowerBuilder 9 custom forms and reports where feasible.
NFR3: The repository shall store at least 50000 bridges.
NFR4: The repository shall store at least 30 inspections per bridge.
NFR5: The repository shall store an average of 50 work recommendations per bridge.
NFR6: The repository shall store at least 20 scenarios.
NFR7: The repository shall store at least 50000 projects.
NFR8: The repository shall support 500 registered users with 25 simultaneous sessions.
NFR9: The repository shall support 150 simultaneous view-only users.
NFR10: The repository shall support two concurrent batch processes.
NFR11: Login and logout shall complete in 2 seconds or less.
NFR12: Creating a new bridge record shall complete in 3 seconds or less.
NFR13: The application shall be available 18 hours per day 353 days per year with 98% uptime."
"1998 - themas";"THEMAS is an independent hardware and software control system for heating and cooling, divided into monitoring, utilization, initialization, and reporting modules with supervisory alarms and event logging."; "Functional Requirements (FR)
FR1: The THEMAS system shall control the heating and cooling units defined in the initialization file.
FR2: The THEMAS system shall read unit definitions from an initialization data file during initialization.
FR3: Each thermostat shall have a unique identifier loaded into THEMAS from the initialization file.
FR4: Each quadrant on each floor shall have a thermostat providing temperature data to THEMAS.
FR5: The initialization file shall list unique thermostat identifiers that THEMAS shall load at startup.
FR6: THEMAS shall enforce a maximum number of heating or cooling units that may run concurrently.
FR7: The maximum concurrent unit count shall reside in and be read from the initialization file.
FR8: THEMAS shall use trigger values and current temperature to determine unit on/off actions.
FR9: Upon initialization THEMAS shall turn off all units then reactivate needed units based on thermostat settings.
FR10: THEMAS shall ensure reported temperatures do not deviate by more than 3°F from valid range.
FR11: THEMAS shall ignore temperature readings outside the specified valid range.
FR12: THEMAS shall ignore readings outside a reasonable temperature value.
FR13: THEMAS shall read the valid temperature range from the initialization file at startup.
FR14: THEMAS shall detect when current or set temperatures exceed overtemperature limits.
FR15: THEMAS shall compare reported temperatures to settings and report those within limits for processing.
FR16: When temperature exceeds the setting by a threshold THEMAS shall activate the appropriate unit.
FR17: THEMAS shall test each thermostat for satisfaction of settings and need for unit activation.
FR18: THEMAS shall limit and control the number of concurrently running units.
FR19: THEMAS shall maintain the ON/OFF status of each unit.
FR20: On unit-on requests THEMAS shall honor the request or add it to a LIFO queue if at capacity.
FR21: On unit-off requests THEMAS shall dequeue and honor waiting requests if capacity allows.
FR22: THEMAS shall generate and log an event when a turn-on request is denied.
FR23: THEMAS shall accept and act upon designated on/off requests including unit identifier and flag.
FR24: THEMAS shall provide control signals and status indications for each unit.
FR25: THEMAS shall generate alarm events for invalid temperatures or exceeded limits.
FR26: THEMAS shall distinguish between invalid temperature and limit-exceeded alarms.
FR27: On invalid temperature THEMAS shall emit alternating 500 Hz and 700 Hz beeps of 0.75 s until reset.
FR28: On limit-exceeded THEMAS shall emit alternating 1000 Hz and 1500 Hz beeps of 0.5 s until reset.
FR29: THEMAS shall record each alarm event for statistical and operational reports.
FR30: THEMAS shall generate event data identifying each event type and message.
FR31: THEMAS shall allow the supervisor to change any thermostat setting.
FR32: The supervisor interface shall display all thermostats and their current settings.
FR33: The supervisor shall select a thermostat and choose a valid new temperature from a list.
FR34: THEMAS shall provide two report types: twelve-month operational history and monthly statistical summary."
"2001 - ctc network.pdf";"This system implements the Dallas/Ft. Worth Regional Center-to-Center (C2C) Communications Network to exchange traffic data and device control information among dissimilar TMCs via ITS standards–based formats, supporting web and Windows clients and extensible repository linking."; "Functional Requirements (FR)
FR1: For each roadway network maintained, the Center shall provide network identifier, network name, number of links, number of nodes, list of link data, and list of node data.
FR2: The Center shall provide for each link: link identifier, link name, road number, link type and description, start node, end node, direction, length, capacity, speed limits (including truck), and number of lanes.
FR3: The Center shall provide for each node: node identifier, node name, jurisdiction, owner, latitude/longitude, node type and description, and number of connected links.
FR4: For each defined link, the Center shall provide network and link identifiers, data type and description, delay, travel time, volume, speed, density, and occupancy.
FR5: The Center shall support for each incident: network identifier, incident ID and description, roadway and cross street, latitude/longitude, link and direction, status, update type, affected lanes, classification, severity, type and description, road conditions, weather, confirmed and cleared date/time.
FR6: The Center shall support for each lane closure: network identifier, closure ID and description, start and end roadway and cross street with coordinates, direction, link identifier, status, update type, affected lanes, source, contact, days closed, start/end time of day and series dates.
FR7: The system shall support Dynamic Message Sign data transmission.
FR8: The Center shall provide for each DMS: network identifier, DMS ID and name, location, sign geometry, status, current MULTI-line message, and beacon status.
FR9: The Center shall support DMS control commands with network ID, DMS ID, username, password, beacon state, and immediate MULTI-line message.
FR10: The system shall support Lane Control Signal data transmission.
FR11: The Center shall provide for each LCS: network ID, LCS ID and name, location, geometry, head capabilities, status, and current pattern.
FR12: The Center shall support LCS control commands with network ID, LCS ID, username, password, and signal pattern.
FR13: The Center shall provide for each CCTV: network ID, CCTV ID and name, location, status, lock state and holder, supported and current direction, preset, pan, tilt, zoom, focus, and iris.
FR14: The Center shall support CCTV control requests with network ID, CCTV ID, username, password, and lock, direction, preset, absolute or offset pan/tilt/zoom/focus/iris commands.
FR15: The Center shall support video snapshots with network ID, CCTV ID and name, status, current direction, snapshot size, and JPEG image.
FR16: The Center shall support CCTV switching with network ID, username, password, input and output channel identifiers.
FR17: The Center shall support for each ramp meter: network ID, ramp meter ID and name, location, status, status source, plan, and cycle time.
FR18: The Center shall support ramp meter control commands with network ID, ramp meter ID, username, password, plan, and duration.
FR19: The system shall support Highway Advisory Radio data transmission.
FR20: The Center shall provide for each HAR: network ID, HAR ID and name, location, status, current message and text.
FR21: The Center shall support HAR control commands with network ID, HAR ID, username, password, message, text, and duration.
FR22: The Center shall support for each traffic signal: network ID, signal ID and name, location, status and source, state, failure state, plan and expiration, and preemption.
FR23: The Center shall support traffic signal control commands with network ID, signal ID, username, password, plan ID, and duration.
FR24: The system shall support Environmental Sensor Station data transmission.
FR25: The Center shall provide for each ESS: network ID, sensor ID and name, type, location, status, reading with units, and alarm status.
FR26: The system shall support High Occupancy Vehicle data transmission.
FR27: The Center shall provide for each HOV: network ID, HOV ID and name, link ID, status and failure state, plan, state, source, occupant count, and next transition time.
FR28: The Center shall support HOV lane control commands with network ID, HOV lane ID, username, password, lane plan, and duration.
FR29: The Center shall provide for each railroad crossing: network ID, link ID, crossing ID and name, location, status, rail type, estimated clear and arrival times, and closing signal type.
FR30: The Center shall provide for each parking lot: network ID, lot ID and name, location, status, capacity, utilization, entrance, restrictions, and special capabilities.
FR31: The Center shall provide for each school zone: network ID, link ID, zone ID and name, location, status, failure state, plan, and source.
FR32: The Center shall support school zone control commands with network ID, zone ID, username, password, and plan.
FR33: The Center shall provide for each reversible lane: network ID, lane ID and name, link ID, indicator status and failure state, plan, direction, transition time, and status source.
FR34: The Center shall support reversible lane control commands with network ID, lane ID, username, password, plan, and duration.
FR35: The Center shall support dynamic lane control commands with network ID, lane ID, username, password, lane plan, and duration.
FR36: The Center shall provide for each bus stop: network ID, link ID and relative location, stop ID and name, node location, bus routes, and frequency.
FR37: The Center shall provide for each bus location: network ID, link ID, bus ID and name, location, schedule adherence, vehicle attributes, and capacity.
FR38: The Center shall provide for each light/commuter rail stop: network ID, link ID, stop ID and name, location, routes, and frequency.
FR39: The Center shall provide for each light/commuter rail vehicle: network ID, link ID, vehicle ID and name, location, schedule adherence, vehicle attributes, and capacity.
FR40: The Center shall provide for each park-and-ride lot: network ID, lot ID and name, location, status, capacity, utilization, entrance, restrictions, and special capabilities.
FR41: The Center shall provide for each vehicle priority request: vehicle and network IDs, link and intersection IDs, request status, departure and desired arrival times, priority, vehicle classification, and service strategy.
FR42: The device status requester and Center shall support command time-frame requests with network ID and device type.
FR43: The device status requester and Center shall support command time-frame requests with network ID, device type, days and times commands accepted.
FR44: The Data Collector shall support storage of TMDD data elements and message set information.
FR45: The map shall display interstates and state highways using basemap data from NCTCOG GeoData warehouse.
FR46: The map user shall be able to alter zoom level and pan north, south, east, or west.
FR47: Each map link shall be color-coded by speed using configurable thresholds.
FR48: The map shall display current incidents as icons and allow clicking for details.
FR49: All current incidents shall be displayed in a table with location, type, severity, status, direction, and lanes.
FR50: The map shall display DMS locations and current messages.
FR51: The map shall display LCS locations and current signals.
FR52: The map shall display CCTV locations and status.
FR53: The Incident GUI shall allow entry, modification, and deletion of incidents and lane closures with full attribute sets.
FR54: The GUI shall list previously entered incidents and lane closures.
FR55: On startup the GUI shall prompt for username and password.
FR56: The GUI shall allow selection of network ID and issuance of device control commands for each device type in a selected Center.
FR57: The C2C shall operate in normal mode, combining data into a single data store.
FR58: The C2C shall operate in test mode, performing normal operations and logging activity.

Non-Functional Requirements (NFR)
NFR1: The C2C Server shall execute in a Microsoft Windows NT environment.
NFR2: A DATEX/ASN runtime library shall be available on any computer communicating to the C2C project.
NFR3: The C2C shall be implemented in the C/C++ programming language.
NFR4: The Incident GUI shall be implemented using C/C++ and ESRI Map Objects."
